{"version":3,"sources":["cv.jpeg","config/Fire.js","config/actions/index.js","Project.js","projects.js","about.js","list.js","Add.js","Edit.js","Backend.js","Login.js","Admin.js","App.js","serviceWorker.js","config/reducers/allposts.js","config/reducers/index.js","config/reducers/posts.js","config/store.js","index.js","logo.svg"],"names":["module","exports","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","base","Rebase","createClass","database","storage","statCardsRef","ref","child","postsFetched","posts","type","getAllStatPostsImages","images","dispatch","a","payload","ticking","Project","props","handleScroll","window","scrollY","requestAnimationFrame","console","log","navRef","current","style","top","getComputedStyle","React","createRef","state","email","password","addEventListener","this","removeEventListener","from","opacity","marginTop","to","config","duration","className","backgroundColor","color","position","maxWidth","height","marginBottom","title","class","dangerouslySetInnerHTML","__html","text","map","object","i","id","src","Component","mapDispatchToProps","ProjectContainer","connect","allposts","statPostImages","Projects","onLog","bind","data","posts2","ref2","licznik","temp","setState","forEach","post","onAction","list","then","result","items","imageRef","getDownloadURL","url","push","catch","error","div","item","key","ProjectsContainer","statPostState","About","require","List","results","len","length","data2","li","pathname","ListContainer","Add","fileSelectedHandler","event","target","files","add","currentUser","postsRef","syncState","context","e","preventDefault","value","uuid","htmlFor","onChange","handleChangeTitle","name","placeholder","handleChangeText","handleChangeColor","onClick","login","marginLeft","AddContainer","Edit","handleImageAsFile","image","file","deletePost","location","remove","delete","update","handleChangeEditor","imagePreviewUrl","databaseRef","uploadTask","put","onprops","reader","FileReader","onloadend","readAsDataURL","editor","$imagePreview","theme","width","EditContainer","Backend","logout","removeBinding","auth","signOut","exact","path","component","Login","handleChange","signup","signInWithEmailAndPassword","u","createUserWithEmailAndPassword","aria-describedby","Admin","user","authListener","onAuthStateChanged","localStorage","setItem","uid","removeItem","App","sendState","onSync","onPush","onImage","articles","temporary","getAllStatPostsAction","prefixes","foldername","result2","imageRef2","filename","array","snap","on","snapshot","val","AppContainer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","combineReducers","action","Object","values","devTools","__REDUX_DEVTOOLS_EXTENSION__","enhancer","compose","applyMiddleware","reduxThunk","store","createStore","reducers","ReactDOM","render","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.33d02645.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cv.38538d00.jpeg\";","import firebase from 'firebase';\r\nimport Rebase from 're-base';\r\nimport 'firebase/storage';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCxsv4y868zkAL-d13UqdeiaKs7MRSGpK8\",\r\n    authDomain: \"dominiksite-2841e.firebaseapp.com\",\r\n    databaseURL: \"https://dominiksite-2841e.firebaseio.com\",\r\n    projectId: \"dominiksite-2841e\",\r\n    storageBucket: \"dominiksite-2841e.appspot.com\",\r\n    messagingSenderId: \"844680785618\",\r\n    appId: \"1:844680785618:web:6b61ee1c1fb0bc57a6870b\",\r\n    measurementId: \"G-074D69LJ96\"\r\n  };\r\n  // Initialize Firebase\r\n  \r\n  const fire = firebase.initializeApp(config)\r\n  const base = Rebase.createClass(fire.database())\r\n  const firestore =firebase.database();\r\n  const storage = fire.storage()\r\n  export  {storage, fire, base, firestore}\r\n","import {fire  , base,storage}  from '../Fire';\r\nconst databaseRef = fire.database().ref();\r\n// this is to get the stat-cards table from firebase\r\nconst statCardsRef = databaseRef.child(\"posts\");\r\nconst storageRef = storage.ref().child('images');\r\n\r\nexport const postsFetched = (posts) => ({\r\n    type: 'FETCH_POSTS_SUCCESS',\r\n    posts\r\n  });\r\nexport const getAllStatPostsAction = () => async dispatch =>\r\n{\r\n  statCardsRef.on(\"value\", snapshot => {\r\n    dispatch({\r\n      type: \"getAllStatPosts\",\r\n      // if the json returns null, i.e. the\r\n      // stat-cards table is blank - empty\r\n      // then we'll return an empty object\r\n      payload: snapshot.val() || {}\r\n    });\r\n  });\r\n}\r\nexport const getAllStatPostsImages = (images) => async dispatch =>\r\n{\r\n \r\n    dispatch({\r\n      type: \"getAllStatImages\",\r\n      // if the json returns null, i.e. the\r\n      // stat-cards table is blank - empty\r\n      // then we'll return an empty object\r\n      payload: images\r\n      \r\n    });\r\n  \r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {Spring} from 'react-spring/renderprops'\r\nimport { postsFetched,getAllStatPostsImages } from \"./config/actions/index\";\r\nimport './style.css';\r\nlet lastScrollY = 0;\r\nlet ticking = false;\r\nexport class Project extends Component {\r\n  constructor(props) {\r\n    \r\n    super(props);\r\n    this.navRef = React.createRef();\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    };\r\n  }\r\n  componentDidMount(){\r\n  \r\n    window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n    componentWillUnmount() {\r\n      window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n    handleScroll = () => {\r\n      lastScrollY = window.scrollY;\r\n  \r\n      if (!ticking) {\r\n        window.requestAnimationFrame(() => {\r\n          //this.navRef.current.style.top = `${lastScrollY}px`;\r\n          console.log(this.navRef.current.style.top);\r\n          const styles = getComputedStyle(this.navRef.current)\r\n  \r\n          //console.log(styles) // rgb(0, 0, 0)\r\n         \r\n          ticking = false;\r\n        });\r\n     \r\n        ticking = true;\r\n      }\r\n    };  \r\n  render() {\r\n    console.log(this.props.images);\r\n    const spanStyles = {\r\n      color: \"#fff\",\r\n      borderColor: \"#00f\"\r\n    };\r\n      let styles = {\r\n        margin: '20px',\r\n        width: '250px',\r\n        height: '250px',\r\n        backgroundColor: \"yellow\",\r\n      };\r\n      const renderAuthButton=\"\";\r\n      \r\n    return (\r\n\r\n\r\n\r\n      <Spring\r\n  from={{ opacity: 0, marginTop: -500 }}\r\n  to={{ opacity: 1, marginTop: 0 }}\r\n  config={{duration:1000}}>\r\n    \r\n  {props => <div style={props}>      <div  ref={this.navRef} className=\"container\" style={{backgroundColor: this.props.color,position: \"relative\",maxWidth: '100%'}}>\r\n            <div className=\"row justify-content-md-center\">\r\n       <div className=\"col-12 \" style={{height: 200}}>\r\n       <h1 style={{marginTop: '50px', marginBottom: '50px'}}>{this.props.title}</h1>\r\n    \r\n  \r\n    <div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n    <div dangerouslySetInnerHTML={{ __html: this.props.text }} />\r\n   \r\n    </div>\r\n    <div class=\"col\">\r\n    {this.props.images.map(function(object,i){\r\n\r\nreturn (\r\n\r\n<div>\r\n       {\r\n            object[0] ==this.props.id && <p><img src={object[1]} className=\"images\" ></img></p>\r\n       }\r\n    </div>)\r\n},this)}\r\n    </div>\r\n  </div></div>\r\n\r\n\r\n\r\n      \r\n \r\n\r\n  \r\n    \r\n </div>\r\n </div>\r\n </div></div>}\r\n</Spring>\r\n  \r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n   \r\n    images: state.allposts.statPostImages\r\n  }\r\n};\r\nconst mapDispatchToProps = { getAllStatPostsImages };\r\n\r\nexport const ProjectContainer = connect(mapStateToProps, mapDispatchToProps)(Project);","import React, { Component } from 'react';\r\nimport { postsFetched,getAllStatPostsImages } from \"./config/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport Project, { ProjectContainer } from './Project';\r\nimport {fire  , base, storage}  from './config/Fire';\r\nlet lastScrollY = 0;\r\nlet ticking = false;\r\nexport class Projects extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.navRef = React.createRef();\r\n    this.onLog = this.onLog.bind(this);\r\n    this.handleScroll = this.handleScroll.bind(this);\r\n    this.state = {\r\n        data: [\"1\",\"2\"],\r\n        posts: [],\r\n        posts2: [],\r\n        ref2: [],\r\n        licznik: 1\r\n      };\r\n}\r\nref2(temp){\r\n  this.setState({\r\n    ref2: temp\r\n    \r\n});\r\n\r\n}\r\nlicznik(temp){\r\n  this.setState({\r\n    licznik: temp\r\n    \r\n});\r\n}\r\ncomponentDidMount(){\r\n  if (this.props.posts2){\r\n  this.props.posts2.forEach( (post) => {\r\n    this.onAction(post.id);\r\n    \r\n  })\r\n  }\r\n\r\n  \r\n//window.addEventListener('scroll', this.handleScroll);\r\n}\r\ncomponentDidUpdate(){\r\n  console.log(this.props.posts);\r\n  \r\n }\r\n componentWillUnmount() {\r\n // window.removeEventListener('scroll', this.handleScroll);\r\n}\r\n\r\n\r\n  \r\n  handleScroll = () => {\r\n    lastScrollY = window.scrollY;\r\n\r\n    if (!ticking) {\r\n      window.requestAnimationFrame(() => {\r\n        //this.navRef.current.style.top = `${lastScrollY}px`;\r\n        console.log(this.navRef.current.style);\r\n        const styles = getComputedStyle(this.navRef.current)\r\n\r\n        //console.log(styles) // rgb(0, 0, 0)\r\n       \r\n        ticking = false;\r\n      });\r\n   \r\n      ticking = true;\r\n    }\r\n  };\r\n  onAction(id){\r\n    \r\n    var temp =[];\r\n    var storageRef = storage.ref('/images/'+id);\r\n   \r\n    storageRef.list().then(function(result) {\r\n      console.log(result.items);\r\n      result.items.forEach(function(imageRef) {\r\n        imageRef.getDownloadURL().then(function(url) {\r\n          console.log( \"adres obrazka\",url);\r\n          temp.push(url);\r\n          return url;\r\n      });\r\n       console.log(imageRef);\r\n        // And finally display them\r\n     \r\n      //console.log(imageRef.getDownloadURL());\r\n     \r\n        //this.onImage(imageRef);\r\n        //console.log(imageRef.getDownloadURL());\r\n      });\r\n    }).catch(function(error) {\r\n      // Handle any errors\r\n    });\r\n\r\n    this.ref2(temp);\r\n\r\n        console.log(\"aktualny\",this.state.ref2);\r\n   // const storageRef = storage.ref('/images/1576580835000').getDownloadURL();\r\n    //this.props.getAllStatPostsImages(temp);\r\n\r\n    \r\n    //console.log(this.props.posts2);\r\n    //console.log(this.props.images);\r\n  }\r\n\r\n \r\n onLog(){\r\n   console.log(this.props.posts);\r\n }\r\n  render() {\r\n    \r\n      //wyśietlanie listy projektów\r\n      var dane=this.props.posts;\r\n      console.log(this.props.images);\r\n   \r\n      var div;\r\n    if(this.props.posts2!= null){\r\n      div =this.props.posts2.map(function(item, i){\r\n        \r\n        //console.log({item});\r\n        //console.log(this.props.images);\r\n        // return <li className=\"list-group-item list-group-item-action\" key={i}><div className=\"row\"><div className=\"col-md\"></div><div className=\"col-md\">{item.title}</div><div className=\"col-md\">{item.text}</div></div></li>\r\n        return <section id={\"#Section\" + i}><ProjectContainer key={item.id} id={item.id}  title={item.title} text={item.text} color={item.color} /></section>\r\n      \r\n      }, this)\r\n      //this.licznik(this.state.licznik+1)\r\n\r\n    }else\r\n    {\r\n      return <li className=\"list-group-item list-group-item-action\">Ładowanie..</li>\r\n    }\r\n      \r\n      \r\n\r\n      return (\r\n        \r\n<div>\r\n{div}\r\n          <ul className=\"list-group\">\r\n              \r\n              \r\n             \r\n             \r\n          </ul>\r\n           </div>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    posts2: state.allposts.statPostState,\r\n    posts: state.posts,\r\n    images: state.allposts.statPostImages\r\n  }\r\n};\r\nconst mapDispatchToProps = { postsFetched,getAllStatPostsImages };\r\n\r\nexport const ProjectsContainer = connect(mapStateToProps, mapDispatchToProps)(Projects);","import React from 'react';\r\n\r\nconst About = () => {\r\n \r\n  return (\r\n    <div className=\"container\">\r\n      <h1>CV</h1>\r\n      <p><img src={require('./cv.jpeg')}></img></p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\nimport { postsFetched } from \"./config/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Link\r\n} from 'react-router-dom';\r\nexport class List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n   \r\n    this.state = {\r\n        data: [\"1\",\"2\"],\r\n        posts: [\"1\",\"2\"]\r\n      };\r\n}\r\ncomponentDidMount(){\r\n  var results = this.props.posts;\r\n            var data = [], item;\r\n            for (var i = 0, len = results.length; i < len; i++) {\r\n                item = results[i];\r\n                data.push({id: item.id, title: item.title});\r\n            }\r\n            //console.log(this.props.posts);\r\n            var data2 = this.props.data;\r\n            this.setState({data2});\r\n}\r\n  render() {\r\n      //works for array\r\n      var dane=this.props.posts;\r\n      console.log(this.props.posts2);\r\n      \r\n      if(this.props.posts2!= null){\r\n      var li =this.props.posts2.map(function(item, i){\r\n        console.log({item});\r\n        return <li className=\"list-group-item list-group-item-action\" key={i}  style={{backgroundColor: item.color}}><div className=\"row\"><div className=\"col-md\"> <Link to={{ pathname: '../admin/edit', title: item.title, text: item.text,color: item.color, id:item.id  }}>Edytuj</Link></div><div className=\"col-md\">{item.title}</div><div className=\"col-md\">{item.text}</div></div></li>\r\n      })\r\n    }\r\n      //doesn't work for array of objects\r\n      \r\n\r\n      return (\r\n        \r\n\r\n          <ul className=\"list-group\">\r\n              \r\n              {li}\r\n             \r\n             \r\n          </ul>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    posts2: state.allposts.statPostState,\r\n    posts: state.posts\r\n  }\r\n};\r\nconst mapDispatchToProps = { postsFetched };\r\n\r\nexport const ListContainer = connect(mapStateToProps, mapDispatchToProps)(List);","import React, { Component } from 'react';\r\nimport { postsFetched } from \"./config/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport {fire  , base}  from './config/Fire';\r\nimport { uuid } from 'uuidv4';\r\nexport class Add extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.add = this.add.bind(this);\r\n   \r\n   // this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n        posts: {},\r\n        currentUser: null,\r\n        title: 'sss',\r\n        text: '',\r\n        color:''\r\n      };\r\n}\r\ncomponentWillMount(){\r\n  this.postsRef = base.syncState('posts',{\r\n      context: this,\r\n      state: 'posts'\r\n  });\r\n\r\n  \r\n}\r\nhandleChangeTitle(e){\r\n  e.preventDefault();\r\n\r\n  const title = e.target.value;\r\n  this.setState({title});\r\n\r\n\r\n  console.log(this.state.title);\r\n\r\n}\r\nhandleChangeText(e){\r\n  e.preventDefault();\r\n  const text = e.target.value;\r\n \r\n  \r\n\r\n  this.setState({text});\r\n  console.log(e.target.value);\r\n \r\n\r\n}\r\nhandleChangeColor(e){\r\n  e.preventDefault();\r\n  const color = e.target.value;\r\n \r\n  \r\n\r\n  this.setState({color});\r\n  console.log(e.target.value);\r\n \r\n\r\n}\r\nadd(e){\r\n  e.preventDefault();\r\n  const posts = {...this.state.posts};\r\n  const id = uuid();\r\n  const title = this.state.title;\r\n  const text = this.state.text;\r\n  const color = this.state.color;\r\n  console.log(id);\r\n  posts[id] = {\r\n    id: id,\r\n    title: title,\r\n   text: text,\r\n   color: color\r\n   // owner: this.state.currentUser.uid\r\n  };\r\n  console.log( posts);\r\n  \r\n  this.setState({posts});\r\n  var data={\r\n      \"title\":title,\r\n      \"text\":text\r\n  };\r\n  //fire.database().ref().child('posts').child('1').set(data);\r\n  console.log(this.props.posts);\r\n}\r\nfileSelectedHandler= event => {\r\n  console.log(event.target.files[0]);\r\n}\r\ncomponentDidUpdate(){\r\n  console.log(this.props.posts);\r\n }\r\n \r\n  render() {\r\n      //wyśietlanie listy projektów\r\n     \r\n      \r\n\r\n      return (\r\n        <form>\r\n        <div className=\"form-group\">\r\n         <label htmlFor=\"title\">Tytuł</label>\r\n         <input type=\"textarea\"  value={this.state.title} onChange={this.handleChangeTitle.bind(this)} name=\"title\" className=\"form-control\" placeholder=\"Enter title\" />\r\n         <small id=\"emailHelp\" className=\"form-text \">We'll never share your email with anyone else.</small>\r\n        </div>\r\n         <div className=\"form-group\">\r\n        <label htmlFor=\"exampleInputPassword1\">treść</label>\r\n        <input value={this.state.text} name=\"name\" onChange={this.handleChangeText.bind(this)} type=\"textarea\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Text\" />\r\n      <input name=\"color\" value={this.state.color} type=\"color\" id=\"myColor\" onChange={this.handleChangeColor.bind(this)} ></input>\r\n      <input type=\"file\" onChange={this.fileSelectedHandler}/>\r\n        </div>\r\n        <button type=\"submit\" onClick={this.login} className=\"btn btn-primary\">Login</button>\r\n        <button onClick={this.add} style={{marginLeft: '25px'}} className=\"btn btn-success\">dodaj{this.state.title}</button>\r\n   </form>\r\n\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    \r\n    posts: state.posts\r\n  }\r\n};\r\nconst mapDispatchToProps = { postsFetched };\r\n\r\nexport const AddContainer = connect(mapStateToProps, mapDispatchToProps)(Add);\r\n","import React, { Component } from 'react';\r\nimport { postsFetched,getAllStatPostsImages } from \"./config/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport {storage, fire  , base, firestore}  from './config/Fire';\r\n\r\nimport 'quill/dist/quill.snow.css'; \r\nimport ReactQuill from 'react-quill';\r\nexport class Edit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.update = this.update.bind(this);\r\n    this.handleChangeEditor = this.handleChangeEditor.bind(this);\r\n   \r\n   // this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      file:'',\r\n      url:'',\r\n      imagePreviewUrl: '',\r\n        posts: {},\r\n        currentUser: null,\r\n        title: this.props.location.title,\r\n        text: this.props.location.text,\r\n        color:  this.props.location.color,\r\n        id: this.props.location.id\r\n      };\r\n}\r\n\r\ncomponentWillMount(){\r\n  this.postsRef = base.syncState('posts',{\r\n      context: this,\r\n      state: 'posts'\r\n  });\r\n  \r\n  \r\n}\r\nhandleImageAsFile = (e) => {\r\n  console.log(e.target.files[0]);\r\n  const image = e.target.files[0]\r\n this.setState({file: image})\r\n console.log(this.state.file);\r\n}\r\ncomponentDidMount(){\r\n \r\n\r\n}\r\nonprops(){\r\n  if (this.props.location.id!=this.state.id){\r\n  const title=this.props.location.title;\r\n  const text=this.props.location.text;\r\n  const id=this.props.location.id;\r\n  const color=this.props.location.color;\r\n  this.setState({ title: title});\r\n  this.setState({ id: id});\r\n  this.setState({ text: text});\r\n  this.setState({ color: color});\r\n  console.log(this.state.title);\r\n  console.log(this.props.location.title);\r\n  }\r\n}\r\nhandleChangeTitle(e){\r\n  e.preventDefault();\r\n\r\n  const title = e.target.value;\r\n  this.setState({title});\r\n\r\n\r\n  console.log(this.state.title);\r\n\r\n}\r\nhandleChangeText(e){\r\n  e.preventDefault();\r\n  const text = e.target.value;\r\n \r\n  \r\n\r\n  this.setState({text});\r\n  console.log(e.target.value);\r\n \r\n\r\n}\r\nhandleChangeColor(e){\r\n  e.preventDefault();\r\n  const color = e.target.value;\r\n \r\n  \r\n\r\n  this.setState({color});\r\n  console.log(e.target.value);\r\n \r\n\r\n}\r\n\r\ndeletePost =() =>{\r\n  const databaseRef = fire.database().ref('posts/'+this.props.location.id).remove().then(() => {\r\n    console.log(\"plik usuniety\");\r\n  }).catch((error) => {\r\n   console.log(\"bład:\"+error);\r\n  });\r\n\r\n}\r\ndelete = (id,name)=>{\r\n\r\n // var desertRef = storage.child('images/1576580858304/images.png');\r\n  // Delete the file\r\n  const deleteTask = storage.ref(`/images/${id}/${name}`).delete().then(() => {\r\n    console.log(\"plik usuniety\");\r\n  }).catch((error) => {\r\n   console.log(\"bład:\"+error);\r\n  });\r\n  \r\n}\r\nupdate(e){\r\n  e.preventDefault();\r\n  const id = this.state.id;\r\n  const title = this.state.title;\r\n  const text = this.state.text;\r\n  const color = this.state.color;\r\n  console.log(this.state.id);\r\n  //let userRef = this.firestore.ref('posts/' + this.props.location.id);\r\n  const databaseRef = fire.database().ref('posts/'+this.props.location.id);\r\n  const uploadTask = storage.ref(`/images/${this.state.id}/${this.state.file.name}`).put(this.state.file);\r\n// this is to get the stat-cards table from firebase\r\nconst statCardsRef = databaseRef.update({\r\n  \r\n  title: title,\r\n  text: text,\r\n  color: color\r\n}).then[()=> {\r\n  console.log('updated!');\r\n}];\r\n console.log(statCardsRef);\r\n console.log(\"obrazek: \"+uploadTask);\r\n  // firestore.Collection('posts').oc(this.props.location.id).update({\r\n  //   title: title,\r\n  //   text: text,\r\n  //   color: color\r\n  // })\r\n  \r\n \r\n  //fire.database().ref().child('posts').child('1').set(data);\r\n  console.log(this.props.posts);\r\n}\r\ncomponentDidUpdate(){\r\n  console.log(this.props.posts);\r\n  \r\n this.onprops();\r\n }\r\n _handleImageChange(e){\r\n  e.preventDefault();\r\n\r\n  let reader = new FileReader();\r\n  let file = e.target.files[0];\r\n\r\n  reader.onloadend = () => {\r\n    this.setState({\r\n      file: file,\r\n      imagePreviewUrl: reader.result\r\n    });\r\n  }\r\n\r\n  reader.readAsDataURL(file)\r\n\r\n };\r\n handleChangeEditor(editor) {\r\n  //console.log('background', editor);\r\n  const text = editor;\r\n   this.setState({text});\r\n};\r\n  render() {\r\n    //const { quill, quillRef } = useQuill();\r\n    //this.onprops();\r\n      //wyśietlanie listy projektów\r\n      let {imagePreviewUrl} = this.state;\r\n      let $imagePreview = null;\r\n      if (imagePreviewUrl) {\r\n        $imagePreview = (<img src={imagePreviewUrl} />);\r\n      } else {\r\n        $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\r\n      }\r\n      console.log(this.props.location.title);\r\n     console.log(this.props.images);\r\n      return (<div>\r\n        <h1>Edytuj</h1>\r\n        <form>\r\n         \r\n        <div className=\"form-group\">\r\n        {this.state.id}\r\n         <label htmlFor=\"title\">Tytuł</label>\r\n         <input type=\"textarea\"  value={this.state.title} onChange={this.handleChangeTitle.bind(this)} name=\"title\" className=\"form-control\" placeholder=\"Enter title\" />\r\n         <small id=\"emailHelp\" className=\"form-text \">We'll never share your email with anyone else.</small>\r\n        </div>\r\n         <div className=\"form-group\">\r\n        <label htmlFor=\"exampleInputPassword1\">treść</label>\r\n        <div className=\"form-group\">\r\n   <ReactQuill theme=\"snow\" value={this.state.text} onChange={this.handleChangeEditor} style={{ width: 500, height: 500 }}/>\r\n   \r\n    </div>\r\n    </div>\r\n    <div className=\"form-group\" style={{ marginTop: '50px' }}>\r\n      <input name=\"color\" value={this.state.color} type=\"color\" id=\"myColor\" onChange={this.handleChangeColor.bind(this)} ></input>\r\n        </div>\r\n        <div className=\"form-group\">\r\n        <input className=\"fileInput\" \r\n            type=\"file\" \r\n            onChange={this.handleImageAsFile} />\r\n            </div>\r\n        <button type=\"submit\" onClick={this.login} className=\"btn btn-primary\">Usuń</button>\r\n        <div className=\"imgPreview\">\r\n          {$imagePreview}\r\n        </div>\r\n        \r\n\r\n      \r\n        <button onClick={this.deletePost} style={{marginLeft: '25px'}} className=\"btn btn-success\">Usuń</button>\r\n        <button onClick={this.update} style={{marginLeft: '25px'}} className=\"btn btn-success\">Zmień</button>\r\n   </form>\r\n   \r\n   {this.props.images.map(function(object,i){\r\n\r\nreturn (\r\n\r\n<div>\r\n       {\r\n            object[0] ==this.state.id && <p><img src={object[1]} style={{width: '150px'}}></img>  <button onClick={() => this.delete(object[0],object[2])} className=\"btn btn-primary\">Usuń</button></p>\r\n       }\r\n    </div>)\r\n},this)}\r\n   </div>\r\n      )\r\n   \r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    \r\n    posts: state.posts,\r\n    images: state.allposts.statPostImages\r\n  }\r\n};\r\nconst mapDispatchToProps = { postsFetched, getAllStatPostsImages };\r\n\r\nexport const EditContainer = connect(mapStateToProps, mapDispatchToProps)(Edit);","import React, { Component } from 'react';\r\nimport {fire  , base}  from './config/Fire';\r\nimport {ListContainer} from './list';\r\nimport {AddContainer} from './Add';\r\nimport {EditContainer} from './Edit';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Link\r\n  } from 'react-router-dom';\r\n\r\nclass Backend extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n        this.update = this.update.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n       // this.handleChange = this.handleChange.bind(this);\r\n        this.state = {\r\n            posts: {},\r\n            currentUser: null,\r\n            title: 'sss',\r\n            text: ''\r\n          };\r\n    }\r\n    handleChangeTitle(e){\r\n        e.preventDefault();\r\n    \r\n        const title = e.target.value;\r\n        this.setState({title});\r\n    \r\n      \r\n        console.log(this.state.title);\r\n\r\n    }\r\n    handleChangeText(e){\r\n        e.preventDefault();\r\n        const text = e.target.value;\r\n       \r\n        \r\n    \r\n        this.setState({text});\r\n        console.log(e.target.value);\r\n       \r\n\r\n    }\r\n    componentWillMount(){\r\n        this.postsRef = base.syncState('posts',{\r\n            context: this,\r\n            state: 'posts'\r\n        });\r\n      \r\n        \r\n    }\r\n    componentWillUnmount(){\r\n        base.removeBinding(this.postsRef);\r\n    }\r\n    update(post){\r\n        const posts  ={...this.state.posts};\r\n        posts[post.id]= post;\r\n        this.setState({posts});\r\n    }\r\n\r\n\r\n    logout() {\r\n        fire.auth().signOut();\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (<div className=\"container\"> \r\n            <h1>Welcome to Backend!</h1>\r\n            <div className=\"container\">\r\n            <div className=\"row justify-content-md-center\">\r\n            <div className=\"col-md-6\"><ListContainer /></div>\r\n       <div className=\"col-md-6 \">\r\n           <div className=\"App\">\r\n           <Route exact path=\"/admin/edit\" component={EditContainer} />\r\n           <Route exact path=\"/admin\" component={AddContainer} />\r\n      </div>\r\n      \r\n </div>\r\n </div>\r\n </div>\r\n \r\n            <button className=\"btn btn-success\" onClick={this.logout}>Wyloguj</button>\r\n        </div>)\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Backend;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {fire} from './config/Fire';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.login = this.login.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.signup = this.signup.bind(this);\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  login(e) {\r\n    e.preventDefault();\r\n    fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{\r\n    }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  signup(e){\r\n    e.preventDefault();\r\n    fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{\r\n    }).then((u)=>{console.log(u)})\r\n    .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n  render() {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-md-center\">\r\n       <div className=\"col-md-6 \">\r\n       <form>\r\n      <div className=\"form-group\">\r\n       <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n       <input value={this.state.email} onChange={this.handleChange} type=\"email\" name=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\r\n       <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n      </div>\r\n       <div className=\"form-group\">\r\n      <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n      <input value={this.state.password} onChange={this.handleChange} type=\"password\" name=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\r\n      </div>\r\n      <button type=\"submit\" onClick={this.login} className=\"btn btn-primary\">Login</button>\r\n      <button onClick={this.signup} style={{marginLeft: '25px'}} className=\"btn btn-success\">Signup</button>\r\n </form>\r\n </div>\r\n </div>\r\n </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport {fire} from './config/Fire';\r\nimport Backend from './Backend';\r\nimport Login from './Login';\r\n\r\nclass Admin extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = ({\r\n        user: null,\r\n      });\r\n      this.authListener = this.authListener.bind(this);\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.authListener();\r\n    }\r\n  \r\n    authListener() {\r\n      fire.auth().onAuthStateChanged((user) => {\r\n        //console.log(user);\r\n        if (user) {\r\n          this.setState({ user });\r\n          localStorage.setItem('user', user.uid);\r\n        } else {\r\n          this.setState({ user: null });\r\n          localStorage.removeItem('user');\r\n        }\r\n      });\r\n    }\r\n    render() {\r\n      return (\r\n        <div  className=\"container\">{this.state.user ?  ( <Backend/>) : (<Login />)}</div>)\r\n  }\r\n  }\r\n\r\nexport default Admin;\r\n","import * as React from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport './style.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {ProjectsContainer} from './projects';\nimport {ButtonsComponent} from './buttonsNav';\nimport About from './about';\nimport Chat from './Chat';\nimport Admin from './Admin';\nimport { connect } from \"react-redux\";\nimport { postsFetched,getAllStatPostsAction,getAllStatPostsImages } from \"./config/actions/index\";\nimport {fire  , base, storage}  from './config/Fire';\nimport { Link2, animateScroll as scroll } from \"react-scroll\";\nimport { ProjectContainer } from \"./Project\";\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n   \n    this.sendState = this.sendState.bind(this);\n    this.onSync = this.onSync.bind(this);\n    this.onPush = this.onPush.bind(this);\n    this.onAction= this.onAction.bind(this);\n    this.onImage=this.onImage.bind(this);\n    this.state = {\n      articles: [\n        { title: \"React Redux Tutorial for Beginners\", id: 1 },\n        { title: \"TypeScript tutorial for beginners\", id: 2 }\n      ],\n      temporary: [],\n      a: [],\n      ref: [],\n      ref2: []\n    };\n  }\n\n\n componentDidMount() {\n    // fetch(\"https://randomuser.me/api/?format=json&results=10\")\n    //   .then(res => res.json())\n    //   .then(json => this.props.postsFetched(json.results));\n      \n    \n   //await this.sendState();\n\n  \n  this.onSync();\n  this.onAction();\n //console.log(this.props);\n \n    \n  }\n  ref2(temp){\n    this.setState({\n      ref2: temp\n      \n  });\n}\n  \n  \n  onAction(){\n    this.props.getAllStatPostsAction();\n    var temp =[];\n    var storageRef = storage.ref(\"images\");\n   \n    storageRef.list().then(function(result) {\n      console.log(result.items);\n      result.prefixes.forEach(function(imageRef) {\n        //nazwa folderu zawierająca zdjecia\n       console.log(imageRef.name);\n       \n       var foldername=imageRef.name;\n   \n        imageRef.list().then(function(result2) {\n        \n        result2.items.forEach(function(imageRef2) {\n          var filename=imageRef2.name;\n          \n          imageRef2.getDownloadURL().then(function(url) {\n\n            console.log(foldername,\"url\",url);\n            //zapisywanie w tablicy adresu url obrazka razem z id posta do ktorego zostal przypisany\n            var array=[foldername,url,filename]\n            temp.push(array);\n        });\n      });\n      });\n      //console.log(imageRef.getDownloadURL());\n     \n        //this.onImage(imageRef);\n        //console.log(imageRef.getDownloadURL());\n      });\n    }).catch(function(error) {\n      // Handle any errors\n    });\n\n    this.ref2(temp);\n\n        console.log(\"obraz\",this.state.ref2);\n   // const storageRef = storage.ref('/images/1576580835000').getDownloadURL();\n\n\n   //zapisywanie do stanu adresów obrazków\n    this.props.getAllStatPostsImages(temp);\n\n    \n    console.log(this.props.posts2);\n    console.log(\"Obrazy\",this.props.images);\n  }\n  async sendState(){\n    this.postsRef =base.syncState('posts',{\n      context: this,\n      state: 'temporary'\n  });\n \n  //this.props.postsFetched(this.state.temporary);\n\n  //console.log(this.state.temporary);\n  \n  }\n  onImage(imageRef) {\n    console.log(imageRef);\n    var fileURLs = [];\n    imageRef.getDownloadURL().then(function(url) {\n      // TODO: Display the image on the UI\n      console.log(url);\n    //   this.setState({\n    //     ref2: [\n    //         ...this.state.ref2,\n    //         url\n    //     ]\n    // });\n    }).catch(function(error) {\n      // Handle any errors\n    });\n    console.log(this.state.ref2);\n  };\n async componentDidUpdate(){\n   \n   // console.log(this.props.posts);\n  }\n  onPush(){\n    let ref = fire.database().ref().child(\"posts\");\n    var a = [\"test\"];\n    this.props.postsFetched(a);\n    let snap;\n  ref.on('value', function(snapshot) {\n      snap = snapshot.val();\n      console.log(snap);\n  });\n\n\n  for (var i in snap){\n   \n    a.push({id: i, title: snap[i][\"title\"], text: snap[i][\"text\"]});\n  console.log(\"\\n\" + snap[i]);\n    //for (var n in snap[i]){\n    //     console.log(n, snap[i][n])     \n // }\n \n}\nif(ref==null){\n  console.log(\"pusta zmienna\");\nthis.onPush();\n}else{\n  this.props.postsFetched(a);\n \n}\n  return a;\n  }\n  async onSync(){\n    var b = [];\n    b.push({id: 1, title: \"test\", text: \"text\"});\n    \n    //console.log(ref);\n    var a = [];\n    a=this.onPush();\n    console.log(a);\n    \n    if (this.props.posts){\n      console.log(this.props.posts);\n    }    \n  // if(a.length=0){\n  //   console.log(\"nie jest 0\");\n  // this.props.postsFetched(a);\n  // a=null;\n  // }else{\n  //     this.props.postsFetched(this.onPush());\n  \n  // }\n    //console.log(this.state.temporary);\n    //console.log(this.state.temporary);\n    // var results = this.state.temporary;\n    // console.log(results.length);\n   \n\n    //         var temporary = [], item;\n    //         for (var i = 1, len = results.length; i < len; i++) {\n    //             item = results[i];\n    //             //console.log(item[\"title\"]);\n    //             //temporary.push({id: item.title, title: item.text});\n    //         }\n    //         //console.log(temporary);\n            \n            \n    \n    \n            //console.log(a);\n            //this.setState(a);\n         \n   \n            \n  }\n  render() {\n    if(this.props.posts.length==0){\n     // this.onSync();//this.props.postsFetched(this.state.a);\n   }\n   \n  return (\n    <div className=\"App\" >\n      <Router>\n      \n      <header className=\"App-header\">\n     \n      <ul className=\"ButtonUl\">\n            <li>\n              <Link className=\"button\" to=\"/projects\">Projekty</Link>\n            </li>\n            <li>\n              <Link  className=\"button\" to=\"/about\">o mnie</Link>\n            </li>\n            <li>\n            {/* <button onClick={()=>{ window.scrollTo(0, 300);;}}>scrool</button>\n            <button onClick={this.elScroll.executeScroll}>Click to scroll </button> */}\n            </li>\n            \n           \n            {/* <li>\n            <button onClick={this.onSync}>sync</button>\n            </li>\n            <li>\n            <button onClick={this.onAction}>test action</button>\n            </li> */}\n          </ul>\n         \n        \n      </header>\n      <div className=\"Router\">\n      <Route exact path=\"/projects\" component={ProjectsContainer}/>\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/admin\" component={Admin} /> \n      </div>\n      </Router>\n      <div>Dominik Bulandra 2022</div>\n    </div>\n    \n    \n  );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  \n  return {\n    posts2: state.allposts.statPostState,\n    posts: state.posts,\n    images: state.allposts.statPostImages\n  }\n};\nconst mapDispatchToProps = { postsFetched,getAllStatPostsAction,getAllStatPostsImages };\n\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const allposts = (state = {}, action) => { // (1)\r\n    switch (action.type) { // (2)\r\n       case \"getAllStatPosts\":\r\n          console.log(\"getting \", action.payload);\r\n          console.log(action.payload);\r\n      \r\n          return {\r\n            // keep the old state\r\n            ...state,\r\n           \r\n            // add all the cards from the database\r\n            // they will come in a json format,\r\n            // so we need to convert them to array\r\n            statPostState: Object.values(action.payload)\r\n          };\r\n        case \"getAllStatImages\":\r\n           // console.log(\"getting \", action.payload);\r\n         //   console.log(action.payload);\r\n            return {\r\n              // keep the old state\r\n              ...state,\r\n             \r\n              // add all the cards from the database\r\n              // they will come in a json format,\r\n              // so we need to convert them to array\r\n              statPostImages: action.payload\r\n              \r\n            };\r\n      default:\r\n        return state\r\n    }\r\n  }","import { combineReducers, applyMiddleware } from \"redux\";\r\nimport { posts } from \"./posts\";\r\nimport { allposts } from \"./allposts\";\r\n\r\n\r\nexport default combineReducers({\r\n  posts,allposts\r\n});","export const posts = (state = [], action) => { // (1)\r\n    switch (action.type) { // (2)\r\n      case 'FETCH_POSTS_SUCCESS':\r\n        return [\r\n          ...action.posts\r\n        ]\r\n        \r\n      default:\r\n        return state\r\n    }\r\n  }","import { createStore, applyMiddleware,compose } from 'redux';\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducers from './reducers/';\r\nlet devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nif (process.env.NODE_ENV === 'prod' || process.env.NODE_ENV === 'production') {\r\n    devTools = a => a;};\r\nconst enhancer = compose(\r\n    applyMiddleware(reduxThunk),\r\n    devTools,\r\n    // other store enhancers if any\r\n  );\r\nexport const store = createStore(reducers,enhancer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {AppContainer} from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from \"./config/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n<Provider store={store}>\n    <AppContainer />\n  </Provider>,\n document.getElementById('root')\n);\n//console.log(store.getState());\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}
{"version":3,"sources":["cv.jpeg","config/Fire.js","config/actions/index.js","Project.js","projects.js","about.js","list.js","Add.js","Edit.js","Backend.js","Login.js","Admin.js","App.js","serviceWorker.js","config/reducers/allposts.js","config/reducers/index.js","config/reducers/posts.js","config/store.js","index.js","logo.svg"],"names":["module","exports","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","base","Rebase","createClass","database","storage","statCardsRef","ref","child","postsFetched","posts","type","getAllStatPostsImages","images","dispatch","a","payload","ticking","Project","props","handleScroll","window","scrollY","requestAnimationFrame","console","log","navRef","current","style","top","getComputedStyle","React","createRef","state","email","password","addEventListener","this","removeEventListener","from","opacity","marginTop","to","config","duration","className","backgroundColor","color","position","maxWidth","marginBottom","title","class","dangerouslySetInnerHTML","__html","text","map","object","i","id","src","Component","mapDispatchToProps","ProjectContainer","connect","allposts","statPostImages","Projects","onLog","bind","data","posts2","ref2","licznik","temp","setState","forEach","post","onAction","list","then","result","items","imageRef","getDownloadURL","url","push","catch","error","div","item","key","ProjectsContainer","statPostState","About","require","List","results","len","length","data2","li","pathname","ListContainer","Add","fileSelectedHandler","event","target","files","add","currentUser","postsRef","syncState","context","e","preventDefault","value","uuid","htmlFor","onChange","handleChangeTitle","name","placeholder","handleChangeText","handleChangeColor","onClick","login","marginLeft","AddContainer","Edit","handleImageAsFile","image","isFile","file","deletePost","location","remove","delete","update","handleChangeEditor","imagePreviewUrl","databaseRef","uploadTask","put","onprops","reader","FileReader","onloadend","readAsDataURL","editor","$imagePreview","theme","width","height","EditContainer","Backend","logout","removeBinding","auth","signOut","exact","path","component","Login","handleChange","signup","signInWithEmailAndPassword","u","createUserWithEmailAndPassword","aria-describedby","Admin","user","authListener","onAuthStateChanged","localStorage","setItem","uid","removeItem","App","sendState","onSync","onPush","onImage","articles","temporary","getAllStatPostsAction","prefixes","foldername","result2","imageRef2","filename","array","snap","on","snapshot","val","basename","AppContainer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","combineReducers","action","Object","values","devTools","__REDUX_DEVTOOLS_EXTENSION__","enhancer","compose","applyMiddleware","reduxThunk","store","createStore","reducers","ReactDOM","render","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,iC,sOCgBnCC,G,OAAOC,IAASC,cAZT,CACXC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,kBAKXC,EAAOC,IAAOC,YAAYb,EAAKc,YAE/BC,GADWd,IAASa,WACVd,EAAKe,WChBjBC,EAFchB,EAAKc,WAAWG,MAEHC,MAAM,SAG1BC,GAFMJ,EAAQE,MAAMC,MAAM,UAEX,SAACE,GAAD,MAAY,CACpCC,KAAM,sBACND,WAcSE,EAAwB,SAACC,GAAD,8CAAY,WAAMC,GAAN,SAAAC,EAAA,sDAG7CD,EAAS,CACPH,KAAM,mBAINK,QAASH,IARkC,2CAAZ,uD,gBChBjCI,GAAU,EAEDC,EAAb,YACE,WAAYC,GAAQ,IAAD,8BAEjB,4CAAMA,KAcNC,aAAe,WACCC,OAAOC,QAEhBL,IACHI,OAAOE,uBAAsB,WAE3BC,QAAQC,IAAI,EAAKC,OAAOC,QAAQC,MAAMC,KACvBC,iBAAiB,EAAKJ,OAAOC,SAI5CV,GAAU,KAGZA,GAAU,IA3Bd,EAAKS,OAASK,IAAMC,YACpB,EAAKC,MAAQ,CACXC,MAAO,GACPC,SAAU,IANK,EADrB,iFAYId,OAAOe,iBAAiB,SAAUC,KAAKjB,gBAZ3C,6CAeMC,OAAOiB,oBAAoB,SAAUD,KAAKjB,gBAfhD,+BAkCY,IAAD,OACPI,QAAQC,IAAIY,KAAKlB,MAAMN,QAavB,OAIE,kBAAC,SAAD,CACJ0B,KAAM,CAAEC,QAAS,EAAGC,WAAY,KAChCC,GAAI,CAAEF,QAAS,EAAGC,UAAW,GAC7BE,OAAQ,CAACC,SAAS,OAEjB,SAAAzB,GAAK,OAAI,yBAAKS,MAAOT,GAAZ,SAAyB,yBAAMZ,IAAK,EAAKmB,OAAQmB,UAAU,YAAYjB,MAAO,CAACkB,gBAAiB,EAAK3B,MAAM4B,MAAMC,SAAU,WAAWC,SAAU,SAChJ,yBAAKJ,UAAU,iCACpB,yBAAKA,UAAU,WACf,wBAAIjB,MAAO,CAACa,UAAW,OAAQS,aAAc,SAAU,EAAK/B,MAAMgC,OAGrE,yBAAKC,MAAM,aACb,yBAAKA,MAAM,OACT,yBAAKA,MAAM,4BACX,yBAAKC,wBAAyB,CAAEC,OAAQ,EAAKnC,MAAMoC,SAGnD,yBAAKH,MAAM,6BACV,EAAKjC,MAAMN,OAAO2C,KAAI,SAASC,EAAOC,GAE3C,OAEA,yBAAKb,UAAU,OAEHY,EAAO,IAAKpB,KAAKlB,MAAMwC,IAAK,yBAAKd,UAAU,OAAM,yBAAKe,IAAKH,EAAO,GAAIZ,UAAU,eAK1F,iBAjFF,GAA6BgB,aA8GvBC,EAAqB,CAAElD,yBAEhBmD,EAAmBC,aATR,SAAC/B,GAEvB,MAAO,CAELpB,OAAQoB,EAAMgC,SAASC,kBAK8BJ,EAAzBE,CAA6C9C,GClHzED,GAAU,EACDkD,EAAb,YACE,WAAYhD,GAAQ,IAAD,8BACjB,4CAAMA,KA8CRC,aAAe,WACCC,OAAOC,QAEhBL,IACHI,OAAOE,uBAAsB,WAE3BC,QAAQC,IAAI,EAAKC,OAAOC,QAAQC,OACjBE,iBAAiB,EAAKJ,OAAOC,SAI5CV,GAAU,KAGZA,GAAU,IA3DZ,EAAKS,OAASK,IAAMC,YACpB,EAAKoC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKjD,aAAe,EAAKA,aAAaiD,KAAlB,gBACpB,EAAKpC,MAAQ,CACTqC,KAAM,CAAC,IAAI,KACX5D,MAAO,GACP6D,OAAQ,GACRC,KAAM,GACNC,QAAS,GAVI,EADrB,kEAcKC,GACHrC,KAAKsC,SAAS,CACZH,KAAME,MAhBV,8BAqBQA,GACNrC,KAAKsC,SAAS,CACZF,QAASC,MAvBb,0CA2BoB,IAAD,OACbrC,KAAKlB,MAAMoD,QACflC,KAAKlB,MAAMoD,OAAOK,SAAS,SAACC,GAC1B,EAAKC,SAASD,EAAKlB,SA9BvB,2CAuCEnC,QAAQC,IAAIY,KAAKlB,MAAMT,SAvCzB,+EAiEWiD,GAEP,IAAIe,EAAM,GACOrE,EAAQE,IAAI,WAAWoD,GAE7BoB,OAAOC,MAAK,SAASC,GAC9BzD,QAAQC,IAAIwD,EAAOC,OACnBD,EAAOC,MAAMN,SAAQ,SAASO,GAC5BA,EAASC,iBAAiBJ,MAAK,SAASK,GAGtC,OAFA7D,QAAQC,IAAK,gBAAgB4D,GAC7BX,EAAKY,KAAKD,GACHA,KAEV7D,QAAQC,IAAI0D,SAQZI,OAAM,SAASC,OAIlBnD,KAAKmC,KAAKE,GAENlD,QAAQC,IAAI,WAAWY,KAAKJ,MAAMuC,QA5F1C,8BAuGGhD,QAAQC,IAAIY,KAAKlB,MAAMT,SAvG1B,+BA4GM,IAGI+E,EAHKpD,KAAKlB,MAAMT,MAItB,OAHEc,QAAQC,IAAIY,KAAKlB,MAAMN,QAGF,MAApBwB,KAAKlB,MAAMoD,OAaL,wBAAI1B,UAAU,0CAAd,qBAZP4C,EAAKpD,KAAKlB,MAAMoD,OAAOf,KAAI,SAASkC,EAAMhC,GAKxC,OAAO,kBAACK,EAAD,CAAkB4B,IAAKD,EAAK/B,GAAIA,GAAI+B,EAAK/B,GAAKR,MAAOuC,EAAKvC,MAAOI,KAAMmC,EAAKnC,KAAMR,MAAO2C,EAAK3C,UAEpGV,MAYT,6BACCoD,EACS,wBAAI5C,UAAU,qBAtIxB,GAA8BgB,aAyJxBC,EAAqB,CAAErD,eAAaG,yBAE7BgF,EAAoB5B,aAVT,SAAC/B,GAEvB,MAAO,CACLsC,OAAQtC,EAAMgC,SAAS4B,cACvBnF,MAAOuB,EAAMvB,MACbG,OAAQoB,EAAMgC,SAASC,kBAK+BJ,EAAzBE,CAA6CG,GCtJ/D2B,EAVD,WAEZ,OACE,yBAAKjD,UAAU,aACb,kCACA,2BAAG,yBAAKe,IAAKmC,EAAQ,KAAclD,UAAU,U,QCDtCmD,EAAb,YACE,WAAY7E,GAAQ,IAAD,8BACjB,4CAAMA,KAEDc,MAAQ,CACTqC,KAAM,CAAC,IAAI,KACX5D,MAAO,CAAC,IAAI,MALC,EADrB,iFAYY,IAFV,IACyBgF,EADrBO,EAAU5D,KAAKlB,MAAMT,MACX4D,EAAO,GACFZ,EAAI,EAAGwC,EAAMD,EAAQE,OAAQzC,EAAIwC,EAAKxC,IAC3CgC,EAAOO,EAAQvC,GACfY,EAAKgB,KAAK,CAAC3B,GAAI+B,EAAK/B,GAAIR,MAAOuC,EAAKvC,QAGxC,IAAIiD,EAAQ/D,KAAKlB,MAAMmD,KACvBjC,KAAKsC,SAAS,CAACyB,YAlB3B,+BAsBe/D,KAAKlB,MAAMT,MAGpB,GAFAc,QAAQC,IAAIY,KAAKlB,MAAMoD,QAEA,MAApBlC,KAAKlB,MAAMoD,OACd,IAAI8B,EAAIhE,KAAKlB,MAAMoD,OAAOf,KAAI,SAASkC,EAAMhC,GAE3C,OADAlC,QAAQC,IAAI,CAACiE,SACN,wBAAI7C,UAAU,yCAAyC8C,IAAKjC,EAAI9B,MAAO,CAACkB,gBAAiB4C,EAAK3C,QAAQ,yBAAKF,UAAU,OAAM,yBAAKA,UAAU,UAAf,IAAyB,kBAAC,IAAD,CAAMH,GAAI,CAAE4D,SAAU,gBAAiBnD,MAAOuC,EAAKvC,MAAOI,KAAMmC,EAAKnC,KAAKR,MAAO2C,EAAK3C,MAAOY,GAAG+B,EAAK/B,KAArG,WAA+H,yBAAKd,UAAU,UAAU6C,EAAKvC,OAAY,yBAAKN,UAAU,UAAU6C,EAAKnC,WAMpW,OAGI,wBAAIV,UAAU,cAETwD,OAvCf,GAA0BxC,aAsDpBC,EAAqB,CAAErD,gBAEhB8F,EAAgBvC,aATL,SAAC/B,GAEvB,MAAO,CACLsC,OAAQtC,EAAMgC,SAAS4B,cACvBnF,MAAOuB,EAAMvB,SAKqCoD,EAAzBE,CAA6CgC,G,sOCzDnE,IAAMQ,EAAb,YACE,WAAYrF,GAAQ,IAAD,8BACjB,4CAAMA,KA6EVsF,oBAAqB,SAAAC,GACnBlF,QAAQC,IAAIiF,EAAMC,OAAOC,MAAM,KA7E7B,EAAKC,IAAM,EAAKA,IAAIxC,KAAT,gBAGX,EAAKpC,MAAQ,CACTvB,MAAO,GACPoG,YAAa,KACb3D,MAAO,MACPI,KAAM,GACNR,MAAM,IAVO,EADrB,kFAeEV,KAAK0E,SAAW9G,EAAK+G,UAAU,QAAQ,CACnCC,QAAS5E,KACTJ,MAAO,YAjBb,wCAsBkBiF,GAChBA,EAAEC,iBAEF,IAAMhE,EAAQ+D,EAAEP,OAAOS,MACvB/E,KAAKsC,SAAS,CAACxB,UAGf3B,QAAQC,IAAIY,KAAKJ,MAAMkB,SA7BzB,uCAgCiB+D,GACfA,EAAEC,iBACF,IAAM5D,EAAO2D,EAAEP,OAAOS,MAItB/E,KAAKsC,SAAS,CAACpB,SACf/B,QAAQC,IAAIyF,EAAEP,OAAOS,SAvCvB,wCA2CkBF,GAChBA,EAAEC,iBACF,IAAMpE,EAAQmE,EAAEP,OAAOS,MAIvB/E,KAAKsC,SAAS,CAAC5B,UACfvB,QAAQC,IAAIyF,EAAEP,OAAOS,SAlDvB,0BAsDIF,GACFA,EAAEC,iBACF,IAAMzG,E,yVAAK,IAAO2B,KAAKJ,MAAMvB,OACvBiD,EAAK0D,iBACLlE,EAAQd,KAAKJ,MAAMkB,MACnBI,EAAOlB,KAAKJ,MAAMsB,KAClBR,EAAQV,KAAKJ,MAAMc,MACzBvB,QAAQC,IAAIkC,GACZjD,EAAMiD,GAAM,CACVA,GAAIA,EACJR,MAAOA,EACRI,KAAMA,EACNR,MAAOA,GAGRvB,QAAQC,IAAKf,GAEb2B,KAAKsC,SAAS,CAACjE,UAMfc,QAAQC,IAAIY,KAAKlB,MAAMT,SA7EzB,2CAmFEc,QAAQC,IAAIY,KAAKlB,MAAMT,SAnFzB,+BA2FM,OACE,8BACA,yBAAKmC,UAAU,cACd,2BAAOyE,QAAQ,SAAf,cACA,2BAAO3G,KAAK,WAAYyG,MAAO/E,KAAKJ,MAAMkB,MAAOoE,SAAUlF,KAAKmF,kBAAkBnD,KAAKhC,MAAOoF,KAAK,QAAQ5E,UAAU,eAAe6E,YAAY,gBAChJ,2BAAO/D,GAAG,YAAYd,UAAU,cAAhC,mDAEA,yBAAKA,UAAU,cAChB,2BAAOyE,QAAQ,yBAAf,mBACA,2BAAOF,MAAO/E,KAAKJ,MAAMsB,KAAMkE,KAAK,OAAOF,SAAUlF,KAAKsF,iBAAiBtD,KAAKhC,MAAO1B,KAAK,WAAWkC,UAAU,eAAec,GAAG,wBAAwB+D,YAAY,SACzK,2BAAOD,KAAK,QAAQL,MAAO/E,KAAKJ,MAAMc,MAAOpC,KAAK,QAAQgD,GAAG,UAAU4D,SAAUlF,KAAKuF,kBAAkBvD,KAAKhC,QAC7G,2BAAO1B,KAAK,OAAO4G,SAAUlF,KAAKoE,uBAEhC,4BAAQ9F,KAAK,SAASkH,QAASxF,KAAKyF,MAAOjF,UAAU,mBAArD,SACA,4BAAQgF,QAASxF,KAAKwE,IAAKjF,MAAO,CAACmG,WAAY,QAASlF,UAAU,mBAAlE,QAA0FR,KAAKJ,MAAMkB,YAzG7G,GAAyBU,aAuHnBC,EAAqB,CAAErD,gBAEhBuH,EAAehE,aATJ,SAAC/B,GAEvB,MAAO,CAELvB,MAAOuB,EAAMvB,SAKoCoD,EAAzBE,CAA6CwC,G,0BCvH5DyB,EAAb,YACE,WAAY9G,GAAQ,IAAD,8BACjB,4CAAMA,KA2BV+G,kBAAoB,SAAChB,GACnB1F,QAAQC,IAAIyF,EAAEP,OAAOC,MAAM,IAC3B,IAAMuB,EAAQjB,EAAEP,OAAOC,MAAM,GAC7B,EAAKjC,SAAS,CAACyD,QAAQ,IACxB,EAAKzD,SAAS,CAAC0D,KAAMF,IACrB3G,QAAQC,IAAI,EAAKQ,MAAMoG,OAjCH,EAsFrBC,WAAY,WACUhJ,EAAKc,WAAWG,IAAI,SAAS,EAAKY,MAAMoH,SAAS5E,IAAI6E,SAASxD,MAAK,WACrFxD,QAAQC,IAAI,oBACX8D,OAAM,SAACC,GACThE,QAAQC,IAAI,aAAQ+D,OA1FF,EA8FrBiD,OAAS,SAAC9E,EAAG8D,GAIQpH,EAAQE,IAAR,kBAAuBoD,EAAvB,YAA6B8D,IAAQgB,SAASzD,MAAK,WACpExD,QAAQC,IAAI,oBACX8D,OAAM,SAACC,GACThE,QAAQC,IAAI,aAAQ+D,OAnGnB,EAAKkD,OAAS,EAAKA,OAAOrE,KAAZ,gBACd,EAAKsE,mBAAqB,EAAKA,mBAAmBtE,KAAxB,gBAG1B,EAAKpC,MAAQ,CACXoG,KAAK,GACLhD,IAAI,GACJ+C,QAAO,EACPQ,gBAAiB,GACflI,MAAO,GACPoG,YAAa,KACb3D,MAAO,EAAKhC,MAAMoH,SAASpF,MAC3BI,KAAM,EAAKpC,MAAMoH,SAAShF,KAC1BR,MAAQ,EAAK5B,MAAMoH,SAASxF,MAC5BY,GAAI,EAAKxC,MAAMoH,SAAS5E,IAhBX,EADrB,kFAsBEtB,KAAK0E,SAAW9G,EAAK+G,UAAU,QAAQ,CACnCC,QAAS5E,KACTJ,MAAO,YAxBb,6EAyCE,GAAII,KAAKlB,MAAMoH,SAAS5E,IAAItB,KAAKJ,MAAM0B,GAAG,CAC1C,IAAMR,EAAMd,KAAKlB,MAAMoH,SAASpF,MAC1BI,EAAKlB,KAAKlB,MAAMoH,SAAShF,KACzBI,EAAGtB,KAAKlB,MAAMoH,SAAS5E,GACvBZ,EAAMV,KAAKlB,MAAMoH,SAASxF,MAChCV,KAAKsC,SAAS,CAAExB,MAAOA,IACvBd,KAAKsC,SAAS,CAAEhB,GAAIA,IACpBtB,KAAKsC,SAAS,CAAEpB,KAAMA,IACtBlB,KAAKsC,SAAS,CAAE5B,MAAOA,IACvBvB,QAAQC,IAAIY,KAAKJ,MAAMkB,OACvB3B,QAAQC,IAAIY,KAAKlB,MAAMoH,SAASpF,UAnDlC,wCAsDkB+D,GAChBA,EAAEC,iBAEF,IAAMhE,EAAQ+D,EAAEP,OAAOS,MACvB/E,KAAKsC,SAAS,CAACxB,UAGf3B,QAAQC,IAAIY,KAAKJ,MAAMkB,SA7DzB,uCAgEiB+D,GACfA,EAAEC,iBACF,IAAM5D,EAAO2D,EAAEP,OAAOS,MAItB/E,KAAKsC,SAAS,CAACpB,SACf/B,QAAQC,IAAIyF,EAAEP,OAAOS,SAvEvB,wCA2EkBF,GAChBA,EAAEC,iBACF,IAAMpE,EAAQmE,EAAEP,OAAOS,MAIvB/E,KAAKsC,SAAS,CAAC5B,UACfvB,QAAQC,IAAIyF,EAAEP,OAAOS,SAlFvB,6BA0GOF,GACLA,EAAEC,iBACS9E,KAAKJ,MAAM0B,GAAtB,IACMR,EAAQd,KAAKJ,MAAMkB,MACnBI,EAAOlB,KAAKJ,MAAMsB,KAClBR,EAAQV,KAAKJ,MAAMc,MACzBvB,QAAQC,IAAIY,KAAKJ,MAAM0B,IAEvB,IAAMkF,EAAcvJ,EAAKc,WAAWG,IAAI,SAAS8B,KAAKlB,MAAMoH,SAAS5E,IACrE,GAAKtB,KAAKJ,MAAMmG,OAAO,CAErB5G,QAAQC,IAAIY,KAAKJ,MAAMoG,MACzB,IAAMS,EAAazI,EAAQE,IAAR,kBAAuB8B,KAAKJ,MAAM0B,GAAlC,YAAwCtB,KAAKJ,MAAMoG,KAAKZ,OAAQsB,IAAI1G,KAAKJ,MAAMoG,MAClG7G,QAAQC,IAAI,YAAYqH,GAG1B,IAAMxI,EAAeuI,EAAYH,OAAO,CAEtCvF,MAAOA,EACPI,KAAMA,EACNR,MAAOA,IACNiC,KAAK,WACNxD,QAAQC,IAAI,cAEbD,QAAQC,IAAInB,GAUXkB,QAAQC,IAAIY,KAAKlB,MAAMT,SA5IzB,2CA+IEc,QAAQC,IAAIY,KAAKlB,MAAMT,OAExB2B,KAAK2G,YAjJN,yCAmJoB9B,GAAG,IAAD,OACpBA,EAAEC,iBAEF,IAAI8B,EAAS,IAAIC,WACbb,EAAOnB,EAAEP,OAAOC,MAAM,GAE1BqC,EAAOE,UAAY,WACjB,EAAKxE,SAAS,CACZ0D,KAAMA,EACNO,gBAAiBK,EAAOhE,UAI5BgE,EAAOG,cAAcf,KAhKvB,yCAmKoBgB,GAElB,IAAM9F,EAAO8F,EACZhH,KAAKsC,SAAS,CAACpB,WAtKlB,+BAwKW,IAIAqF,EAAmBvG,KAAKJ,MAAxB2G,gBACDU,EAAgB,KAQpB,OANEA,EADEV,EACe,yBAAKhF,IAAKgF,IAEV,yBAAK/F,UAAU,eAAf,sCAEnBrB,QAAQC,IAAIY,KAAKlB,MAAMoH,SAASpF,OACjC3B,QAAQC,IAAIY,KAAKlB,MAAMN,QACd,6BACN,sCACA,8BAEA,yBAAKgC,UAAU,cACdR,KAAKJ,MAAM0B,GACX,2BAAO2D,QAAQ,SAAf,cACA,2BAAO3G,KAAK,WAAYyG,MAAO/E,KAAKJ,MAAMkB,MAAOoE,SAAUlF,KAAKmF,kBAAkBnD,KAAKhC,MAAOoF,KAAK,QAAQ5E,UAAU,eAAe6E,YAAY,gBAChJ,2BAAO/D,GAAG,YAAYd,UAAU,cAAhC,mDAEA,yBAAKA,UAAU,cAChB,2BAAOyE,QAAQ,yBAAf,mBACA,yBAAKzE,UAAU,cACpB,kBAAC,IAAD,CAAY0G,MAAM,OAAOnC,MAAO/E,KAAKJ,MAAMsB,KAAMgE,SAAUlF,KAAKsG,mBAAoB/G,MAAO,CAAE4H,MAAO,IAAKC,OAAQ,SAIhH,yBAAK5G,UAAU,aAAajB,MAAO,CAAEa,UAAW,SAC9C,2BAAOgF,KAAK,QAAQL,MAAO/E,KAAKJ,MAAMc,MAAOpC,KAAK,QAAQgD,GAAG,UAAU4D,SAAUlF,KAAKuF,kBAAkBvD,KAAKhC,SAE3G,yBAAKQ,UAAU,cACf,2BAAOA,UAAU,YACblC,KAAK,OACL4G,SAAUlF,KAAK6F,qBAEnB,4BAAQvH,KAAK,SAASkH,QAASxF,KAAKyF,MAAOjF,UAAU,mBAArD,aACA,yBAAKA,UAAU,cACZyG,GAKH,4BAAQzB,QAASxF,KAAKiG,WAAY1G,MAAO,CAACmG,WAAY,QAASlF,UAAU,mBAAzE,aACA,4BAAQgF,QAASxF,KAAKqG,OAAQ9G,MAAO,CAACmG,WAAY,QAASlF,UAAU,mBAArE,eAGJR,KAAKlB,MAAMN,OAAO2C,KAAI,SAASC,EAAOC,GAAG,IAAD,OAE5C,OAEA,6BAEYD,EAAO,IAAKpB,KAAKJ,MAAM0B,IAAM,2BAAG,yBAAKC,IAAKH,EAAO,GAAI7B,MAAO,CAAC4H,MAAO,WAAvC,KAAyD,4BAAQ3B,QAAS,kBAAM,EAAKY,OAAOhF,EAAO,GAAGA,EAAO,KAAKZ,UAAU,mBAAnE,iBAGhGR,WAlOF,GAA0BwB,aAiPpBC,EAAqB,CAAErD,eAAcG,yBAE9B8I,EAAgB1F,aAVL,SAAC/B,GAEvB,MAAO,CAELvB,MAAOuB,EAAMvB,MACbG,OAAQoB,EAAMgC,SAASC,kBAK2BJ,EAAzBE,CAA6CiE,G,kOC7J3D0B,G,YAhFX,WAAYxI,GAAQ,IAAD,8BACf,4CAAMA,KAEDuH,OAAS,EAAKA,OAAOrE,KAAZ,gBACd,EAAKuF,OAAS,EAAKA,OAAOvF,KAAZ,gBAEd,EAAKpC,MAAQ,CACTvB,MAAO,GACPoG,YAAa,KACb3D,MAAO,MACPI,KAAM,IAVK,E,+EAaD2D,GACdA,EAAEC,iBAEF,IAAMhE,EAAQ+D,EAAEP,OAAOS,MACvB/E,KAAKsC,SAAS,CAACxB,UAGf3B,QAAQC,IAAIY,KAAKJ,MAAMkB,S,uCAGV+D,GACbA,EAAEC,iBACF,IAAM5D,EAAO2D,EAAEP,OAAOS,MAItB/E,KAAKsC,SAAS,CAACpB,SACf/B,QAAQC,IAAIyF,EAAEP,OAAOS,S,2CAKrB/E,KAAK0E,SAAW9G,EAAK+G,UAAU,QAAQ,CACnCC,QAAS5E,KACTJ,MAAO,Y,6CAMXhC,EAAK4J,cAAcxH,KAAK0E,Y,6BAErBlC,GACH,IAAMnE,E,yVAAK,IAAO2B,KAAKJ,MAAMvB,OAC7BA,EAAMmE,EAAKlB,IAAKkB,EAChBxC,KAAKsC,SAAS,CAACjE,Y,+BAKfpB,EAAKwK,OAAOC,Y,+BAKZ,OAAQ,yBAAKlH,UAAU,aACnB,mDACA,yBAAKA,UAAU,aACf,yBAAKA,UAAU,iCACf,yBAAKA,UAAU,YAAW,kBAAC0D,EAAD,OAC/B,yBAAK1D,UAAU,aACX,yBAAKA,UAAU,OACf,kBAAC,IAAD,CAAOmH,OAAK,EAACC,KAAK,cAAcC,UAAWR,IAC3C,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,SAASC,UAAWlC,QAOrC,4BAAQnF,UAAU,kBAAkBgF,QAASxF,KAAKuH,QAAlD,gB,GA1EU/F,aCgDPsG,G,YAvDb,WAAYhJ,GAAQ,IAAD,8BACjB,4CAAMA,KACD2G,MAAQ,EAAKA,MAAMzD,KAAX,gBACb,EAAK+F,aAAe,EAAKA,aAAa/F,KAAlB,gBACpB,EAAKgG,OAAS,EAAKA,OAAOhG,KAAZ,gBACd,EAAKpC,MAAQ,CACXC,MAAO,GACPC,SAAU,IAPK,E,0EAWN+E,GACX7E,KAAKsC,SAAL,eAAiBuC,EAAEP,OAAOc,KAAOP,EAAEP,OAAOS,U,4BAGtCF,GACJA,EAAEC,iBACF7H,EAAKwK,OAAOQ,2BAA2BjI,KAAKJ,MAAMC,MAAOG,KAAKJ,MAAME,UAAU6C,MAAK,SAACuF,OACjFhF,OAAM,SAACC,GACNhE,QAAQC,IAAI+D,Q,6BAIX0B,GACLA,EAAEC,iBACF7H,EAAKwK,OAAOU,+BAA+BnI,KAAKJ,MAAMC,MAAOG,KAAKJ,MAAME,UAAU6C,MAAK,SAACuF,OACrFvF,MAAK,SAACuF,GAAK/I,QAAQC,IAAI8I,MACzBhF,OAAM,SAACC,GACJhE,QAAQC,IAAI+D,Q,+BAIhB,OACI,yBAAK3C,UAAU,aACX,yBAAKA,UAAU,iCACpB,yBAAKA,UAAU,aACf,8BACD,yBAAKA,UAAU,cACd,2BAAOyE,QAAQ,sBAAf,iBACA,2BAAOF,MAAO/E,KAAKJ,MAAMC,MAAOqF,SAAUlF,KAAK+H,aAAczJ,KAAK,QAAQ8G,KAAK,QAAQ5E,UAAU,eAAec,GAAG,qBAAqB8G,mBAAiB,YAAY/C,YAAY,gBACjL,2BAAO/D,GAAG,YAAYd,UAAU,wBAAhC,mDAEA,yBAAKA,UAAU,cAChB,2BAAOyE,QAAQ,yBAAf,YACA,2BAAOF,MAAO/E,KAAKJ,MAAME,SAAUoF,SAAUlF,KAAK+H,aAAczJ,KAAK,WAAW8G,KAAK,WAAW5E,UAAU,eAAec,GAAG,wBAAwB+D,YAAY,cAEhK,4BAAQ/G,KAAK,SAASkH,QAASxF,KAAKyF,MAAOjF,UAAU,mBAArD,SACA,4BAAQgF,QAASxF,KAAKgI,OAAQzI,MAAO,CAACmG,WAAY,QAASlF,UAAU,mBAArE,kB,GAhDcgB,aCgCL6G,G,YA9BX,aAAe,IAAD,8BACZ,+CACKzI,MAAS,CACZ0I,KAAM,MAER,EAAKC,aAAe,EAAKA,aAAavG,KAAlB,gBALR,E,iFASZhC,KAAKuI,iB,qCAGS,IAAD,OACbtL,EAAKwK,OAAOe,oBAAmB,SAACF,GAE1BA,GACF,EAAKhG,SAAS,CAAEgG,SAChBG,aAAaC,QAAQ,OAAQJ,EAAKK,OAElC,EAAKrG,SAAS,CAAEgG,KAAM,OACtBG,aAAaG,WAAW,c,+BAK5B,OACE,yBAAMpI,UAAU,aAAaR,KAAKJ,MAAM0I,KAAU,kBAAC,GAAD,MAAe,kBAAC,GAAD,W,GA3BrD9G,aCePqH,I,OAAb,YACE,WAAY/J,GAAQ,IAAD,8BACjB,4CAAMA,KAEDgK,UAAY,EAAKA,UAAU9G,KAAf,gBACjB,EAAK+G,OAAS,EAAKA,OAAO/G,KAAZ,gBACd,EAAKgH,OAAS,EAAKA,OAAOhH,KAAZ,gBACd,EAAKS,SAAU,EAAKA,SAAST,KAAd,gBACf,EAAKiH,QAAQ,EAAKA,QAAQjH,KAAb,gBACb,EAAKpC,MAAQ,CACXsJ,SAAU,CACR,CAAEpI,MAAO,qCAAsCQ,GAAI,GACnD,CAAER,MAAO,oCAAqCQ,GAAI,IAEpD6H,UAAW,GACXzK,EAAG,GACHR,IAAK,GACLiE,KAAM,IAhBS,EADrB,iFA+BEnC,KAAK+I,SACL/I,KAAKyC,aAhCP,2BAqCOJ,GACHrC,KAAKsC,SAAS,CACZH,KAAME,MAvCZ,iCA8CIrC,KAAKlB,MAAMsK,wBACX,IAAI/G,EAAM,GACOrE,EAAQE,IAAI,UAElBwE,OAAOC,MAAK,SAASC,GAC9BzD,QAAQC,IAAIwD,EAAOC,OACnBD,EAAOyG,SAAS9G,SAAQ,SAASO,GAEhC3D,QAAQC,IAAI0D,EAASsC,MAErB,IAAIkE,EAAWxG,EAASsC,KAEvBtC,EAASJ,OAAOC,MAAK,SAAS4G,GAE9BA,EAAQ1G,MAAMN,SAAQ,SAASiH,GAC7B,IAAIC,EAASD,EAAUpE,KAEvBoE,EAAUzG,iBAAiBJ,MAAK,SAASK,GAEvC7D,QAAQC,IAAIkK,EAAW,MAAMtG,GAE7B,IAAI0G,EAAM,CAACJ,EAAWtG,EAAIyG,GAC1BpH,EAAKY,KAAKyG,kBASfxG,OAAM,SAASC,OAIlBnD,KAAKmC,KAAKE,GAENlD,QAAQC,IAAI,QAAQY,KAAKJ,MAAMuC,MAKnCnC,KAAKlB,MAAMP,sBAAsB8D,GAGjClD,QAAQC,IAAIY,KAAKlB,MAAMoD,QACvB/C,QAAQC,IAAI,SAASY,KAAKlB,MAAMN,UA5FpC,4IA+FIwB,KAAK0E,SAAU9G,EAAK+G,UAAU,QAAQ,CACpCC,QAAS5E,KACTJ,MAAO,cAjGb,oIAyGUkD,GACN3D,QAAQC,IAAI0D,GAEZA,EAASC,iBAAiBJ,MAAK,SAASK,GAEtC7D,QAAQC,IAAI4D,MAOXE,OAAM,SAASC,OAGlBhE,QAAQC,IAAIY,KAAKJ,MAAMuC,QAxH3B,8QA+HI,IAGIwH,EAHAzL,EAAMjB,EAAKc,WAAWG,MAAMC,MAAM,SAClCO,EAAI,CAAC,QASX,IAAK,IAAI2C,KARPrB,KAAKlB,MAAMV,aAAaM,GAE1BR,EAAI0L,GAAG,SAAS,SAASC,GACrBF,EAAOE,EAASC,MAChB3K,QAAQC,IAAIuK,MAIFA,EAEZjL,EAAEuE,KAAK,CAAC3B,GAAID,EAAGP,MAAO6I,EAAKtI,GAAL,MAAkBH,KAAMyI,EAAKtI,GAAL,OAChDlC,QAAQC,IAAI,KAAOuK,EAAKtI,IAaxB,OAPM,MAALnD,GACDiB,QAAQC,IAAI,iBACdY,KAAKgJ,UAEHhJ,KAAKlB,MAAMV,aAAaM,GAGjBA,IAzJT,+IA4JY,GACNuE,KAAK,CAAC3B,GAAI,EAAGR,MAAO,OAAQI,KAAM,SAG5B,GACRxC,EAAEsB,KAAKgJ,SACP7J,QAAQC,IAAIV,GAERsB,KAAKlB,MAAMT,OACbc,QAAQC,IAAIY,KAAKlB,MAAMT,OArK7B,qIA2ME,OAJK2B,KAAKlB,MAAMT,MAAMyF,OAKpB,uBAAKtD,UAAU,OACb,gBAAC,IAAD,CAAQuJ,SAAS,iBAEjB,0BAAQvJ,UAAU,cAElB,sBAAIA,UAAU,YACR,0BACE,gBAAC,IAAD,CAAMA,UAAU,SAASH,GAAG,aAA5B,aAEF,0BACE,gBAAC,IAAD,CAAOG,UAAU,SAASH,GAAG,UAA7B,WAEF,6BAgBN,uBAAKG,UAAU,UACf,gBAAC,IAAD,CAAOmH,OAAK,EAACC,KAAK,YAAYC,UAAWtE,IACzC,gBAAC,IAAD,CAAOqE,KAAK,SAASC,UAAWpE,IAChC,gBAAC,IAAD,CAAOmE,KAAK,SAASC,UAAWQ,OAGhC,yDA9ON,GAAyB3I,cA8PnB+B,GAAqB,CAAErD,eAAagL,sBVxQL,yDAAM,WAAM3K,GAAN,SAAAC,EAAA,sDAEzCT,EAAa2L,GAAG,SAAS,SAAAC,GACvBpL,EAAS,CACPH,KAAM,kBAINK,QAASkL,EAASC,OAAS,QARU,2CAAN,uDUwQ2BvL,yBAEnDyL,GAAerI,aAVJ,SAAC/B,GAEvB,MAAO,CACLsC,OAAQtC,EAAMgC,SAAS4B,cACvBnF,MAAOuB,EAAMvB,MACbG,OAAQoB,EAAMgC,SAASC,kBAK0BJ,GAAzBE,CAA6CkH,ICxQnEoB,GAAcC,QACW,cAA7BlL,OAAOkH,SAASiE,UAEe,UAA7BnL,OAAOkH,SAASiE,UAEhBnL,OAAOkH,SAASiE,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOhK,GAC9BiK,UAAUC,cACPC,SAASH,GACT3H,MAAK,SAAA+H,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBhL,QACf2K,UAAUC,cAAcO,YAI1B5L,QAAQC,IACN,iHAKEkB,GAAUA,EAAO0K,UACnB1K,EAAO0K,SAASN,KAMlBvL,QAAQC,IAAI,sCAGRkB,GAAUA,EAAO2K,WACnB3K,EAAO2K,UAAUP,WAO5BxH,OAAM,SAAAC,GACLhE,QAAQgE,MAAM,4CAA6CA,M,4lBChG1D,ICKQ+H,gBAAgB,CAC7B7M,MCNmB,WAAyB,IAAxBuB,EAAuB,uDAAf,GAAIuL,EAAW,uCACzC,OAAQA,EAAO7M,MACb,IAAK,sBACH,OAAO,aACF6M,EAAO9M,OAGd,QACE,OAAOuB,IDFPgC,SDNgB,WAAyB,IAAxBhC,EAAuB,uDAAf,GAAIuL,EAAW,uCAC5C,OAAQA,EAAO7M,MACZ,IAAK,kBAIF,OAHAa,QAAQC,IAAI,WAAY+L,EAAOxM,SAC/BQ,QAAQC,IAAI+L,EAAOxM,SAEZ,MAEFiB,EAFL,CAOE4D,cAAe4H,OAAOC,OAAOF,EAAOxM,WAExC,IAAK,mBAGD,OAAO,MAEFiB,EAFL,CAOEiC,eAAgBsJ,EAAOxM,UAG/B,QACE,OAAOiB,MG1BX0L,GAAWtM,OAAOuM,8BAAgCvM,OAAOuM,+BAEzDD,GAAW,SAAA5M,GAAC,OAAIA,GACpB,IAAM8M,GAAWC,aACbC,aAAgBC,MAChBL,IAGSM,GAAQC,aAAYC,GAASN,ICH1CO,IAASC,OAET,kBAAC,IAAD,CAAUJ,MAAOA,IACb,kBAAC5B,GAAD,OAEHiC,SAASC,eAAe,SLSlB,SAAkB5L,GACvB,GAA6C,kBAAmBiK,UAAW,CAGzE,GADkB,IAAI4B,IAAIC,gBAAwBpN,OAAOkH,SAASmG,MACpDC,SAAWtN,OAAOkH,SAASoG,OAIvC,OAGFtN,OAAOe,iBAAiB,QAAQ,WAC9B,IAAMuK,EAAK,UAAM8B,gBAAN,sBAEPnC,KAgEV,SAAiCK,EAAOhK,GAEtCiM,MAAMjC,GACH3H,MAAK,SAAA6J,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5CtC,UAAUC,cAAcsC,MAAMnK,MAAK,SAAA+H,GACjCA,EAAaqC,aAAapK,MAAK,WAC7B3D,OAAOkH,SAAS8G,eAKpB3C,GAAgBC,EAAOhK,MAG1B4C,OAAM,WACL/D,QAAQC,IACN,oEArFA6N,CAAwB3C,EAAOhK,GAI/BiK,UAAUC,cAAcsC,MAAMnK,MAAK,WACjCxD,QAAQC,IACN,iHAMJiL,GAAgBC,EAAOhK,OK/B/BkK,I,kGCnBAzN,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.a85d2db0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cv.5968cf08.jpeg\";","import firebase from 'firebase';\r\nimport Rebase from 're-base';\r\nimport 'firebase/storage';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCxsv4y868zkAL-d13UqdeiaKs7MRSGpK8\",\r\n    authDomain: \"dominiksite-2841e.firebaseapp.com\",\r\n    databaseURL: \"https://dominiksite-2841e.firebaseio.com\",\r\n    projectId: \"dominiksite-2841e\",\r\n    storageBucket: \"dominiksite-2841e.appspot.com\",\r\n    messagingSenderId: \"844680785618\",\r\n    appId: \"1:844680785618:web:6b61ee1c1fb0bc57a6870b\",\r\n    measurementId: \"G-074D69LJ96\"\r\n  };\r\n  // Initialize Firebase\r\n  \r\n  const fire = firebase.initializeApp(config)\r\n  const base = Rebase.createClass(fire.database())\r\n  const firestore =firebase.database();\r\n  const storage = fire.storage()\r\n  export  {storage, fire, base, firestore}\r\n","import {fire  , base,storage}  from '../Fire';\r\nconst databaseRef = fire.database().ref();\r\n// this is to get the stat-cards table from firebase\r\nconst statCardsRef = databaseRef.child(\"posts\");\r\nconst storageRef = storage.ref().child('images');\r\n\r\nexport const postsFetched = (posts) => ({\r\n    type: 'FETCH_POSTS_SUCCESS',\r\n    posts\r\n  });\r\nexport const getAllStatPostsAction = () => async dispatch =>\r\n{\r\n  statCardsRef.on(\"value\", snapshot => {\r\n    dispatch({\r\n      type: \"getAllStatPosts\",\r\n      // if the json returns null, i.e. the\r\n      // stat-cards table is blank - empty\r\n      // then we'll return an empty object\r\n      payload: snapshot.val() || {}\r\n    });\r\n  });\r\n}\r\nexport const getAllStatPostsImages = (images) => async dispatch =>\r\n{\r\n \r\n    dispatch({\r\n      type: \"getAllStatImages\",\r\n      // if the json returns null, i.e. the\r\n      // stat-cards table is blank - empty\r\n      // then we'll return an empty object\r\n      payload: images\r\n      \r\n    });\r\n  \r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {Spring} from 'react-spring/renderprops'\r\nimport { postsFetched,getAllStatPostsImages } from \"./config/actions/index\";\r\nimport './style.css';\r\nlet lastScrollY = 0;\r\nlet ticking = false;\r\n\r\nexport class Project extends Component {\r\n  constructor(props) {\r\n    \r\n    super(props);\r\n    this.navRef = React.createRef();\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    };\r\n  }\r\n  componentDidMount(){\r\n  \r\n    window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n    componentWillUnmount() {\r\n      window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n    handleScroll = () => {\r\n      lastScrollY = window.scrollY;\r\n  \r\n      if (!ticking) {\r\n        window.requestAnimationFrame(() => {\r\n          //this.navRef.current.style.top = `${lastScrollY}px`;\r\n          console.log(this.navRef.current.style.top);\r\n          const styles = getComputedStyle(this.navRef.current)\r\n  \r\n          //console.log(styles) // rgb(0, 0, 0)\r\n         \r\n          ticking = false;\r\n        });\r\n     \r\n        ticking = true;\r\n      }\r\n    };  \r\n  render() {\r\n    console.log(this.props.images);\r\n    const spanStyles = {\r\n      color: \"#fff\",\r\n      borderColor: \"#00f\"\r\n    };\r\n      let styles = {\r\n        margin: '20px',\r\n        width: '250px',\r\n        height: '250px',\r\n        backgroundColor: \"yellow\",\r\n      };\r\n      const renderAuthButton=\"\";\r\n      \r\n    return (\r\n\r\n\r\n\r\n      <Spring\r\n  from={{ opacity: 0, marginTop: -500 }}\r\n  to={{ opacity: 1, marginTop: 0 }}\r\n  config={{duration:1000}}>\r\n    \r\n  {props => <div style={props}>      <div  ref={this.navRef} className=\"container\" style={{backgroundColor: this.props.color,position: \"relative\",maxWidth: '100%'}}>\r\n            <div className=\"row justify-content-md-center\">\r\n       <div className=\"col-12 \" >\r\n       <h1 style={{marginTop: '50px', marginBottom: '50px'}}>{this.props.title}</h1>\r\n    \r\n  \r\n    <div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12 col-xs-6 col-md-6\">\r\n    <div dangerouslySetInnerHTML={{ __html: this.props.text }} />\r\n   \r\n    </div>\r\n    <div class=\"col-12 .col-xs-6 col-md-6\">\r\n    {this.props.images.map(function(object,i){\r\n\r\nreturn (\r\n\r\n<div className='col'>\r\n       {\r\n            object[0] ==this.props.id &&<div className='col'><img src={object[1]} className=\"images\" ></img></div>\r\n       \r\n       }\r\n       \r\n    </div>)\r\n},this)}\r\n    </div>\r\n  </div></div>\r\n\r\n\r\n\r\n      \r\n \r\n\r\n  \r\n    \r\n </div>\r\n </div>\r\n </div></div>}\r\n</Spring>\r\n  \r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n   \r\n    images: state.allposts.statPostImages\r\n  }\r\n};\r\nconst mapDispatchToProps = { getAllStatPostsImages };\r\n\r\nexport const ProjectContainer = connect(mapStateToProps, mapDispatchToProps)(Project);","import React, { Component } from 'react';\r\nimport { postsFetched,getAllStatPostsImages } from \"./config/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport Project, { ProjectContainer } from './Project';\r\nimport {fire  , base, storage}  from './config/Fire';\r\nlet lastScrollY = 0;\r\nlet ticking = false;\r\nexport class Projects extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.navRef = React.createRef();\r\n    this.onLog = this.onLog.bind(this);\r\n    this.handleScroll = this.handleScroll.bind(this);\r\n    this.state = {\r\n        data: [\"1\",\"2\"],\r\n        posts: [],\r\n        posts2: [],\r\n        ref2: [],\r\n        licznik: 1\r\n      };\r\n}\r\nref2(temp){\r\n  this.setState({\r\n    ref2: temp\r\n    \r\n});\r\n\r\n}\r\nlicznik(temp){\r\n  this.setState({\r\n    licznik: temp\r\n    \r\n});\r\n}\r\ncomponentDidMount(){\r\n  if (this.props.posts2){\r\n  this.props.posts2.forEach( (post) => {\r\n    this.onAction(post.id);\r\n    \r\n  })\r\n  }\r\n\r\n  \r\n//window.addEventListener('scroll', this.handleScroll);\r\n}\r\ncomponentDidUpdate(){\r\n  console.log(this.props.posts);\r\n  \r\n }\r\n componentWillUnmount() {\r\n // window.removeEventListener('scroll', this.handleScroll);\r\n}\r\n\r\n\r\n  \r\n  handleScroll = () => {\r\n    lastScrollY = window.scrollY;\r\n\r\n    if (!ticking) {\r\n      window.requestAnimationFrame(() => {\r\n        //this.navRef.current.style.top = `${lastScrollY}px`;\r\n        console.log(this.navRef.current.style);\r\n        const styles = getComputedStyle(this.navRef.current)\r\n\r\n        //console.log(styles) // rgb(0, 0, 0)\r\n       \r\n        ticking = false;\r\n      });\r\n   \r\n      ticking = true;\r\n    }\r\n  };\r\n  onAction(id){\r\n    \r\n    var temp =[];\r\n    var storageRef = storage.ref('/images/'+id);\r\n   \r\n    storageRef.list().then(function(result) {\r\n      console.log(result.items);\r\n      result.items.forEach(function(imageRef) {\r\n        imageRef.getDownloadURL().then(function(url) {\r\n          console.log( \"adres obrazka\",url);\r\n          temp.push(url);\r\n          return url;\r\n      });\r\n       console.log(imageRef);\r\n        // And finally display them\r\n     \r\n      //console.log(imageRef.getDownloadURL());\r\n     \r\n        //this.onImage(imageRef);\r\n        //console.log(imageRef.getDownloadURL());\r\n      });\r\n    }).catch(function(error) {\r\n      // Handle any errors\r\n    });\r\n\r\n    this.ref2(temp);\r\n\r\n        console.log(\"aktualny\",this.state.ref2);\r\n   // const storageRef = storage.ref('/images/1576580835000').getDownloadURL();\r\n    //this.props.getAllStatPostsImages(temp);\r\n\r\n    \r\n    //console.log(this.props.posts2);\r\n    //console.log(this.props.images);\r\n  }\r\n\r\n \r\n onLog(){\r\n   console.log(this.props.posts);\r\n }\r\n  render() {\r\n    \r\n      //wyśietlanie listy projektów\r\n      var dane=this.props.posts;\r\n      console.log(this.props.images);\r\n   \r\n      var div;\r\n    if(this.props.posts2!= null){\r\n      div =this.props.posts2.map(function(item, i){\r\n        \r\n        //console.log({item});\r\n        //console.log(this.props.images);\r\n        // return <li className=\"list-group-item list-group-item-action\" key={i}><div className=\"row\"><div className=\"col-md\"></div><div className=\"col-md\">{item.title}</div><div className=\"col-md\">{item.text}</div></div></li>\r\n        return <ProjectContainer key={item.id} id={item.id}  title={item.title} text={item.text} color={item.color} />\r\n      \r\n      }, this)\r\n      //this.licznik(this.state.licznik+1)\r\n\r\n    }else\r\n    {\r\n      return <li className=\"list-group-item list-group-item-action\">Ładowanie..</li>\r\n    }\r\n      \r\n      \r\n\r\n      return (\r\n        \r\n<div>\r\n{div}\r\n          <ul className=\"list-group\">\r\n              \r\n              \r\n             \r\n             \r\n          </ul>\r\n           </div>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    posts2: state.allposts.statPostState,\r\n    posts: state.posts,\r\n    images: state.allposts.statPostImages\r\n  }\r\n};\r\nconst mapDispatchToProps = { postsFetched,getAllStatPostsImages };\r\n\r\nexport const ProjectsContainer = connect(mapStateToProps, mapDispatchToProps)(Projects);","import React from 'react';\r\nimport './style.css';\r\nconst About = () => {\r\n \r\n  return (\r\n    <div className=\"container\">\r\n      <h1>CV</h1>\r\n      <p><img src={require('./cv.jpeg')} className=\"CV\"></img></p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\nimport { postsFetched } from \"./config/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Link\r\n} from 'react-router-dom';\r\nexport class List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n   \r\n    this.state = {\r\n        data: [\"1\",\"2\"],\r\n        posts: [\"1\",\"2\"]\r\n      };\r\n}\r\ncomponentDidMount(){\r\n  var results = this.props.posts;\r\n            var data = [], item;\r\n            for (var i = 0, len = results.length; i < len; i++) {\r\n                item = results[i];\r\n                data.push({id: item.id, title: item.title});\r\n            }\r\n            //console.log(this.props.posts);\r\n            var data2 = this.props.data;\r\n            this.setState({data2});\r\n}\r\n  render() {\r\n      //works for array\r\n      var dane=this.props.posts;\r\n      console.log(this.props.posts2);\r\n      \r\n      if(this.props.posts2!= null){\r\n      var li =this.props.posts2.map(function(item, i){\r\n        console.log({item});\r\n        return <li className=\"list-group-item list-group-item-action\" key={i}  style={{backgroundColor: item.color}}><div className=\"row\"><div className=\"col-md\"> <Link to={{ pathname: '../admin/edit', title: item.title, text: item.text,color: item.color, id:item.id  }}>Edytuj</Link></div><div className=\"col-md\">{item.title}</div><div className=\"col-md\">{item.text}</div></div></li>\r\n      })\r\n    }\r\n      //doesn't work for array of objects\r\n      \r\n\r\n      return (\r\n        \r\n\r\n          <ul className=\"list-group\">\r\n              \r\n              {li}\r\n             \r\n             \r\n          </ul>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    posts2: state.allposts.statPostState,\r\n    posts: state.posts\r\n  }\r\n};\r\nconst mapDispatchToProps = { postsFetched };\r\n\r\nexport const ListContainer = connect(mapStateToProps, mapDispatchToProps)(List);","import React, { Component } from 'react';\r\nimport { postsFetched } from \"./config/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport {fire  , base}  from './config/Fire';\r\nimport { uuid } from 'uuidv4';\r\nexport class Add extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.add = this.add.bind(this);\r\n   \r\n   // this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n        posts: {},\r\n        currentUser: null,\r\n        title: 'sss',\r\n        text: '',\r\n        color:''\r\n      };\r\n}\r\ncomponentWillMount(){\r\n  this.postsRef = base.syncState('posts',{\r\n      context: this,\r\n      state: 'posts'\r\n  });\r\n\r\n  \r\n}\r\nhandleChangeTitle(e){\r\n  e.preventDefault();\r\n\r\n  const title = e.target.value;\r\n  this.setState({title});\r\n\r\n\r\n  console.log(this.state.title);\r\n\r\n}\r\nhandleChangeText(e){\r\n  e.preventDefault();\r\n  const text = e.target.value;\r\n \r\n  \r\n\r\n  this.setState({text});\r\n  console.log(e.target.value);\r\n \r\n\r\n}\r\nhandleChangeColor(e){\r\n  e.preventDefault();\r\n  const color = e.target.value;\r\n \r\n  \r\n\r\n  this.setState({color});\r\n  console.log(e.target.value);\r\n \r\n\r\n}\r\nadd(e){\r\n  e.preventDefault();\r\n  const posts = {...this.state.posts};\r\n  const id = uuid();\r\n  const title = this.state.title;\r\n  const text = this.state.text;\r\n  const color = this.state.color;\r\n  console.log(id);\r\n  posts[id] = {\r\n    id: id,\r\n    title: title,\r\n   text: text,\r\n   color: color\r\n   // owner: this.state.currentUser.uid\r\n  };\r\n  console.log( posts);\r\n  \r\n  this.setState({posts});\r\n  var data={\r\n      \"title\":title,\r\n      \"text\":text\r\n  };\r\n  //fire.database().ref().child('posts').child('1').set(data);\r\n  console.log(this.props.posts);\r\n}\r\nfileSelectedHandler= event => {\r\n  console.log(event.target.files[0]);\r\n}\r\ncomponentDidUpdate(){\r\n  console.log(this.props.posts);\r\n }\r\n \r\n  render() {\r\n      //wyśietlanie listy projektów\r\n     \r\n      \r\n\r\n      return (\r\n        <form>\r\n        <div className=\"form-group\">\r\n         <label htmlFor=\"title\">Tytuł</label>\r\n         <input type=\"textarea\"  value={this.state.title} onChange={this.handleChangeTitle.bind(this)} name=\"title\" className=\"form-control\" placeholder=\"Enter title\" />\r\n         <small id=\"emailHelp\" className=\"form-text \">We'll never share your email with anyone else.</small>\r\n        </div>\r\n         <div className=\"form-group\">\r\n        <label htmlFor=\"exampleInputPassword1\">treść</label>\r\n        <input value={this.state.text} name=\"name\" onChange={this.handleChangeText.bind(this)} type=\"textarea\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Text\" />\r\n      <input name=\"color\" value={this.state.color} type=\"color\" id=\"myColor\" onChange={this.handleChangeColor.bind(this)} ></input>\r\n      <input type=\"file\" onChange={this.fileSelectedHandler}/>\r\n        </div>\r\n        <button type=\"submit\" onClick={this.login} className=\"btn btn-primary\">Login</button>\r\n        <button onClick={this.add} style={{marginLeft: '25px'}} className=\"btn btn-success\">dodaj{this.state.title}</button>\r\n   </form>\r\n\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    \r\n    posts: state.posts\r\n  }\r\n};\r\nconst mapDispatchToProps = { postsFetched };\r\n\r\nexport const AddContainer = connect(mapStateToProps, mapDispatchToProps)(Add);\r\n","import React, { Component } from 'react';\r\nimport { postsFetched,getAllStatPostsImages } from \"./config/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport {storage, fire  , base, firestore}  from './config/Fire';\r\n\r\nimport 'quill/dist/quill.snow.css'; \r\nimport ReactQuill from 'react-quill';\r\nexport class Edit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.update = this.update.bind(this);\r\n    this.handleChangeEditor = this.handleChangeEditor.bind(this);\r\n   \r\n   // this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      file:'',\r\n      url:'',\r\n      isFile:false,\r\n      imagePreviewUrl: '',\r\n        posts: {},\r\n        currentUser: null,\r\n        title: this.props.location.title,\r\n        text: this.props.location.text,\r\n        color:  this.props.location.color,\r\n        id: this.props.location.id\r\n      };\r\n}\r\n\r\ncomponentWillMount(){\r\n  this.postsRef = base.syncState('posts',{\r\n      context: this,\r\n      state: 'posts'\r\n  });\r\n  \r\n  \r\n}\r\nhandleImageAsFile = (e) => {\r\n  console.log(e.target.files[0]);\r\n  const image = e.target.files[0]\r\n  this.setState({isFile: true})\r\n this.setState({file: image})\r\n console.log(this.state.file);\r\n}\r\ncomponentDidMount(){\r\n \r\n\r\n}\r\nonprops(){\r\n  if (this.props.location.id!=this.state.id){\r\n  const title=this.props.location.title;\r\n  const text=this.props.location.text;\r\n  const id=this.props.location.id;\r\n  const color=this.props.location.color;\r\n  this.setState({ title: title});\r\n  this.setState({ id: id});\r\n  this.setState({ text: text});\r\n  this.setState({ color: color});\r\n  console.log(this.state.title);\r\n  console.log(this.props.location.title);\r\n  }\r\n}\r\nhandleChangeTitle(e){\r\n  e.preventDefault();\r\n\r\n  const title = e.target.value;\r\n  this.setState({title});\r\n\r\n\r\n  console.log(this.state.title);\r\n\r\n}\r\nhandleChangeText(e){\r\n  e.preventDefault();\r\n  const text = e.target.value;\r\n \r\n  \r\n\r\n  this.setState({text});\r\n  console.log(e.target.value);\r\n \r\n\r\n}\r\nhandleChangeColor(e){\r\n  e.preventDefault();\r\n  const color = e.target.value;\r\n \r\n  \r\n\r\n  this.setState({color});\r\n  console.log(e.target.value);\r\n \r\n\r\n}\r\n\r\ndeletePost =() =>{\r\n  const databaseRef = fire.database().ref('posts/'+this.props.location.id).remove().then(() => {\r\n    console.log(\"plik usuniety\");\r\n  }).catch((error) => {\r\n   console.log(\"bład:\"+error);\r\n  });\r\n\r\n}\r\ndelete = (id,name)=>{\r\n\r\n // var desertRef = storage.child('images/1576580858304/images.png');\r\n  // Delete the file\r\n  const deleteTask = storage.ref(`/images/${id}/${name}`).delete().then(() => {\r\n    console.log(\"plik usuniety\");\r\n  }).catch((error) => {\r\n   console.log(\"bład:\"+error);\r\n  });\r\n  \r\n}\r\nupdate(e){\r\n  e.preventDefault();\r\n  const id = this.state.id;\r\n  const title = this.state.title;\r\n  const text = this.state.text;\r\n  const color = this.state.color;\r\n  console.log(this.state.id);\r\n  //let userRef = this.firestore.ref('posts/' + this.props.location.id);\r\n  const databaseRef = fire.database().ref('posts/'+this.props.location.id);\r\n  if  (this.state.isFile){\r\n\r\n    console.log(this.state.file);\r\n  const uploadTask = storage.ref(`/images/${this.state.id}/${this.state.file.name}`).put(this.state.file);\r\n  console.log(\"obrazek: \"+uploadTask);\r\n};\r\n// this is to get the stat-cards table from firebase\r\nconst statCardsRef = databaseRef.update({\r\n  \r\n  title: title,\r\n  text: text,\r\n  color: color\r\n}).then[()=> {\r\n  console.log('updated!');\r\n}];\r\n console.log(statCardsRef);\r\n \r\n  // firestore.Collection('posts').oc(this.props.location.id).update({\r\n  //   title: title,\r\n  //   text: text,\r\n  //   color: color\r\n  // })\r\n  \r\n \r\n  //fire.database().ref().child('posts').child('1').set(data);\r\n  console.log(this.props.posts);\r\n}\r\ncomponentDidUpdate(){\r\n  console.log(this.props.posts);\r\n  \r\n this.onprops();\r\n }\r\n _handleImageChange(e){\r\n  e.preventDefault();\r\n\r\n  let reader = new FileReader();\r\n  let file = e.target.files[0];\r\n\r\n  reader.onloadend = () => {\r\n    this.setState({\r\n      file: file,\r\n      imagePreviewUrl: reader.result\r\n    });\r\n  }\r\n\r\n  reader.readAsDataURL(file)\r\n\r\n };\r\n handleChangeEditor(editor) {\r\n  //console.log('background', editor);\r\n  const text = editor;\r\n   this.setState({text});\r\n};\r\n  render() {\r\n    //const { quill, quillRef } = useQuill();\r\n    //this.onprops();\r\n      //wyśietlanie listy projektów\r\n      let {imagePreviewUrl} = this.state;\r\n      let $imagePreview = null;\r\n      if (imagePreviewUrl) {\r\n        $imagePreview = (<img src={imagePreviewUrl} />);\r\n      } else {\r\n        $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\r\n      }\r\n      console.log(this.props.location.title);\r\n     console.log(this.props.images);\r\n      return (<div>\r\n        <h1>Edytuj</h1>\r\n        <form>\r\n         \r\n        <div className=\"form-group\">\r\n        {this.state.id}\r\n         <label htmlFor=\"title\">Tytuł</label>\r\n         <input type=\"textarea\"  value={this.state.title} onChange={this.handleChangeTitle.bind(this)} name=\"title\" className=\"form-control\" placeholder=\"Enter title\" />\r\n         <small id=\"emailHelp\" className=\"form-text \">We'll never share your email with anyone else.</small>\r\n        </div>\r\n         <div className=\"form-group\">\r\n        <label htmlFor=\"exampleInputPassword1\">treść</label>\r\n        <div className=\"form-group\">\r\n   <ReactQuill theme=\"snow\" value={this.state.text} onChange={this.handleChangeEditor} style={{ width: 500, height: 500 }}/>\r\n   \r\n    </div>\r\n    </div>\r\n    <div className=\"form-group\" style={{ marginTop: '50px' }}>\r\n      <input name=\"color\" value={this.state.color} type=\"color\" id=\"myColor\" onChange={this.handleChangeColor.bind(this)} ></input>\r\n        </div>\r\n        <div className=\"form-group\">\r\n        <input className=\"fileInput\" \r\n            type=\"file\" \r\n            onChange={this.handleImageAsFile} />\r\n            </div>\r\n        <button type=\"submit\" onClick={this.login} className=\"btn btn-primary\">Usuń</button>\r\n        <div className=\"imgPreview\">\r\n          {$imagePreview}\r\n        </div>\r\n        \r\n\r\n      \r\n        <button onClick={this.deletePost} style={{marginLeft: '25px'}} className=\"btn btn-success\">Usuń</button>\r\n        <button onClick={this.update} style={{marginLeft: '25px'}} className=\"btn btn-success\">Zmień</button>\r\n   </form>\r\n   \r\n   {this.props.images.map(function(object,i){\r\n\r\nreturn (\r\n\r\n<div>\r\n       {\r\n            object[0] ==this.state.id && <p><img src={object[1]} style={{width: '150px'}}></img>  <button onClick={() => this.delete(object[0],object[2])} className=\"btn btn-primary\">Usuń</button></p>\r\n       }\r\n    </div>)\r\n},this)}\r\n   </div>\r\n      )\r\n   \r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    \r\n    posts: state.posts,\r\n    images: state.allposts.statPostImages\r\n  }\r\n};\r\nconst mapDispatchToProps = { postsFetched, getAllStatPostsImages };\r\n\r\nexport const EditContainer = connect(mapStateToProps, mapDispatchToProps)(Edit);","import React, { Component } from 'react';\r\nimport {fire  , base}  from './config/Fire';\r\nimport {ListContainer} from './list';\r\nimport {AddContainer} from './Add';\r\nimport {EditContainer} from './Edit';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Link\r\n  } from 'react-router-dom';\r\n\r\nclass Backend extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n        this.update = this.update.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n       // this.handleChange = this.handleChange.bind(this);\r\n        this.state = {\r\n            posts: {},\r\n            currentUser: null,\r\n            title: 'sss',\r\n            text: ''\r\n          };\r\n    }\r\n    handleChangeTitle(e){\r\n        e.preventDefault();\r\n    \r\n        const title = e.target.value;\r\n        this.setState({title});\r\n    \r\n      \r\n        console.log(this.state.title);\r\n\r\n    }\r\n    handleChangeText(e){\r\n        e.preventDefault();\r\n        const text = e.target.value;\r\n       \r\n        \r\n    \r\n        this.setState({text});\r\n        console.log(e.target.value);\r\n       \r\n\r\n    }\r\n    componentWillMount(){\r\n        this.postsRef = base.syncState('posts',{\r\n            context: this,\r\n            state: 'posts'\r\n        });\r\n      \r\n        \r\n    }\r\n    componentWillUnmount(){\r\n        base.removeBinding(this.postsRef);\r\n    }\r\n    update(post){\r\n        const posts  ={...this.state.posts};\r\n        posts[post.id]= post;\r\n        this.setState({posts});\r\n    }\r\n\r\n\r\n    logout() {\r\n        fire.auth().signOut();\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (<div className=\"container\"> \r\n            <h1>Welcome to Backend!</h1>\r\n            <div className=\"container\">\r\n            <div className=\"row justify-content-md-center\">\r\n            <div className=\"col-md-6\"><ListContainer /></div>\r\n       <div className=\"col-md-6 \">\r\n           <div className=\"App\">\r\n           <Route exact path=\"/admin/edit\" component={EditContainer} />\r\n           <Route exact path=\"/admin\" component={AddContainer} />\r\n      </div>\r\n      \r\n </div>\r\n </div>\r\n </div>\r\n \r\n            <button className=\"btn btn-success\" onClick={this.logout}>Wyloguj</button>\r\n        </div>)\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Backend;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {fire} from './config/Fire';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.login = this.login.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.signup = this.signup.bind(this);\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  login(e) {\r\n    e.preventDefault();\r\n    fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{\r\n    }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  signup(e){\r\n    e.preventDefault();\r\n    fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{\r\n    }).then((u)=>{console.log(u)})\r\n    .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n  render() {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-md-center\">\r\n       <div className=\"col-md-6 \">\r\n       <form>\r\n      <div className=\"form-group\">\r\n       <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n       <input value={this.state.email} onChange={this.handleChange} type=\"email\" name=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\r\n       <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n      </div>\r\n       <div className=\"form-group\">\r\n      <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n      <input value={this.state.password} onChange={this.handleChange} type=\"password\" name=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\r\n      </div>\r\n      <button type=\"submit\" onClick={this.login} className=\"btn btn-primary\">Login</button>\r\n      <button onClick={this.signup} style={{marginLeft: '25px'}} className=\"btn btn-success\">Signup</button>\r\n </form>\r\n </div>\r\n </div>\r\n </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport {fire} from './config/Fire';\r\nimport Backend from './Backend';\r\nimport Login from './Login';\r\n\r\nclass Admin extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = ({\r\n        user: null,\r\n      });\r\n      this.authListener = this.authListener.bind(this);\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.authListener();\r\n    }\r\n  \r\n    authListener() {\r\n      fire.auth().onAuthStateChanged((user) => {\r\n        //console.log(user);\r\n        if (user) {\r\n          this.setState({ user });\r\n          localStorage.setItem('user', user.uid);\r\n        } else {\r\n          this.setState({ user: null });\r\n          localStorage.removeItem('user');\r\n        }\r\n      });\r\n    }\r\n    render() {\r\n      return (\r\n        <div  className=\"container\">{this.state.user ?  ( <Backend/>) : (<Login />)}</div>)\r\n  }\r\n  }\r\n\r\nexport default Admin;\r\n","import * as React from \"react\";\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport './style.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {ProjectsContainer} from './projects';\r\nimport {ButtonsComponent} from './buttonsNav';\r\nimport About from './about';\r\nimport Chat from './Chat';\r\nimport Admin from './Admin';\r\nimport { connect } from \"react-redux\";\r\nimport { postsFetched,getAllStatPostsAction,getAllStatPostsImages } from \"./config/actions/index\";\r\nimport {fire  , base, storage}  from './config/Fire';\r\nimport { Link2, animateScroll as scroll } from \"react-scroll\";\r\nimport { ProjectContainer } from \"./Project\";\r\nexport class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n   \r\n    this.sendState = this.sendState.bind(this);\r\n    this.onSync = this.onSync.bind(this);\r\n    this.onPush = this.onPush.bind(this);\r\n    this.onAction= this.onAction.bind(this);\r\n    this.onImage=this.onImage.bind(this);\r\n    this.state = {\r\n      articles: [\r\n        { title: \"React Redux Tutorial for Beginners\", id: 1 },\r\n        { title: \"TypeScript tutorial for beginners\", id: 2 }\r\n      ],\r\n      temporary: [],\r\n      a: [],\r\n      ref: [],\r\n      ref2: []\r\n    };\r\n  }\r\n\r\n\r\n componentDidMount() {\r\n    // fetch(\"https://randomuser.me/api/?format=json&results=10\")\r\n    //   .then(res => res.json())\r\n    //   .then(json => this.props.postsFetched(json.results));\r\n      \r\n    \r\n   //await this.sendState();\r\n\r\n  \r\n  this.onSync();\r\n  this.onAction();\r\n //console.log(this.props);\r\n \r\n    \r\n  }\r\n  ref2(temp){\r\n    this.setState({\r\n      ref2: temp\r\n      \r\n  });\r\n}\r\n  \r\n  \r\n  onAction(){\r\n    this.props.getAllStatPostsAction();\r\n    var temp =[];\r\n    var storageRef = storage.ref(\"images\");\r\n   \r\n    storageRef.list().then(function(result) {\r\n      console.log(result.items);\r\n      result.prefixes.forEach(function(imageRef) {\r\n        //nazwa folderu zawierająca zdjecia\r\n       console.log(imageRef.name);\r\n       \r\n       var foldername=imageRef.name;\r\n   \r\n        imageRef.list().then(function(result2) {\r\n        \r\n        result2.items.forEach(function(imageRef2) {\r\n          var filename=imageRef2.name;\r\n          \r\n          imageRef2.getDownloadURL().then(function(url) {\r\n\r\n            console.log(foldername,\"url\",url);\r\n            //zapisywanie w tablicy adresu url obrazka razem z id posta do ktorego zostal przypisany\r\n            var array=[foldername,url,filename]\r\n            temp.push(array);\r\n        });\r\n      });\r\n      });\r\n      //console.log(imageRef.getDownloadURL());\r\n     \r\n        //this.onImage(imageRef);\r\n        //console.log(imageRef.getDownloadURL());\r\n      });\r\n    }).catch(function(error) {\r\n      // Handle any errors\r\n    });\r\n\r\n    this.ref2(temp);\r\n\r\n        console.log(\"obraz\",this.state.ref2);\r\n   // const storageRef = storage.ref('/images/1576580835000').getDownloadURL();\r\n\r\n\r\n   //zapisywanie do stanu adresów obrazków\r\n    this.props.getAllStatPostsImages(temp);\r\n\r\n    \r\n    console.log(this.props.posts2);\r\n    console.log(\"Obrazy\",this.props.images);\r\n  }\r\n  async sendState(){\r\n    this.postsRef =base.syncState('posts',{\r\n      context: this,\r\n      state: 'temporary'\r\n  });\r\n \r\n  //this.props.postsFetched(this.state.temporary);\r\n\r\n  //console.log(this.state.temporary);\r\n  \r\n  }\r\n  onImage(imageRef) {\r\n    console.log(imageRef);\r\n    var fileURLs = [];\r\n    imageRef.getDownloadURL().then(function(url) {\r\n      // TODO: Display the image on the UI\r\n      console.log(url);\r\n    //   this.setState({\r\n    //     ref2: [\r\n    //         ...this.state.ref2,\r\n    //         url\r\n    //     ]\r\n    // });\r\n    }).catch(function(error) {\r\n      // Handle any errors\r\n    });\r\n    console.log(this.state.ref2);\r\n  };\r\n async componentDidUpdate(){\r\n   \r\n   // console.log(this.props.posts);\r\n  }\r\n  onPush(){\r\n    let ref = fire.database().ref().child(\"posts\");\r\n    var a = [\"test\"];\r\n    this.props.postsFetched(a);\r\n    let snap;\r\n  ref.on('value', function(snapshot) {\r\n      snap = snapshot.val();\r\n      console.log(snap);\r\n  });\r\n\r\n\r\n  for (var i in snap){\r\n   \r\n    a.push({id: i, title: snap[i][\"title\"], text: snap[i][\"text\"]});\r\n  console.log(\"\\n\" + snap[i]);\r\n    //for (var n in snap[i]){\r\n    //     console.log(n, snap[i][n])     \r\n // }\r\n \r\n}\r\nif(ref==null){\r\n  console.log(\"pusta zmienna\");\r\nthis.onPush();\r\n}else{\r\n  this.props.postsFetched(a);\r\n \r\n}\r\n  return a;\r\n  }\r\n  async onSync(){\r\n    var b = [];\r\n    b.push({id: 1, title: \"test\", text: \"text\"});\r\n    \r\n    //console.log(ref);\r\n    var a = [];\r\n    a=this.onPush();\r\n    console.log(a);\r\n    \r\n    if (this.props.posts){\r\n      console.log(this.props.posts);\r\n    }    \r\n  // if(a.length=0){\r\n  //   console.log(\"nie jest 0\");\r\n  // this.props.postsFetched(a);\r\n  // a=null;\r\n  // }else{\r\n  //     this.props.postsFetched(this.onPush());\r\n  \r\n  // }\r\n    //console.log(this.state.temporary);\r\n    //console.log(this.state.temporary);\r\n    // var results = this.state.temporary;\r\n    // console.log(results.length);\r\n   \r\n\r\n    //         var temporary = [], item;\r\n    //         for (var i = 1, len = results.length; i < len; i++) {\r\n    //             item = results[i];\r\n    //             //console.log(item[\"title\"]);\r\n    //             //temporary.push({id: item.title, title: item.text});\r\n    //         }\r\n    //         //console.log(temporary);\r\n            \r\n            \r\n    \r\n    \r\n            //console.log(a);\r\n            //this.setState(a);\r\n         \r\n   \r\n            \r\n  }\r\n  render() {\r\n    if(this.props.posts.length==0){\r\n     // this.onSync();//this.props.postsFetched(this.state.a);\r\n   }\r\n   \r\n  return (\r\n    <div className=\"App\" >\r\n      <Router basename=\"/db.github.io\">\r\n      \r\n      <header className=\"App-header\">\r\n     \r\n      <ul className=\"ButtonUl\">\r\n            <li>\r\n              <Link className=\"button\" to=\"/projects\">Projekty</Link>\r\n            </li>\r\n            <li>\r\n              <Link  className=\"button\" to=\"/about\">o mnie</Link>\r\n            </li>\r\n            <li>\r\n            {/* <button onClick={()=>{ window.scrollTo(0, 300);;}}>scrool</button>\r\n            <button onClick={this.elScroll.executeScroll}>Click to scroll </button> */}\r\n            </li>\r\n            \r\n           \r\n            {/* <li>\r\n            <button onClick={this.onSync}>sync</button>\r\n            </li>\r\n            <li>\r\n            <button onClick={this.onAction}>test action</button>\r\n            </li> */}\r\n          </ul>\r\n         \r\n        \r\n      </header>\r\n      <div className=\"Router\">\r\n      <Route exact path=\"/projects\" component={ProjectsContainer}/>\r\n      <Route path=\"/about\" component={About} />\r\n      <Route path=\"/admin\" component={Admin} /> \r\n      </div>\r\n      </Router>\r\n      <div>Dominik Bulandra 2022</div>\r\n    </div>\r\n    \r\n    \r\n  );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    posts2: state.allposts.statPostState,\r\n    posts: state.posts,\r\n    images: state.allposts.statPostImages\r\n  }\r\n};\r\nconst mapDispatchToProps = { postsFetched,getAllStatPostsAction,getAllStatPostsImages };\r\n\r\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const allposts = (state = {}, action) => { // (1)\r\n    switch (action.type) { // (2)\r\n       case \"getAllStatPosts\":\r\n          console.log(\"getting \", action.payload);\r\n          console.log(action.payload);\r\n      \r\n          return {\r\n            // keep the old state\r\n            ...state,\r\n           \r\n            // add all the cards from the database\r\n            // they will come in a json format,\r\n            // so we need to convert them to array\r\n            statPostState: Object.values(action.payload)\r\n          };\r\n        case \"getAllStatImages\":\r\n           // console.log(\"getting \", action.payload);\r\n         //   console.log(action.payload);\r\n            return {\r\n              // keep the old state\r\n              ...state,\r\n             \r\n              // add all the cards from the database\r\n              // they will come in a json format,\r\n              // so we need to convert them to array\r\n              statPostImages: action.payload\r\n              \r\n            };\r\n      default:\r\n        return state\r\n    }\r\n  }","import { combineReducers, applyMiddleware } from \"redux\";\r\nimport { posts } from \"./posts\";\r\nimport { allposts } from \"./allposts\";\r\n\r\n\r\nexport default combineReducers({\r\n  posts,allposts\r\n});","export const posts = (state = [], action) => { // (1)\r\n    switch (action.type) { // (2)\r\n      case 'FETCH_POSTS_SUCCESS':\r\n        return [\r\n          ...action.posts\r\n        ]\r\n        \r\n      default:\r\n        return state\r\n    }\r\n  }","import { createStore, applyMiddleware,compose } from 'redux';\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducers from './reducers/';\r\nlet devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nif (process.env.NODE_ENV === 'prod' || process.env.NODE_ENV === 'production') {\r\n    devTools = a => a;};\r\nconst enhancer = compose(\r\n    applyMiddleware(reduxThunk),\r\n    devTools,\r\n    // other store enhancers if any\r\n  );\r\nexport const store = createStore(reducers,enhancer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {AppContainer} from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from \"./config/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  \r\n<Provider store={store}>\r\n    <AppContainer />\r\n  </Provider>,\r\n document.getElementById('root')\r\n);\r\n//console.log(store.getState());\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}
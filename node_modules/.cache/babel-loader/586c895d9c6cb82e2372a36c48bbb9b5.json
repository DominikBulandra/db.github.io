{"ast":null,"code":"var _jsxFileName = \"C:\\\\npm\\\\moja\\\\src\\\\App.js\";\nimport * as React from \"react\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ProjectsContainer } from './projects';\nimport About from './about';\nimport Chat from './Chat';\nimport Admin from './Admin';\nimport { connect } from \"react-redux\";\nimport { postsFetched, getAllStatPostsAction, getAllStatPostsImages } from \"./config/actions/index\";\nimport { fire, base, storage } from './config/Fire';\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sendState = this.sendState.bind(this);\n    this.onSync = this.onSync.bind(this);\n    this.onPush = this.onPush.bind(this);\n    this.onAction = this.onAction.bind(this);\n    this.state = {\n      articles: [{\n        title: \"React Redux Tutorial for Beginners\",\n        id: 1\n      }, {\n        title: \"TypeScript tutorial for beginners\",\n        id: 2\n      }],\n      temporary: [],\n      a: [],\n      ref: []\n    };\n  }\n\n  componentDidMount() {\n    // fetch(\"https://randomuser.me/api/?format=json&results=10\")\n    //   .then(res => res.json())\n    //   .then(json => this.props.postsFetched(json.results));\n    //await this.sendState();\n    this.onSync();\n    this.onAction(); //console.log(this.props);\n  }\n\n  displayImage(imageRef) {\n    var fileURLs = [];\n    imageRef.getDownloadURL().then(function (url) {\n      // TODO: Display the image on the UI\n      fileURLs.push(url);\n    }).catch(function (error) {// Handle any errors\n    });\n    console.log(fileURLs);\n  }\n\n  onAction() {\n    this.props.getAllStatPostsAction();\n    var storageRef = storage.ref(\"/images/\"); // Now we get the references of these images\n\n    storageRef.listAll().then(function (result) {\n      result.items.forEach(function (imageRef) {\n        // And finally display them\n        displayImage(imageRef);\n      });\n    }).catch(function (error) {// Handle any errors\n    }); // const storageRef = storage.ref('/images/1576580835000').getDownloadURL();\n\n    this.props.getAllStatPostsImages(storageRef);\n    console.log(this.props.posts2);\n    console.log(this.props.images);\n  }\n\n  async sendState() {\n    this.postsRef = base.syncState('posts', {\n      context: this,\n      state: 'temporary'\n    }); //this.props.postsFetched(this.state.temporary);\n    //console.log(this.state.temporary);\n  }\n\n  async componentDidUpdate() {// console.log(this.props.posts);\n  }\n\n  onPush() {\n    let ref = fire.database().ref().child(\"posts\");\n    var a = [\"test\"];\n    this.props.postsFetched(a);\n    let snap;\n    ref.on('value', function (snapshot) {\n      snap = snapshot.val();\n      console.log(snap);\n    });\n\n    for (var i in snap) {\n      a.push({\n        id: i,\n        title: snap[i][\"title\"],\n        text: snap[i][\"text\"]\n      });\n      console.log(\"\\n\" + snap[i]); //for (var n in snap[i]){\n      //     console.log(n, snap[i][n])     \n      // }\n    }\n\n    if (ref == null) {\n      console.log(\"pusta zmienna\");\n      this.onPush();\n    } else {\n      this.props.postsFetched(a);\n    }\n\n    return a;\n  }\n\n  async onSync() {\n    var b = [];\n    b.push({\n      id: 1,\n      title: \"test\",\n      text: \"text\"\n    }); //console.log(ref);\n\n    var a = [];\n    a = this.onPush();\n    console.log(a);\n\n    if (this.props.posts) {\n      console.log(this.props.posts);\n    } // if(a.length=0){\n    //   console.log(\"nie jest 0\");\n    // this.props.postsFetched(a);\n    // a=null;\n    // }else{\n    //     this.props.postsFetched(this.onPush());\n    // }\n    //console.log(this.state.temporary);\n    //console.log(this.state.temporary);\n    // var results = this.state.temporary;\n    // console.log(results.length);\n    //         var temporary = [], item;\n    //         for (var i = 1, len = results.length; i < len; i++) {\n    //             item = results[i];\n    //             //console.log(item[\"title\"]);\n    //             //temporary.push({id: item.title, title: item.text});\n    //         }\n    //         //console.log(temporary);\n    //console.log(a);\n    //this.setState(a);\n\n  }\n\n  render() {\n    if (this.props.posts.length == 0) {// this.onSync();//this.props.postsFetched(this.state.a);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/projects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Projects\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"About\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Chat\")))), React.createElement(Route, {\n      exact: true,\n      path: \"/projects\",\n      component: ProjectsContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/chat\",\n      component: Chat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/admin\",\n      component: Admin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts2: state.allposts.statPostState,\n    posts: state.posts,\n    images: state.allposts.statPostImages\n  };\n};\n\nconst mapDispatchToProps = {\n  postsFetched,\n  getAllStatPostsAction,\n  getAllStatPostsImages\n};\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/npm/moja/src/App.js"],"names":["React","BrowserRouter","Router","Route","Link","ProjectsContainer","About","Chat","Admin","connect","postsFetched","getAllStatPostsAction","getAllStatPostsImages","fire","base","storage","App","Component","constructor","props","sendState","bind","onSync","onPush","onAction","state","articles","title","id","temporary","a","ref","componentDidMount","displayImage","imageRef","fileURLs","getDownloadURL","then","url","push","catch","error","console","log","storageRef","listAll","result","items","forEach","posts2","images","postsRef","syncState","context","componentDidUpdate","database","child","snap","on","snapshot","val","i","text","b","posts","render","length","mapStateToProps","allposts","statPostState","statPostImages","mapDispatchToProps","AppContainer"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {ProjectsContainer} from './projects';\nimport About from './about';\nimport Chat from './Chat';\nimport Admin from './Admin';\nimport { connect } from \"react-redux\";\nimport { postsFetched,getAllStatPostsAction,getAllStatPostsImages } from \"./config/actions/index\";\nimport {fire  , base, storage}  from './config/Fire';\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sendState = this.sendState.bind(this);\n    this.onSync = this.onSync.bind(this);\n    this.onPush = this.onPush.bind(this);\n    this.onAction= this.onAction.bind(this);\n    this.state = {\n      articles: [\n        { title: \"React Redux Tutorial for Beginners\", id: 1 },\n        { title: \"TypeScript tutorial for beginners\", id: 2 }\n      ],\n      temporary: [],\n      a: [],\n      ref: []\n    };\n  }\n\n\n componentDidMount() {\n    // fetch(\"https://randomuser.me/api/?format=json&results=10\")\n    //   .then(res => res.json())\n    //   .then(json => this.props.postsFetched(json.results));\n      \n    \n   //await this.sendState();\n  this.onSync();\n  this.onAction();\n //console.log(this.props);\n \n    \n  }\n  \n  displayImage(imageRef) {\n    var fileURLs = [];\n    imageRef.getDownloadURL().then(function(url) {\n      // TODO: Display the image on the UI\n      fileURLs.push(url);\n      \n    }).catch(function(error) {\n      // Handle any errors\n    });\n    console.log(fileURLs);\n  }\n  onAction(){\n    this.props.getAllStatPostsAction();\n    var storageRef = storage.ref(\"/images/\");\n\n\n    // Now we get the references of these images\n    storageRef.listAll().then(function(result) {\n      result.items.forEach(function(imageRef) {\n        // And finally display them\n        displayImage(imageRef);\n      });\n    }).catch(function(error) {\n      // Handle any errors\n    });\n\n    \n   // const storageRef = storage.ref('/images/1576580835000').getDownloadURL();\n    this.props.getAllStatPostsImages(storageRef);\n\n   \n    console.log(this.props.posts2);\n    console.log(this.props.images);\n  }\n  async sendState(){\n    this.postsRef =base.syncState('posts',{\n      context: this,\n      state: 'temporary'\n  });\n \n  //this.props.postsFetched(this.state.temporary);\n\n  //console.log(this.state.temporary);\n  \n  }\n  \n async componentDidUpdate(){\n   \n   // console.log(this.props.posts);\n  }\n  onPush(){\n    let ref = fire.database().ref().child(\"posts\");\n    var a = [\"test\"];\n    this.props.postsFetched(a);\n    let snap;\n  ref.on('value', function(snapshot) {\n      snap = snapshot.val();\n      console.log(snap);\n  });\n\n\n  for (var i in snap){\n   \n    a.push({id: i, title: snap[i][\"title\"], text: snap[i][\"text\"]});\n  console.log(\"\\n\" + snap[i]);\n    //for (var n in snap[i]){\n    //     console.log(n, snap[i][n])     \n // }\n \n}\nif(ref==null){\n  console.log(\"pusta zmienna\");\nthis.onPush();\n}else{\n  this.props.postsFetched(a);\n \n}\n  return a;\n  }\n  async onSync(){\n    var b = [];\n    b.push({id: 1, title: \"test\", text: \"text\"});\n    \n    //console.log(ref);\n    var a = [];\n    a=this.onPush();\n    console.log(a);\n    \n    if (this.props.posts){\n      console.log(this.props.posts);\n    }    \n  // if(a.length=0){\n  //   console.log(\"nie jest 0\");\n  // this.props.postsFetched(a);\n  // a=null;\n  // }else{\n  //     this.props.postsFetched(this.onPush());\n  \n  // }\n    //console.log(this.state.temporary);\n    //console.log(this.state.temporary);\n    // var results = this.state.temporary;\n    // console.log(results.length);\n   \n\n    //         var temporary = [], item;\n    //         for (var i = 1, len = results.length; i < len; i++) {\n    //             item = results[i];\n    //             //console.log(item[\"title\"]);\n    //             //temporary.push({id: item.title, title: item.text});\n    //         }\n    //         //console.log(temporary);\n            \n            \n    \n    \n            //console.log(a);\n            //this.setState(a);\n         \n   \n            \n  }\n  render() {\n    if(this.props.posts.length==0){\n     // this.onSync();//this.props.postsFetched(this.state.a);\n   }\n   \n  return (\n    <div className=\"App\">\n      <Router>\n      \n      <header className=\"App-header\">\n      <ul>\n            <li>\n              <Link to=\"/projects\">Projects</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/chat\">Chat</Link>\n            </li>\n            {/* <li>\n            <button onClick={this.onSync}>sync</button>\n            </li>\n            <li>\n            <button onClick={this.onAction}>test action</button>\n            </li> */}\n          </ul>\n         \n        \n      </header>\n      <Route exact path=\"/projects\" component={ProjectsContainer}/>\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/chat\" component={Chat} />\n      <Route path=\"/admin\" component={Admin} />\n      </Router>\n     \n    </div>\n    \n  );\n  }\n}\nconst mapStateToProps = (state) => {\n  \n  return {\n    posts2: state.allposts.statPostState,\n    posts: state.posts,\n    images: state.allposts.statPostImages\n  }\n};\nconst mapDispatchToProps = { postsFetched,getAllStatPostsAction,getAllStatPostsImages };\n\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\npm\\\\repo2\\\\src\\\\Edit.js\";\nimport React, { Component } from 'react';\nimport { postsFetched, getAllStatPostsImages } from \"./config/actions/index\";\nimport { connect } from \"react-redux\";\nimport { storage, fire, base, firestore } from './config/Fire';\nimport 'quill/dist/quill.snow.css';\nimport ReactQuill from 'react-quill';\nexport class Edit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleImageAsFile = e => {\n      console.log(e.target.files[0]);\n      const image = e.target.files[0];\n      this.setState({\n        isFile: true\n      });\n      this.setState({\n        file: image\n      });\n      console.log(this.state.file);\n    };\n\n    this.deletePost = () => {\n      const databaseRef = fire.database().ref('posts/' + this.props.location.id).remove().then(() => {\n        console.log(\"plik usuniety\");\n      }).catch(error => {\n        console.log(\"bład:\" + error);\n      });\n    };\n\n    this.delete = (id, name) => {\n      // var desertRef = storage.child('images/1576580858304/images.png');\n      // Delete the file\n      const deleteTask = storage.ref(\"/images/\".concat(id, \"/\").concat(name)).delete().then(() => {\n        console.log(\"plik usuniety\");\n      }).catch(error => {\n        console.log(\"bład:\" + error);\n      });\n    };\n\n    this.update = this.update.bind(this);\n    this.handleChangeEditor = this.handleChangeEditor.bind(this); // this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      file: '',\n      url: '',\n      isFile: false,\n      imagePreviewUrl: '',\n      posts: {},\n      currentUser: null,\n      title: this.props.location.title,\n      text: this.props.location.text,\n      color: this.props.location.color,\n      id: this.props.location.id\n    };\n  }\n\n  componentWillMount() {\n    this.postsRef = base.syncState('posts', {\n      context: this,\n      state: 'posts'\n    });\n  }\n\n  componentDidMount() {}\n\n  onprops() {\n    if (this.props.location.id != this.state.id) {\n      const title = this.props.location.title;\n      const text = this.props.location.text;\n      const id = this.props.location.id;\n      const color = this.props.location.color;\n      this.setState({\n        title: title\n      });\n      this.setState({\n        id: id\n      });\n      this.setState({\n        text: text\n      });\n      this.setState({\n        color: color\n      });\n      console.log(this.state.title);\n      console.log(this.props.location.title);\n    }\n  }\n\n  handleChangeTitle(e) {\n    e.preventDefault();\n    const title = e.target.value;\n    this.setState({\n      title\n    });\n    console.log(this.state.title);\n  }\n\n  handleChangeText(e) {\n    e.preventDefault();\n    const text = e.target.value;\n    this.setState({\n      text\n    });\n    console.log(e.target.value);\n  }\n\n  handleChangeColor(e) {\n    e.preventDefault();\n    const color = e.target.value;\n    this.setState({\n      color\n    });\n    console.log(e.target.value);\n  }\n\n  update(e) {\n    e.preventDefault();\n    const id = this.state.id;\n    const title = this.state.title;\n    const text = this.state.text;\n    const color = this.state.color;\n    console.log(this.state.id); //let userRef = this.firestore.ref('posts/' + this.props.location.id);\n\n    const databaseRef = fire.database().ref('posts/' + this.props.location.id);\n\n    if (this.state.isFile) {\n      console.log(this.state.file);\n      const uploadTask = storage.ref(\"/images/\".concat(this.state.id, \"/\").concat(this.state.file.name)).put(this.state.file);\n      console.log(\"obrazek: \" + uploadTask);\n    }\n\n    ; // this is to get the stat-cards table from firebase\n\n    const statCardsRef = databaseRef.update({\n      title: title,\n      text: text,\n      color: color\n    }).then[() => {\n      console.log('updated!');\n    }];\n\n    console.log(statCardsRef); // firestore.Collection('posts').oc(this.props.location.id).update({\n    //   title: title,\n    //   text: text,\n    //   color: color\n    // })\n    //fire.database().ref().child('posts').child('1').set(data);\n\n    console.log(this.props.posts);\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.posts);\n    this.onprops();\n  }\n\n  _handleImageChange(e) {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  handleChangeEditor(editor) {\n    //console.log('background', editor);\n    const text = editor;\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    //const { quill, quillRef } = useQuill();\n    //this.onprops();\n    //wyśietlanie listy projektów\n    let imagePreviewUrl = this.state.imagePreviewUrl;\n    let $imagePreview = null;\n\n    if (imagePreviewUrl) {\n      $imagePreview = React.createElement(\"img\", {\n        src: imagePreviewUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      });\n    } else {\n      $imagePreview = React.createElement(\"div\", {\n        className: \"previewText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Please select an Image for Preview\");\n    }\n\n    console.log(this.props.location.title);\n    console.log(this.props.images);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Edytuj\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, this.state.id, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Tytu\\u0142\"), React.createElement(\"input\", {\n      type: \"textarea\",\n      value: this.state.title,\n      onChange: this.handleChangeTitle.bind(this),\n      name: \"title\",\n      className: \"form-control\",\n      placeholder: \"Enter title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"We'll never share your email with anyone else.\")), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"exampleInputPassword1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"tre\\u015B\\u0107\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(ReactQuill, {\n      theme: \"snow\",\n      value: this.state.text,\n      onChange: this.handleChangeEditor,\n      style: {\n        width: 500,\n        height: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      style: {\n        marginTop: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"color\",\n      value: this.state.color,\n      type: \"color\",\n      id: \"myColor\",\n      onChange: this.handleChangeColor.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"fileInput\",\n      type: \"file\",\n      onChange: this.handleImageAsFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.login,\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Usu\\u0144\"), React.createElement(\"div\", {\n      className: \"imgPreview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, $imagePreview), React.createElement(\"button\", {\n      onClick: this.deletePost,\n      style: {\n        marginLeft: '25px'\n      },\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Usu\\u0144\"), React.createElement(\"button\", {\n      onClick: this.update,\n      style: {\n        marginLeft: '25px'\n      },\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Zmie\\u0144\")), this.props.images.map(function (object, i) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, object[0] == this.state.id && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: object[1],\n        style: {\n          width: '150px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), \"  \", React.createElement(\"button\", {\n        onClick: () => this.delete(object[0], object[2]),\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Usu\\u0144\")));\n    }, this));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    images: state.allposts.statPostImages\n  };\n};\n\nconst mapDispatchToProps = {\n  postsFetched,\n  getAllStatPostsImages\n};\nexport const EditContainer = connect(mapStateToProps, mapDispatchToProps)(Edit);","map":{"version":3,"sources":["C:/npm/repo2/src/Edit.js"],"names":["React","Component","postsFetched","getAllStatPostsImages","connect","storage","fire","base","firestore","ReactQuill","Edit","constructor","props","handleImageAsFile","e","console","log","target","files","image","setState","isFile","file","state","deletePost","databaseRef","database","ref","location","id","remove","then","catch","error","delete","name","deleteTask","update","bind","handleChangeEditor","url","imagePreviewUrl","posts","currentUser","title","text","color","componentWillMount","postsRef","syncState","context","componentDidMount","onprops","handleChangeTitle","preventDefault","value","handleChangeText","handleChangeColor","uploadTask","put","statCardsRef","componentDidUpdate","_handleImageChange","reader","FileReader","onloadend","result","readAsDataURL","editor","render","$imagePreview","images","width","height","marginTop","login","marginLeft","map","object","i","mapStateToProps","allposts","statPostImages","mapDispatchToProps","EditContainer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { postsFetched,getAllStatPostsImages } from \"./config/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport {storage, fire  , base, firestore}  from './config/Fire';\r\n\r\nimport 'quill/dist/quill.snow.css'; \r\nimport ReactQuill from 'react-quill';\r\nexport class Edit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.update = this.update.bind(this);\r\n    this.handleChangeEditor = this.handleChangeEditor.bind(this);\r\n   \r\n   // this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      file:'',\r\n      url:'',\r\n      isFile:false,\r\n      imagePreviewUrl: '',\r\n        posts: {},\r\n        currentUser: null,\r\n        title: this.props.location.title,\r\n        text: this.props.location.text,\r\n        color:  this.props.location.color,\r\n        id: this.props.location.id\r\n      };\r\n}\r\n\r\ncomponentWillMount(){\r\n  this.postsRef = base.syncState('posts',{\r\n      context: this,\r\n      state: 'posts'\r\n  });\r\n  \r\n  \r\n}\r\nhandleImageAsFile = (e) => {\r\n  console.log(e.target.files[0]);\r\n  const image = e.target.files[0]\r\n  this.setState({isFile: true})\r\n this.setState({file: image})\r\n console.log(this.state.file);\r\n}\r\ncomponentDidMount(){\r\n \r\n\r\n}\r\nonprops(){\r\n  if (this.props.location.id!=this.state.id){\r\n  const title=this.props.location.title;\r\n  const text=this.props.location.text;\r\n  const id=this.props.location.id;\r\n  const color=this.props.location.color;\r\n  this.setState({ title: title});\r\n  this.setState({ id: id});\r\n  this.setState({ text: text});\r\n  this.setState({ color: color});\r\n  console.log(this.state.title);\r\n  console.log(this.props.location.title);\r\n  }\r\n}\r\nhandleChangeTitle(e){\r\n  e.preventDefault();\r\n\r\n  const title = e.target.value;\r\n  this.setState({title});\r\n\r\n\r\n  console.log(this.state.title);\r\n\r\n}\r\nhandleChangeText(e){\r\n  e.preventDefault();\r\n  const text = e.target.value;\r\n \r\n  \r\n\r\n  this.setState({text});\r\n  console.log(e.target.value);\r\n \r\n\r\n}\r\nhandleChangeColor(e){\r\n  e.preventDefault();\r\n  const color = e.target.value;\r\n \r\n  \r\n\r\n  this.setState({color});\r\n  console.log(e.target.value);\r\n \r\n\r\n}\r\n\r\ndeletePost =() =>{\r\n  const databaseRef = fire.database().ref('posts/'+this.props.location.id).remove().then(() => {\r\n    console.log(\"plik usuniety\");\r\n  }).catch((error) => {\r\n   console.log(\"bład:\"+error);\r\n  });\r\n\r\n}\r\ndelete = (id,name)=>{\r\n\r\n // var desertRef = storage.child('images/1576580858304/images.png');\r\n  // Delete the file\r\n  const deleteTask = storage.ref(`/images/${id}/${name}`).delete().then(() => {\r\n    console.log(\"plik usuniety\");\r\n  }).catch((error) => {\r\n   console.log(\"bład:\"+error);\r\n  });\r\n  \r\n}\r\nupdate(e){\r\n  e.preventDefault();\r\n  const id = this.state.id;\r\n  const title = this.state.title;\r\n  const text = this.state.text;\r\n  const color = this.state.color;\r\n  console.log(this.state.id);\r\n  //let userRef = this.firestore.ref('posts/' + this.props.location.id);\r\n  const databaseRef = fire.database().ref('posts/'+this.props.location.id);\r\n  if  (this.state.isFile){\r\n\r\n    console.log(this.state.file);\r\n  const uploadTask = storage.ref(`/images/${this.state.id}/${this.state.file.name}`).put(this.state.file);\r\n  console.log(\"obrazek: \"+uploadTask);\r\n};\r\n// this is to get the stat-cards table from firebase\r\nconst statCardsRef = databaseRef.update({\r\n  \r\n  title: title,\r\n  text: text,\r\n  color: color\r\n}).then[()=> {\r\n  console.log('updated!');\r\n}];\r\n console.log(statCardsRef);\r\n \r\n  // firestore.Collection('posts').oc(this.props.location.id).update({\r\n  //   title: title,\r\n  //   text: text,\r\n  //   color: color\r\n  // })\r\n  \r\n \r\n  //fire.database().ref().child('posts').child('1').set(data);\r\n  console.log(this.props.posts);\r\n}\r\ncomponentDidUpdate(){\r\n  console.log(this.props.posts);\r\n  \r\n this.onprops();\r\n }\r\n _handleImageChange(e){\r\n  e.preventDefault();\r\n\r\n  let reader = new FileReader();\r\n  let file = e.target.files[0];\r\n\r\n  reader.onloadend = () => {\r\n    this.setState({\r\n      file: file,\r\n      imagePreviewUrl: reader.result\r\n    });\r\n  }\r\n\r\n  reader.readAsDataURL(file)\r\n\r\n };\r\n handleChangeEditor(editor) {\r\n  //console.log('background', editor);\r\n  const text = editor;\r\n   this.setState({text});\r\n};\r\n  render() {\r\n    //const { quill, quillRef } = useQuill();\r\n    //this.onprops();\r\n      //wyśietlanie listy projektów\r\n      let {imagePreviewUrl} = this.state;\r\n      let $imagePreview = null;\r\n      if (imagePreviewUrl) {\r\n        $imagePreview = (<img src={imagePreviewUrl} />);\r\n      } else {\r\n        $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\r\n      }\r\n      console.log(this.props.location.title);\r\n     console.log(this.props.images);\r\n      return (<div>\r\n        <h1>Edytuj</h1>\r\n        <form>\r\n         \r\n        <div className=\"form-group\">\r\n        {this.state.id}\r\n         <label htmlFor=\"title\">Tytuł</label>\r\n         <input type=\"textarea\"  value={this.state.title} onChange={this.handleChangeTitle.bind(this)} name=\"title\" className=\"form-control\" placeholder=\"Enter title\" />\r\n         <small id=\"emailHelp\" className=\"form-text \">We'll never share your email with anyone else.</small>\r\n        </div>\r\n         <div className=\"form-group\">\r\n        <label htmlFor=\"exampleInputPassword1\">treść</label>\r\n        <div className=\"form-group\">\r\n   <ReactQuill theme=\"snow\" value={this.state.text} onChange={this.handleChangeEditor} style={{ width: 500, height: 500 }}/>\r\n   \r\n    </div>\r\n    </div>\r\n    <div className=\"form-group\" style={{ marginTop: '50px' }}>\r\n      <input name=\"color\" value={this.state.color} type=\"color\" id=\"myColor\" onChange={this.handleChangeColor.bind(this)} ></input>\r\n        </div>\r\n        <div className=\"form-group\">\r\n        <input className=\"fileInput\" \r\n            type=\"file\" \r\n            onChange={this.handleImageAsFile} />\r\n            </div>\r\n        <button type=\"submit\" onClick={this.login} className=\"btn btn-primary\">Usuń</button>\r\n        <div className=\"imgPreview\">\r\n          {$imagePreview}\r\n        </div>\r\n        \r\n\r\n      \r\n        <button onClick={this.deletePost} style={{marginLeft: '25px'}} className=\"btn btn-success\">Usuń</button>\r\n        <button onClick={this.update} style={{marginLeft: '25px'}} className=\"btn btn-success\">Zmień</button>\r\n   </form>\r\n   \r\n   {this.props.images.map(function(object,i){\r\n\r\nreturn (\r\n\r\n<div>\r\n       {\r\n            object[0] ==this.state.id && <p><img src={object[1]} style={{width: '150px'}}></img>  <button onClick={() => this.delete(object[0],object[2])} className=\"btn btn-primary\">Usuń</button></p>\r\n       }\r\n    </div>)\r\n},this)}\r\n   </div>\r\n      )\r\n   \r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    \r\n    posts: state.posts,\r\n    images: state.allposts.statPostImages\r\n  }\r\n};\r\nconst mapDispatchToProps = { postsFetched, getAllStatPostsImages };\r\n\r\nexport const EditContainer = connect(mapStateToProps, mapDispatchToProps)(Edit);"]},"metadata":{},"sourceType":"module"}
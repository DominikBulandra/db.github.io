{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp2\\\\htdocs\\\\moja\\\\src\\\\App.js\";\nimport * as React from \"react\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Projects from './projects';\nimport About from './about';\nimport Chat from './Chat';\nimport Admin from './Admin';\nimport { connect } from \"react-redux\";\nimport { postsFetched } from \"./config/actions/index\";\nimport { fire, base } from './config/Fire';\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: [{\n        title: \"React Redux Tutorial for Beginners\",\n        id: 1\n      }, {\n        title: \"TypeScript tutorial for beginners\",\n        id: 2\n      }],\n      temporary: []\n    };\n  }\n\n  componentDidMount() {\n    // fetch(\"https://randomuser.me/api/?format=json&results=10\")\n    //   .then(res => res.json())\n    //   .then(json => this.props.postsFetched(json.results));\n    this.postsRef = base.syncState('posts', {\n      context: this,\n      state: 'temporary'\n    });\n    this.props.postsFetched(this.state.temporary);\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.posts);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/projects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Projects\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"About\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Chat\")))), React.createElement(Route, {\n      exact: true,\n      path: \"/projects\",\n      component: Projects,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/chat\",\n      component: Chat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/admin\",\n      component: Admin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n};\n\nconst mapDispatchToProps = {\n  postsFetched\n};\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/xampp2/htdocs/moja/src/App.js"],"names":["React","BrowserRouter","Router","Route","Link","Projects","About","Chat","Admin","connect","postsFetched","fire","base","App","Component","constructor","props","state","articles","title","id","temporary","componentDidMount","postsRef","syncState","context","componentDidUpdate","console","log","posts","render","mapStateToProps","mapDispatchToProps","AppContainer"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Projects from './projects';\nimport About from './about';\nimport Chat from './Chat';\nimport Admin from './Admin';\nimport { connect } from \"react-redux\";\nimport { postsFetched } from \"./config/actions/index\";\nimport {fire  , base}  from './config/Fire';\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: [\n        { title: \"React Redux Tutorial for Beginners\", id: 1 },\n        { title: \"TypeScript tutorial for beginners\", id: 2 }\n      ],\n      temporary: []\n    };\n  }\n  componentDidMount() {\n    // fetch(\"https://randomuser.me/api/?format=json&results=10\")\n    //   .then(res => res.json())\n    //   .then(json => this.props.postsFetched(json.results));\n      this.postsRef = base.syncState('posts',{\n        context: this,\n        state: 'temporary'\n    });\n    this.props.postsFetched(this.state.temporary);\n    \n  }\n  componentDidUpdate(){\n    console.log(this.props.posts);\n  }\n  render() {\n  return (\n    <div className=\"App\">\n      <Router>\n      \n      <header className=\"App-header\">\n      <ul>\n            <li>\n              <Link to=\"/projects\">Projects</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/chat\">Chat</Link>\n            </li>\n          </ul>\n        \n        \n      </header>\n      <Route exact path=\"/projects\" component={Projects} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/chat\" component={Chat} />\n      <Route path=\"/admin\" component={Admin} />\n      </Router>\n    </div>\n  );\n  }\n}\nconst mapStateToProps = (state) => {\n  \n  return {\n    \n    posts: state.posts\n  }\n};\nconst mapDispatchToProps = { postsFetched };\n\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}
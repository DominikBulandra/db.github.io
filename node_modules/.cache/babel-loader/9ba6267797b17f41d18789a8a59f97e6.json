{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp2\\\\htdocs\\\\moja\\\\src\\\\projects.js\";\nimport React, { Component } from 'react';\nimport { postsFetched } from \"./config/actions/index\";\nimport { connect } from \"react-redux\";\nimport Project from './Project';\nlet lastScrollY = 0;\nlet ticking = false;\nexport class Projects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleScroll = () => {\n      lastScrollY = window.scrollY;\n\n      if (!ticking) {\n        window.requestAnimationFrame(() => {\n          this.refs.proj.current.style.top = \"\".concat(lastScrollY, \"px\");\n          ticking = false;\n        });\n        ticking = true;\n      }\n    };\n\n    this.nav = React.createRef();\n    this.onLog = this.onLog.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.state = {\n      data: [\"1\", \"2\"],\n      posts: [],\n      posts2: []\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.posts);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  onLog() {\n    console.log(this.props.posts);\n  }\n\n  render() {\n    //wyśietlanie listy projektów\n    var dane = this.props.posts;\n    console.log(this.props.posts2);\n    var div;\n\n    if (this.props.posts2 != null) {\n      div = this.props.posts2.map(function (item, i) {\n        console.log({\n          item\n        }); // return <li className=\"list-group-item list-group-item-action\" key={i}><div className=\"row\"><div className=\"col-md\"></div><div className=\"col-md\">{item.title}</div><div className=\"col-md\">{item.text}</div></div></li>\n\n        return React.createElement(Project, {\n          ref: \"proj\",\n          title: item.title,\n          text: item.text,\n          color: item.color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        });\n      });\n    } else {\n      return React.createElement(\"li\", {\n        className: \"list-group-item list-group-item-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"\\u0141adowanie..\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, div, React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.onLog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Log\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts2: state.allposts.statPostState,\n    posts: state.posts\n  };\n};\n\nconst mapDispatchToProps = {\n  postsFetched\n};\nexport const ProjectsContainer = connect(mapStateToProps, mapDispatchToProps)(Projects);","map":{"version":3,"sources":["C:/xampp2/htdocs/moja/src/projects.js"],"names":["React","Component","postsFetched","connect","Project","lastScrollY","ticking","Projects","constructor","props","handleScroll","window","scrollY","requestAnimationFrame","refs","proj","current","style","top","nav","createRef","onLog","bind","state","data","posts","posts2","componentDidMount","addEventListener","componentDidUpdate","console","log","componentWillUnmount","removeEventListener","render","dane","div","map","item","i","title","text","color","mapStateToProps","allposts","statPostState","mapDispatchToProps","ProjectsContainer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { postsFetched } from \"./config/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport Project from './Project';\r\n\r\nlet lastScrollY = 0;\r\nlet ticking = false;\r\nexport class Projects extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.nav = React.createRef();\r\n    this.onLog = this.onLog.bind(this);\r\n    this.handleScroll = this.handleScroll.bind(this);\r\n    this.state = {\r\n        data: [\"1\",\"2\"],\r\n        posts: [],\r\n        posts2: []\r\n      };\r\n}\r\ncomponentDidMount(){\r\n  \r\nwindow.addEventListener('scroll', this.handleScroll);\r\n}\r\ncomponentDidUpdate(){\r\n  console.log(this.props.posts);\r\n }\r\n componentWillUnmount() {\r\n  window.removeEventListener('scroll', this.handleScroll);\r\n}\r\n\r\n\r\n  \r\n  handleScroll = () => {\r\n    lastScrollY = window.scrollY;\r\n\r\n    if (!ticking) {\r\n      window.requestAnimationFrame(() => {\r\n        this.refs.proj.current.style.top = `${lastScrollY}px`;\r\n        ticking = false;\r\n      });\r\n   \r\n      ticking = true;\r\n    }\r\n  };\r\n\r\n\r\n onLog(){\r\n   console.log(this.props.posts);\r\n }\r\n  render() {\r\n      //wyśietlanie listy projektów\r\n      var dane=this.props.posts;\r\n      console.log(this.props.posts2);\r\n      var div;\r\n    if(this.props.posts2!= null){\r\n      div =this.props.posts2.map(function(item, i){\r\n        console.log({item});\r\n        // return <li className=\"list-group-item list-group-item-action\" key={i}><div className=\"row\"><div className=\"col-md\"></div><div className=\"col-md\">{item.title}</div><div className=\"col-md\">{item.text}</div></div></li>\r\n        return <Project ref=\"proj\" title={item.title} text={item.text} color={item.color} />\r\n      })\r\n    }else\r\n    {\r\n      return <li className=\"list-group-item list-group-item-action\">Ładowanie..</li>\r\n    }\r\n      \r\n      \r\n\r\n      return (\r\n        \r\n<div>\r\n{div}\r\n          <ul className=\"list-group\">\r\n              \r\n              \r\n             \r\n             \r\n          </ul>\r\n           <button onClick={this.onLog}>Log</button></div>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    posts2: state.allposts.statPostState,\r\n    posts: state.posts\r\n  }\r\n};\r\nconst mapDispatchToProps = { postsFetched };\r\n\r\nexport const ProjectsContainer = connect(mapStateToProps, mapDispatchToProps)(Projects);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\npm\\\\repo2\\\\db.github.io\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\npm\\\\repo2\\\\db.github.io\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{fire,base,storage}from'../Fire';var databaseRef=fire.database().ref();// this is to get the stat-cards table from firebase\nvar statCardsRef=databaseRef.child(\"posts\");var storageRef=storage.ref().child('images');export var postsFetched=function postsFetched(posts){return{type:'FETCH_POSTS_SUCCESS',posts:posts};};export var getAllStatPostsAction=function getAllStatPostsAction(){return(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:statCardsRef.on(\"value\",function(snapshot){dispatch({type:\"getAllStatPosts\",// if the json returns null, i.e. the\n// stat-cards table is blank - empty\n// then we'll return an empty object\npayload:snapshot.val()||{}});});case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());};export var getAllStatPostsImages=function getAllStatPostsImages(images){return(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch({type:\"getAllStatImages\",// if the json returns null, i.e. the\n// stat-cards table is blank - empty\n// then we'll return an empty object\npayload:images});case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());};","map":{"version":3,"sources":["C:/npm/repo2/db.github.io/src/config/actions/index.js"],"names":["fire","base","storage","databaseRef","database","ref","statCardsRef","child","storageRef","postsFetched","posts","type","getAllStatPostsAction","dispatch","on","snapshot","payload","val","getAllStatPostsImages","images"],"mappings":"iOAAA,OAAQA,IAAR,CAAgBC,IAAhB,CAAqBC,OAArB,KAAoC,SAApC,CACA,GAAMC,CAAAA,WAAW,CAAGH,IAAI,CAACI,QAAL,GAAgBC,GAAhB,EAApB,CACA;AACA,GAAMC,CAAAA,YAAY,CAAGH,WAAW,CAACI,KAAZ,CAAkB,OAAlB,CAArB,CACA,GAAMC,CAAAA,UAAU,CAAGN,OAAO,CAACG,GAAR,GAAcE,KAAd,CAAoB,QAApB,CAAnB,CAEA,MAAO,IAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,QAAY,CACpCC,IAAI,CAAE,qBAD8B,CAEpCD,KAAK,CAALA,KAFoC,CAAZ,EAArB,CAIP,MAAO,IAAME,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,mGAAM,iBAAMC,QAAN,kHAEzCP,YAAY,CAACQ,EAAb,CAAgB,OAAhB,CAAyB,SAAAC,QAAQ,CAAI,CACnCF,QAAQ,CAAC,CACPF,IAAI,CAAE,iBADC,CAEP;AACA;AACA;AACAK,OAAO,CAAED,QAAQ,CAACE,GAAT,IAAkB,EALpB,CAAD,CAAR,CAOD,CARD,EAFyC,sDAAN,iEAA9B,CAYP,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,MAAD,mGAAY,kBAAMN,QAAN,sHAG7CA,QAAQ,CAAC,CACPF,IAAI,CAAE,kBADC,CAEP;AACA;AACA;AACAK,OAAO,CAAEG,MALF,CAAD,CAAR,CAH6C,wDAAZ,mEAA9B","sourcesContent":["import {fire  , base,storage}  from '../Fire';\r\nconst databaseRef = fire.database().ref();\r\n// this is to get the stat-cards table from firebase\r\nconst statCardsRef = databaseRef.child(\"posts\");\r\nconst storageRef = storage.ref().child('images');\r\n\r\nexport const postsFetched = (posts) => ({\r\n    type: 'FETCH_POSTS_SUCCESS',\r\n    posts\r\n  });\r\nexport const getAllStatPostsAction = () => async dispatch =>\r\n{\r\n  statCardsRef.on(\"value\", snapshot => {\r\n    dispatch({\r\n      type: \"getAllStatPosts\",\r\n      // if the json returns null, i.e. the\r\n      // stat-cards table is blank - empty\r\n      // then we'll return an empty object\r\n      payload: snapshot.val() || {}\r\n    });\r\n  });\r\n}\r\nexport const getAllStatPostsImages = (images) => async dispatch =>\r\n{\r\n \r\n    dispatch({\r\n      type: \"getAllStatImages\",\r\n      // if the json returns null, i.e. the\r\n      // stat-cards table is blank - empty\r\n      // then we'll return an empty object\r\n      payload: images\r\n      \r\n    });\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp2\\\\htdocs\\\\moja\\\\src\\\\App.js\";\nimport * as React from \"react\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Projects from './projects';\nimport About from './about';\nimport Chat from './Chat';\nimport Admin from './Admin';\nimport { connect } from \"react-redux\";\nimport { postsFetched } from \"./config/actions/index\";\nimport { fire, base } from './config/Fire';\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sendState = this.sendState.bind(this);\n    this.onSync = this.onSync.bind(this);\n    this.state = {\n      articles: [{\n        title: \"React Redux Tutorial for Beginners\",\n        id: 1\n      }, {\n        title: \"TypeScript tutorial for beginners\",\n        id: 2\n      }],\n      temporary: []\n    };\n  }\n\n  async componentDidMount() {\n    // fetch(\"https://randomuser.me/api/?format=json&results=10\")\n    //   .then(res => res.json())\n    //   .then(json => this.props.postsFetched(json.results));\n    await this.sendState();\n    await this.onSync();\n  }\n\n  sendState() {\n    this.postsRef = base.syncState('posts', {\n      context: this,\n      state: 'temporary'\n    }); //this.props.postsFetched(this.state.temporary);\n\n    console.log(this.state.temporary);\n  }\n\n  componentDidUpdate() {// console.log(this.props.posts);\n  }\n\n  async onSync() {\n    let ref = fire.database().ref().child(\"posts\");\n    ref.on('value', function (snapshot) {\n      let snap = snapshot.val();\n\n      for (var i in snap) {\n        console.log(\"\\n\" + i);\n\n        for (var n in snap[i]) {\n          console.log(n, snap[i][n]);\n        }\n      }\n    });\n    console.log(this.state.temporary);\n    console.log(this.state.temporary);\n    var results = this.state.temporary;\n    console.log(results.length);\n    var a = [];\n    var temporary = [],\n        item;\n\n    for (var i = 1, len = results.length; i < len; i++) {\n      item = results[i]; //console.log(item[\"title\"]);\n      //temporary.push({id: item.title, title: item.text});\n    } //console.log(temporary);\n\n\n    console.log(a); //this.props.postsFetched(a);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/projects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Projects\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"About\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Chat\"))), React.createElement(\"button\", {\n      onClick: this.onSync,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"sync\")), React.createElement(Route, {\n      exact: true,\n      path: \"/projects\",\n      component: Projects,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/chat\",\n      component: Chat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/admin\",\n      component: Admin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n};\n\nconst mapDispatchToProps = {\n  postsFetched\n};\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/xampp2/htdocs/moja/src/App.js"],"names":["React","BrowserRouter","Router","Route","Link","Projects","About","Chat","Admin","connect","postsFetched","fire","base","App","Component","constructor","props","sendState","bind","onSync","state","articles","title","id","temporary","componentDidMount","postsRef","syncState","context","console","log","componentDidUpdate","ref","database","child","on","snapshot","snap","val","i","n","results","length","a","item","len","render","mapStateToProps","posts","mapDispatchToProps","AppContainer"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Projects from './projects';\nimport About from './about';\nimport Chat from './Chat';\nimport Admin from './Admin';\nimport { connect } from \"react-redux\";\nimport { postsFetched } from \"./config/actions/index\";\nimport {fire  , base}  from './config/Fire';\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sendState = this.sendState.bind(this);\n    this.onSync = this.onSync.bind(this);\n    this.state = {\n      articles: [\n        { title: \"React Redux Tutorial for Beginners\", id: 1 },\n        { title: \"TypeScript tutorial for beginners\", id: 2 }\n      ],\n      temporary: []\n    };\n  }\n  async componentDidMount() {\n    // fetch(\"https://randomuser.me/api/?format=json&results=10\")\n    //   .then(res => res.json())\n    //   .then(json => this.props.postsFetched(json.results));\n      \n    \n   await this.sendState();\n  await this.onSync();\n    \n    \n  }\n  sendState(){\n    this.postsRef =base.syncState('posts',{\n      context: this,\n      state: 'temporary'\n  });\n \n  //this.props.postsFetched(this.state.temporary);\n  console.log(this.state.temporary);\n  }\n  \n  componentDidUpdate(){\n    \n   // console.log(this.props.posts);\n  }\n  async onSync(){\n    let ref = fire.database().ref().child(\"posts\");\n\n  ref.on('value', function(snapshot) {\n      let snap = snapshot.val();\n      for (var i in snap){\n       console.log(\"\\n\" + i);\n        for (var n in snap[i]){\n             console.log(n, snap[i][n])     \n      }\n  }\n  });\n\n    console.log(this.state.temporary);\n    console.log(this.state.temporary);\n    var results = this.state.temporary;\n    console.log(results.length);\n    var a = [];\n\n            var temporary = [], item;\n            for (var i = 1, len = results.length; i < len; i++) {\n                item = results[i];\n                //console.log(item[\"title\"]);\n                //temporary.push({id: item.title, title: item.text});\n            }\n            //console.log(temporary);\n            \n            \n    \n    \n            console.log(a);\n    //this.props.postsFetched(a);\n  }\n  render() {\n  return (\n    <div className=\"App\">\n      <Router>\n      \n      <header className=\"App-header\">\n      <ul>\n            <li>\n              <Link to=\"/projects\">Projects</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/chat\">Chat</Link>\n            </li>\n          </ul>\n          <button onClick={this.onSync}>sync</button>\n        \n      </header>\n      <Route exact path=\"/projects\" component={Projects} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/chat\" component={Chat} />\n      <Route path=\"/admin\" component={Admin} />\n      </Router>\n     \n    </div>\n    \n  );\n  }\n}\nconst mapStateToProps = (state) => {\n  \n  return {\n    \n    posts: state.posts\n  }\n};\nconst mapDispatchToProps = { postsFetched };\n\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from\"C:\\\\npm\\\\moja\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\npm\\\\moja\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\npm\\\\moja\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\npm\\\\moja\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"C:\\\\npm\\\\moja\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\npm\\\\moja\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{postsFetched}from\"./config/actions/index\";import{connect}from\"react-redux\";import{storage,fire,base,firestore}from'./config/Fire';export var Edit=/*#__PURE__*/function(_Component){_inherits(Edit,_Component);function Edit(props){var _this;_classCallCheck(this,Edit);_this=_possibleConstructorReturn(this,_getPrototypeOf(Edit).call(this,props));_this.handleImageAsFile=function(e){console.log(e.target.files[0]);var image=e.target.files[0];_this.setState({file:image});console.log(_this.state.file);};_this.update=_this.update.bind(_assertThisInitialized(_this));// this.handleChange = this.handleChange.bind(this);\n_this.state={file:'',url:'',imagePreviewUrl:'',posts:{},currentUser:null,title:_this.props.location.title,text:_this.props.location.text,color:_this.props.location.color};return _this;}_createClass(Edit,[{key:\"componentWillMount\",value:function componentWillMount(){this.postsRef=base.syncState('posts',{context:this,state:'posts'});}},{key:\"componentDidMount\",value:function componentDidMount(){}},{key:\"onprops\",value:function onprops(){if(this.props.location.title!=this.state.title){var title=this.props.location.title;var text=this.props.location.text;var color=this.props.location.color;this.setState({title:title});this.setState({text:text});this.setState({color:color});console.log(this.state.title);}}},{key:\"handleChangeTitle\",value:function handleChangeTitle(e){e.preventDefault();var title=e.target.value;this.setState({title:title});console.log(this.state.title);}},{key:\"handleChangeText\",value:function handleChangeText(e){e.preventDefault();var text=e.target.value;this.setState({text:text});console.log(e.target.value);}},{key:\"handleChangeColor\",value:function handleChangeColor(e){e.preventDefault();var color=e.target.value;this.setState({color:color});console.log(e.target.value);}},{key:\"update\",value:function update(e){e.preventDefault();var id=this.state.id;var title=this.state.title;var text=this.state.text;var color=this.state.color;//let userRef = this.firestore.ref('posts/' + this.props.location.id);\nvar databaseRef=fire.database().ref('posts/'+this.props.location.id);var uploadTask=storage.ref(\"/images/\".concat(this.props.location.id)).put(this.state.file);// this is to get the stat-cards table from firebase\nvar statCardsRef=databaseRef.update({title:title,text:text,color:color}).then[function(){console.log('updated!');}];console.log(statCardsRef);console.log(\"obrazek: \"+uploadTask);// firestore.Collection('posts').oc(this.props.location.id).update({\n//   title: title,\n//   text: text,\n//   color: color\n// })\n//fire.database().ref().child('posts').child('1').set(data);\nconsole.log(this.props.posts);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){console.log(this.props.posts);this.onprops();}},{key:\"_handleImageChange\",value:function _handleImageChange(e){var _this2=this;e.preventDefault();var reader=new FileReader();var file=e.target.files[0];reader.onloadend=function(){_this2.setState({file:file,imagePreviewUrl:reader.result});};reader.readAsDataURL(file);}},{key:\"render\",value:function render(){//wyśietlanie listy projektów\nvar imagePreviewUrl=this.state.imagePreviewUrl;var $imagePreview=null;if(imagePreviewUrl){$imagePreview=React.createElement(\"img\",{src:imagePreviewUrl});}else{$imagePreview=React.createElement(\"div\",{className:\"previewText\"},\"Please select an Image for Preview\");}console.log(this.props.location.title);return React.createElement(\"div\",null,React.createElement(\"h1\",null,\"Edytuj\"),React.createElement(\"form\",null,React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"title\"},\"Tytu\\u0142\"),React.createElement(\"input\",{type:\"textarea\",value:this.state.title,onChange:this.handleChangeTitle.bind(this),name:\"title\",className:\"form-control\",placeholder:\"Enter title\"}),React.createElement(\"small\",{id:\"emailHelp\",className:\"form-text \"},\"We'll never share your email with anyone else.\")),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"exampleInputPassword1\"},\"tre\\u015B\\u0107\"),React.createElement(\"input\",{value:this.state.text,name:\"name\",onChange:this.handleChangeText.bind(this),type:\"textarea\",className:\"form-control\",id:\"exampleInputPassword1\",placeholder:\"Text\"}),React.createElement(\"input\",{name:\"color\",value:this.state.color,type:\"color\",id:\"myColor\",onChange:this.handleChangeColor.bind(this)})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{className:\"fileInput\",type:\"file\",onChange:this.handleImageAsFile})),React.createElement(\"button\",{type:\"submit\",onClick:this.login,className:\"btn btn-primary\"},\"Usu\\u0144\"),React.createElement(\"div\",{className:\"imgPreview\"},$imagePreview),React.createElement(\"button\",{onClick:this.update,style:{marginLeft:'25px'},className:\"btn btn-success\"},\"Zmie\\u0144\")));}}]);return Edit;}(Component);var mapStateToProps=function mapStateToProps(state){return{posts:state.posts};};var mapDispatchToProps={postsFetched:postsFetched};export var EditContainer=connect(mapStateToProps,mapDispatchToProps)(Edit);","map":{"version":3,"sources":["C:/npm/moja/src/Edit.js"],"names":["React","Component","postsFetched","connect","storage","fire","base","firestore","Edit","props","handleImageAsFile","e","console","log","target","files","image","setState","file","state","update","bind","url","imagePreviewUrl","posts","currentUser","title","location","text","color","postsRef","syncState","context","preventDefault","value","id","databaseRef","database","ref","uploadTask","put","statCardsRef","then","onprops","reader","FileReader","onloadend","result","readAsDataURL","$imagePreview","handleChangeTitle","handleChangeText","handleChangeColor","login","marginLeft","mapStateToProps","mapDispatchToProps","EditContainer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { postsFetched } from \"./config/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport {storage, fire  , base, firestore}  from './config/Fire';\r\n\r\nexport class Edit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.update = this.update.bind(this);\r\n   \r\n   // this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      file:'',\r\n      url:'',\r\n      imagePreviewUrl: '',\r\n        posts: {},\r\n        currentUser: null,\r\n        title: this.props.location.title,\r\n        text: this.props.location.text,\r\n        color:  this.props.location.color\r\n      };\r\n}\r\n\r\ncomponentWillMount(){\r\n  this.postsRef = base.syncState('posts',{\r\n      context: this,\r\n      state: 'posts'\r\n  });\r\n  \r\n  \r\n}\r\nhandleImageAsFile = (e) => {\r\n  console.log(e.target.files[0]);\r\n  const image = e.target.files[0]\r\n this.setState({file: image})\r\n console.log(this.state.file);\r\n}\r\ncomponentDidMount(){\r\n \r\n\r\n}\r\nonprops(){\r\n  if (this.props.location.title!=this.state.title){\r\n  const title=this.props.location.title;\r\n  const text=this.props.location.text;\r\n  const color=this.props.location.color;\r\n  this.setState({ title: title});\r\n  this.setState({ text: text});\r\n  this.setState({ color: color});\r\n  console.log(this.state.title);\r\n  }\r\n}\r\nhandleChangeTitle(e){\r\n  e.preventDefault();\r\n\r\n  const title = e.target.value;\r\n  this.setState({title});\r\n\r\n\r\n  console.log(this.state.title);\r\n\r\n}\r\nhandleChangeText(e){\r\n  e.preventDefault();\r\n  const text = e.target.value;\r\n \r\n  \r\n\r\n  this.setState({text});\r\n  console.log(e.target.value);\r\n \r\n\r\n}\r\nhandleChangeColor(e){\r\n  e.preventDefault();\r\n  const color = e.target.value;\r\n \r\n  \r\n\r\n  this.setState({color});\r\n  console.log(e.target.value);\r\n \r\n\r\n}\r\nupdate(e){\r\n  e.preventDefault();\r\n  const id = this.state.id;\r\n  const title = this.state.title;\r\n  const text = this.state.text;\r\n  const color = this.state.color;\r\n  //let userRef = this.firestore.ref('posts/' + this.props.location.id);\r\n  const databaseRef = fire.database().ref('posts/'+this.props.location.id);\r\n  const uploadTask = storage.ref(`/images/${this.props.location.id}`).put(this.state.file);\r\n// this is to get the stat-cards table from firebase\r\nconst statCardsRef = databaseRef.update({\r\n  \r\n  title: title,\r\n  text: text,\r\n  color: color\r\n}).then[()=> {\r\n  console.log('updated!');\r\n}];\r\n console.log(statCardsRef);\r\n console.log(\"obrazek: \"+uploadTask);\r\n  // firestore.Collection('posts').oc(this.props.location.id).update({\r\n  //   title: title,\r\n  //   text: text,\r\n  //   color: color\r\n  // })\r\n  \r\n \r\n  //fire.database().ref().child('posts').child('1').set(data);\r\n  console.log(this.props.posts);\r\n}\r\ncomponentDidUpdate(){\r\n  console.log(this.props.posts);\r\n  this.onprops();\r\n }\r\n _handleImageChange(e){\r\n  e.preventDefault();\r\n\r\n  let reader = new FileReader();\r\n  let file = e.target.files[0];\r\n\r\n  reader.onloadend = () => {\r\n    this.setState({\r\n      file: file,\r\n      imagePreviewUrl: reader.result\r\n    });\r\n  }\r\n\r\n  reader.readAsDataURL(file)\r\n\r\n };\r\n  render() {\r\n      //wyśietlanie listy projektów\r\n      let {imagePreviewUrl} = this.state;\r\n      let $imagePreview = null;\r\n      if (imagePreviewUrl) {\r\n        $imagePreview = (<img src={imagePreviewUrl} />);\r\n      } else {\r\n        $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\r\n      }\r\n      console.log(this.props.location.title);\r\n     \r\n      return (<div>\r\n        <h1>Edytuj</h1>\r\n        <form>\r\n        <div className=\"form-group\">\r\n         <label htmlFor=\"title\">Tytuł</label>\r\n         <input type=\"textarea\"  value={this.state.title} onChange={this.handleChangeTitle.bind(this)} name=\"title\" className=\"form-control\" placeholder=\"Enter title\" />\r\n         <small id=\"emailHelp\" className=\"form-text \">We'll never share your email with anyone else.</small>\r\n        </div>\r\n         <div className=\"form-group\">\r\n        <label htmlFor=\"exampleInputPassword1\">treść</label>\r\n        <input value={this.state.text} name=\"name\" onChange={this.handleChangeText.bind(this)} type=\"textarea\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Text\" />\r\n      <input name=\"color\" value={this.state.color} type=\"color\" id=\"myColor\" onChange={this.handleChangeColor.bind(this)} ></input>\r\n        </div>\r\n        <div className=\"form-group\">\r\n        <input className=\"fileInput\" \r\n            type=\"file\" \r\n            onChange={this.handleImageAsFile} />\r\n            </div>\r\n        <button type=\"submit\" onClick={this.login} className=\"btn btn-primary\">Usuń</button>\r\n        <div className=\"imgPreview\">\r\n          {$imagePreview}\r\n        </div>\r\n        <button onClick={this.update} style={{marginLeft: '25px'}} className=\"btn btn-success\">Zmień</button>\r\n   </form>\r\n   </div>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    \r\n    posts: state.posts\r\n  }\r\n};\r\nconst mapDispatchToProps = { postsFetched };\r\n\r\nexport const EditContainer = connect(mapStateToProps, mapDispatchToProps)(Edit);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp2\\\\htdocs\\\\moja\\\\src\\\\App.js\";\nimport * as React from \"react\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Projects } from './projects';\nimport About from './about';\nimport Chat from './Chat';\nimport Admin from './Admin';\nimport { connect } from \"react-redux\";\nimport { postsFetched } from \"./config/actions/index\";\nimport { fire, base } from './config/Fire';\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sendState = this.sendState.bind(this);\n    this.onSync = this.onSync.bind(this);\n    this.state = {\n      articles: [{\n        title: \"React Redux Tutorial for Beginners\",\n        id: 1\n      }, {\n        title: \"TypeScript tutorial for beginners\",\n        id: 2\n      }],\n      temporary: [],\n      a: []\n    };\n  }\n\n  async componentDidMount() {\n    // fetch(\"https://randomuser.me/api/?format=json&results=10\")\n    //   .then(res => res.json())\n    //   .then(json => this.props.postsFetched(json.results));\n    await this.sendState();\n    await this.onSync();\n  }\n\n  async sendState() {\n    this.postsRef = base.syncState('posts', {\n      context: this,\n      state: 'temporary'\n    }); //this.props.postsFetched(this.state.temporary);\n\n    console.log(this.state.temporary);\n  }\n\n  async componentDidUpdate() {\n    if (this.props.posts.length == 0) {} // console.log(this.props.posts);\n\n  }\n\n  async onSync() {\n    let ref = fire.database().ref().child(\"posts\");\n    var a = [];\n    ref.on('value', function (snapshot) {\n      let snap = snapshot.val();\n\n      for (var i in snap) {\n        var data = [];\n        a.push({\n          id: i,\n          title: snap[i][\"title\"],\n          text: snap[i][\"text\"]\n        });\n        console.log(\"\\n\" + i);\n\n        for (var n in snap[i]) {\n          console.log(n, snap[i][n]);\n        }\n      }\n    });\n    console.log(this.state.temporary);\n    console.log(this.state.temporary);\n    var results = this.state.temporary;\n    console.log(results.length);\n    var temporary = [],\n        item;\n\n    for (var i = 1, len = results.length; i < len; i++) {\n      item = results[i]; //console.log(item[\"title\"]);\n      //temporary.push({id: item.title, title: item.text});\n    } //console.log(temporary);\n\n\n    console.log(a); //this.setState(a);\n\n    this.props.postsFetched(a);\n  }\n\n  render() {\n    if (this.props.posts.length == 0) {//this.props.postsFetched(this.state.a);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/projects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Projects\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"About\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Chat\"))), React.createElement(\"button\", {\n      onClick: this.onSync,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"sync\")), React.createElement(Route, {\n      exact: true,\n      path: \"/projects\",\n      component: Projects,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/chat\",\n      component: Chat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/admin\",\n      component: Admin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n};\n\nconst mapDispatchToProps = {\n  postsFetched\n};\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/xampp2/htdocs/moja/src/App.js"],"names":["React","BrowserRouter","Router","Route","Link","Projects","About","Chat","Admin","connect","postsFetched","fire","base","App","Component","constructor","props","sendState","bind","onSync","state","articles","title","id","temporary","a","componentDidMount","postsRef","syncState","context","console","log","componentDidUpdate","posts","length","ref","database","child","on","snapshot","snap","val","i","data","push","text","n","results","item","len","render","mapStateToProps","mapDispatchToProps","AppContainer"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Projects} from './projects';\nimport About from './about';\nimport Chat from './Chat';\nimport Admin from './Admin';\nimport { connect } from \"react-redux\";\nimport { postsFetched } from \"./config/actions/index\";\nimport {fire  , base}  from './config/Fire';\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sendState = this.sendState.bind(this);\n    this.onSync = this.onSync.bind(this);\n    this.state = {\n      articles: [\n        { title: \"React Redux Tutorial for Beginners\", id: 1 },\n        { title: \"TypeScript tutorial for beginners\", id: 2 }\n      ],\n      temporary: [],\n      a: []\n    };\n  }\n  async componentDidMount() {\n    // fetch(\"https://randomuser.me/api/?format=json&results=10\")\n    //   .then(res => res.json())\n    //   .then(json => this.props.postsFetched(json.results));\n      \n    \n   await this.sendState();\n   await this.onSync();\n \n    \n  }\n  async sendState(){\n    this.postsRef =base.syncState('posts',{\n      context: this,\n      state: 'temporary'\n  });\n \n  //this.props.postsFetched(this.state.temporary);\n\n  console.log(this.state.temporary);\n  \n  }\n  \n async componentDidUpdate(){\n   if(this.props.posts.length==0){\n   \n   }\n   // console.log(this.props.posts);\n  }\n  async onSync(){\n    let ref = fire.database().ref().child(\"posts\");\n    var a = [];\n  ref.on('value', function(snapshot) {\n      let snap = snapshot.val();\n      for (var i in snap){\n        var data=[];\n        a.push({id: i, title: snap[i][\"title\"], text: snap[i][\"text\"]});\n       console.log(\"\\n\" + i);\n        for (var n in snap[i]){\n             console.log(n, snap[i][n])     \n      }\n  }\n  });\n\n    console.log(this.state.temporary);\n    console.log(this.state.temporary);\n    var results = this.state.temporary;\n    console.log(results.length);\n   \n\n            var temporary = [], item;\n            for (var i = 1, len = results.length; i < len; i++) {\n                item = results[i];\n                //console.log(item[\"title\"]);\n                //temporary.push({id: item.title, title: item.text});\n            }\n            //console.log(temporary);\n            \n            \n    \n    \n            console.log(a);\n            //this.setState(a);\n         \n    this.props.postsFetched(a);\n            \n  }\n  render() {\n    if(this.props.posts.length==0){\n      //this.props.postsFetched(this.state.a);\n   }\n  return (\n    <div className=\"App\">\n      <Router>\n      \n      <header className=\"App-header\">\n      <ul>\n            <li>\n              <Link to=\"/projects\">Projects</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/chat\">Chat</Link>\n            </li>\n          </ul>\n          <button onClick={this.onSync}>sync</button>\n        \n      </header>\n      <Route exact path=\"/projects\" component={Projects} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/chat\" component={Chat} />\n      <Route path=\"/admin\" component={Admin} />\n      </Router>\n     \n    </div>\n    \n  );\n  }\n}\nconst mapStateToProps = (state) => {\n  \n  return {\n    \n    posts: state.posts\n  }\n};\nconst mapDispatchToProps = { postsFetched };\n\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}
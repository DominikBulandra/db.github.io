{"ast":null,"code":"import _defineProperty from \"C:\\\\xampp2\\\\htdocs\\\\moja\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const posts = (state = {}, action) => {\n  // (1)\n  switch (action.type) {\n    // (2)\n    case 'FETCH_POSTS_SUCCESS':\n      return [...action.posts];\n\n    case \"getAllStatPosts\":\n      console.log(\"getting \", action.payload);\n      console.log(action.payload);\n      return _objectSpread({}, state, {\n        // add all the cards from the database\n        // they will come in a json format,\n        // so we need to convert them to array\n        statPostState: Object.values(action.payload)\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/xampp2/htdocs/moja/src/config/reducers/posts.js"],"names":["posts","state","action","type","console","log","payload","statPostState","Object","values"],"mappings":";;;;;;AAAA,OAAO,MAAMA,KAAK,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAAE;AAC3C,UAAQA,MAAM,CAACC,IAAf;AAAuB;AACrB,SAAK,qBAAL;AACE,aAAO,CACL,GAAGD,MAAM,CAACF,KADL,CAAP;;AAGA,SAAK,iBAAL;AACEI,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,MAAM,CAACI,OAA/B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACA,+BAEKL,KAFL;AAGE;AACA;AACA;AACAM,QAAAA,aAAa,EAAEC,MAAM,CAACC,MAAP,CAAcP,MAAM,CAACI,OAArB;AANjB;;AAQJ;AACE,aAAOL,KAAP;AAjBJ;AAmBD,CApBI","sourcesContent":["export const posts = (state = {}, action) => { // (1)\r\n    switch (action.type) { // (2)\r\n      case 'FETCH_POSTS_SUCCESS':\r\n        return [\r\n          ...action.posts\r\n        ]\r\n        case \"getAllStatPosts\":\r\n          console.log(\"getting \", action.payload);\r\n          console.log(action.payload);\r\n          return {\r\n            // keep the old state\r\n            ...state,\r\n            // add all the cards from the database\r\n            // they will come in a json format,\r\n            // so we need to convert them to array\r\n            statPostState: Object.values(action.payload)\r\n          };\r\n      default:\r\n        return state\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}
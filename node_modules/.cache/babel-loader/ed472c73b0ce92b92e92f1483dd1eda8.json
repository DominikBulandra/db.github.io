{"ast":null,"code":"import _defineProperty from\"C:\\\\npm\\\\repo2\\\\db.github.io\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}export var allposts=function allposts(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var action=arguments.length>1?arguments[1]:undefined;// (1)\nswitch(action.type){// (2)\ncase\"getAllStatPosts\":console.log(\"getting \",action.payload);console.log(action.payload);return _objectSpread({},state,{// add all the cards from the database\n// they will come in a json format,\n// so we need to convert them to array\nstatPostState:Object.values(action.payload)});case\"getAllStatImages\":// console.log(\"getting \", action.payload);\n//   console.log(action.payload);\nreturn _objectSpread({},state,{// add all the cards from the database\n// they will come in a json format,\n// so we need to convert them to array\nstatPostImages:action.payload});default:return state;}};","map":{"version":3,"sources":["C:/npm/repo2/db.github.io/src/config/reducers/allposts.js"],"names":["allposts","state","action","type","console","log","payload","statPostState","Object","values","statPostImages"],"mappings":"g4BAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAwB,IAAvBC,CAAAA,KAAuB,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CAAE;AAC9C,OAAQA,MAAM,CAACC,IAAf,EAAuB;AACpB,IAAK,iBAAL,CACGC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBH,MAAM,CAACI,OAA/B,EACAF,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB,EAEA,wBAEKL,KAFL,EAIE;AACA;AACA;AACAM,aAAa,CAAEC,MAAM,CAACC,MAAP,CAAcP,MAAM,CAACI,OAArB,CAPjB,GASF,IAAK,kBAAL,CACG;AACF;AACG,wBAEKL,KAFL,EAIE;AACA;AACA;AACAS,cAAc,CAAER,MAAM,CAACI,OAPzB,GAUN,QACE,MAAOL,CAAAA,KAAP,CA5BJ,CA8BD,CA/BI","sourcesContent":["export const allposts = (state = {}, action) => { // (1)\r\n    switch (action.type) { // (2)\r\n       case \"getAllStatPosts\":\r\n          console.log(\"getting \", action.payload);\r\n          console.log(action.payload);\r\n      \r\n          return {\r\n            // keep the old state\r\n            ...state,\r\n           \r\n            // add all the cards from the database\r\n            // they will come in a json format,\r\n            // so we need to convert them to array\r\n            statPostState: Object.values(action.payload)\r\n          };\r\n        case \"getAllStatImages\":\r\n           // console.log(\"getting \", action.payload);\r\n         //   console.log(action.payload);\r\n            return {\r\n              // keep the old state\r\n              ...state,\r\n             \r\n              // add all the cards from the database\r\n              // they will come in a json format,\r\n              // so we need to convert them to array\r\n              statPostImages: action.payload\r\n              \r\n            };\r\n      default:\r\n        return state\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}
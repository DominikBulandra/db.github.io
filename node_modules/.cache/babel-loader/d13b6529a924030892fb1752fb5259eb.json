{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp2\\\\htdocs\\\\moja\\\\src\\\\list.js\";\nimport React, { Component } from 'react';\nimport { postsFetched } from \"./config/actions/index\";\nimport { connect } from \"react-redux\";\nexport class List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\"1\", \"2\"],\n      posts: [\"1\", \"2\"]\n    };\n  }\n\n  componentDidMount() {\n    var results = this.props.posts;\n    var data = [],\n        item;\n\n    for (var i = 0, len = results.length; i < len; i++) {\n      item = results[i];\n      data.push({\n        id: item.id,\n        title: item.title\n      });\n    } //console.log(this.props.posts);\n\n\n    var data2 = this.props.data;\n    this.setState({\n      data2\n    });\n  }\n\n  render() {\n    //works for array\n    var dane = this.props.posts;\n    console.log(this.props.posts);\n    var li = this.props.posts.map(function (item, i) {\n      console.log({\n        item\n      });\n      return React.createElement(\"li\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, item.name);\n    }); //doesn't work for array of objects\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, li);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n};\n\nconst mapDispatchToProps = {\n  postsFetched\n};\nexport const ListContainer = connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["C:/xampp2/htdocs/moja/src/list.js"],"names":["React","Component","postsFetched","connect","List","constructor","props","state","data","posts","componentDidMount","results","item","i","len","length","push","id","title","data2","setState","render","dane","console","log","li","map","name","mapStateToProps","mapDispatchToProps","ListContainer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,CAAC,GAAD,EAAK,GAAL,CADG;AAETC,MAAAA,KAAK,EAAE,CAAC,GAAD,EAAK,GAAL;AAFE,KAAb;AAIH;;AACDC,EAAAA,iBAAiB,GAAE;AACjB,QAAIC,OAAO,GAAG,KAAKL,KAAL,CAAWG,KAAzB;AACU,QAAID,IAAI,GAAG,EAAX;AAAA,QAAeI,IAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGH,OAAO,CAACI,MAA9B,EAAsCF,CAAC,GAAGC,GAA1C,EAA+CD,CAAC,EAAhD,EAAoD;AAChDD,MAAAA,IAAI,GAAGD,OAAO,CAACE,CAAD,CAAd;AACAL,MAAAA,IAAI,CAACQ,IAAL,CAAU;AAACC,QAAAA,EAAE,EAAEL,IAAI,CAACK,EAAV;AAAcC,QAAAA,KAAK,EAAEN,IAAI,CAACM;AAA1B,OAAV;AACH,KANM,CAOP;;;AACA,QAAIC,KAAK,GAAG,KAAKb,KAAL,CAAWE,IAAvB;AACA,SAAKY,QAAL,CAAc;AAACD,MAAAA;AAAD,KAAd;AACX;;AACCE,EAAAA,MAAM,GAAG;AACL;AACA,QAAIC,IAAI,GAAC,KAAKhB,KAAL,CAAWG,KAApB;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWG,KAAvB;AAGA,QAAIgB,EAAE,GAAE,KAAKnB,KAAL,CAAWG,KAAX,CAAiBiB,GAAjB,CAAqB,UAASd,IAAT,EAAeC,CAAf,EAAiB;AAC5CU,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACZ,QAAAA;AAAD,OAAZ;AACA,aAAO;AAAI,QAAA,GAAG,EAAEC,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaD,IAAI,CAACe,IAAlB,CAAP;AACD,KAHO,CAAR,CANK,CAWL;;AAGA,WAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKF,EAFL,CAHJ;AAUH;;AA5CiC;;AA+CpC,MAAMG,eAAe,GAAIrB,KAAD,IAAW;AAEjC,SAAO;AAELE,IAAAA,KAAK,EAAEF,KAAK,CAACE;AAFR,GAAP;AAID,CAND;;AAOA,MAAMoB,kBAAkB,GAAG;AAAE3B,EAAAA;AAAF,CAA3B;AAEA,OAAO,MAAM4B,aAAa,GAAG3B,OAAO,CAACyB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CzB,IAA7C,CAAtB","sourcesContent":["import React, { Component } from 'react';\r\nimport { postsFetched } from \"./config/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nexport class List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n   \r\n    this.state = {\r\n        data: [\"1\",\"2\"],\r\n        posts: [\"1\",\"2\"]\r\n      };\r\n}\r\ncomponentDidMount(){\r\n  var results = this.props.posts;\r\n            var data = [], item;\r\n            for (var i = 0, len = results.length; i < len; i++) {\r\n                item = results[i];\r\n                data.push({id: item.id, title: item.title});\r\n            }\r\n            //console.log(this.props.posts);\r\n            var data2 = this.props.data;\r\n            this.setState({data2});\r\n}\r\n  render() {\r\n      //works for array\r\n      var dane=this.props.posts;\r\n      console.log(this.props.posts);\r\n      \r\n   \r\n      var li =this.props.posts.map(function(item, i){\r\n        console.log({item});\r\n        return <li key={i}>{item.name}</li>\r\n      })\r\n\r\n      //doesn't work for array of objects\r\n      \r\n\r\n      return (\r\n        \r\n\r\n          <ul>\r\n              \r\n              {li}\r\n             \r\n             \r\n          </ul>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    \r\n    posts: state.posts\r\n  }\r\n};\r\nconst mapDispatchToProps = { postsFetched };\r\n\r\nexport const ListContainer = connect(mapStateToProps, mapDispatchToProps)(List);"]},"metadata":{},"sourceType":"module"}
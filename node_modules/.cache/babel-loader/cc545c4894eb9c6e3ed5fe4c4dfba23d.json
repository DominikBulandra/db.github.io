{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp2\\\\htdocs\\\\moja\\\\src\\\\App.js\";\nimport * as React from \"react\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ProjectsContainer } from './projects';\nimport About from './about';\nimport Chat from './Chat';\nimport Admin from './Admin';\nimport { connect } from \"react-redux\";\nimport { postsFetched } from \"./config/actions/index\";\nimport { fire, base } from './config/Fire';\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sendState = this.sendState.bind(this);\n    this.onSync = this.onSync.bind(this);\n    this.onPush = this.onPush.bind(this);\n    this.state = {\n      articles: [{\n        title: \"React Redux Tutorial for Beginners\",\n        id: 1\n      }, {\n        title: \"TypeScript tutorial for beginners\",\n        id: 2\n      }],\n      temporary: [],\n      a: [],\n      ref: []\n    };\n  }\n\n  componentDidMount() {\n    // fetch(\"https://randomuser.me/api/?format=json&results=10\")\n    //   .then(res => res.json())\n    //   .then(json => this.props.postsFetched(json.results));\n    //await this.sendState();\n    this.onSync();\n  }\n\n  async sendState() {\n    this.postsRef = base.syncState('posts', {\n      context: this,\n      state: 'temporary'\n    }); //this.props.postsFetched(this.state.temporary);\n\n    console.log(this.state.temporary);\n  }\n\n  async componentDidUpdate() {\n    if (this.props.posts.length == 0) {\n      this.onSync();\n    } // console.log(this.props.posts);\n\n  }\n\n  onPush() {\n    let ref = fire.database().ref().child(\"posts\");\n    var a = [\"test\"];\n    this.props.postsFetched(a);\n    let snap;\n    ref.on('value', function (snapshot) {\n      snap = snapshot.val();\n      console.log(snap);\n    });\n\n    for (var i in snap) {\n      a.push({\n        id: i,\n        title: snap[i][\"title\"],\n        text: snap[i][\"text\"]\n      });\n      console.log(\"\\n\" + i); //for (var n in snap[i]){\n      //     console.log(n, snap[i][n])     \n      // }\n    }\n\n    if (ref == null) {\n      console.log(\"pusta zmienna\");\n      this.onPush();\n    } else {\n      this.props.postsFetched(a);\n    }\n\n    return a;\n  }\n\n  async onSync() {\n    var b = [];\n    b.push({\n      id: 1,\n      title: \"test\",\n      text: \"text\"\n    }); //console.log(ref);\n\n    var a = [];\n    a = this.onPush();\n    console.log(a);\n\n    if (this.props.posts) {\n      console.log(this.props.posts);\n    } // if(a.length=0){\n    //   console.log(\"nie jest 0\");\n    // this.props.postsFetched(a);\n    // a=null;\n    // }else{\n    //     this.props.postsFetched(this.onPush());\n    // }\n    //console.log(this.state.temporary);\n    //console.log(this.state.temporary);\n    // var results = this.state.temporary;\n    // console.log(results.length);\n    //         var temporary = [], item;\n    //         for (var i = 1, len = results.length; i < len; i++) {\n    //             item = results[i];\n    //             //console.log(item[\"title\"]);\n    //             //temporary.push({id: item.title, title: item.text});\n    //         }\n    //         //console.log(temporary);\n    //console.log(a);\n    //this.setState(a);\n\n  }\n\n  render() {\n    if (this.props.posts.length == 0) {// this.onSync();//this.props.postsFetched(this.state.a);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/projects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Projects\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"About\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Chat\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onSync,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"sync\")))), React.createElement(Route, {\n      exact: true,\n      path: \"/projects\",\n      component: ProjectsContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/chat\",\n      component: Chat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/admin\",\n      component: Admin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n};\n\nconst mapDispatchToProps = {\n  postsFetched\n};\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/xampp2/htdocs/moja/src/App.js"],"names":["React","BrowserRouter","Router","Route","Link","ProjectsContainer","About","Chat","Admin","connect","postsFetched","fire","base","App","Component","constructor","props","sendState","bind","onSync","onPush","state","articles","title","id","temporary","a","ref","componentDidMount","postsRef","syncState","context","console","log","componentDidUpdate","posts","length","database","child","snap","on","snapshot","val","i","push","text","b","render","mapStateToProps","mapDispatchToProps","AppContainer"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {ProjectsContainer} from './projects';\nimport About from './about';\nimport Chat from './Chat';\nimport Admin from './Admin';\nimport { connect } from \"react-redux\";\nimport { postsFetched } from \"./config/actions/index\";\nimport {fire  , base}  from './config/Fire';\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sendState = this.sendState.bind(this);\n    this.onSync = this.onSync.bind(this);\n    this.onPush = this.onPush.bind(this);\n    this.state = {\n      articles: [\n        { title: \"React Redux Tutorial for Beginners\", id: 1 },\n        { title: \"TypeScript tutorial for beginners\", id: 2 }\n      ],\n      temporary: [],\n      a: [],\n      ref: []\n    };\n  }\n\n\n componentDidMount() {\n    // fetch(\"https://randomuser.me/api/?format=json&results=10\")\n    //   .then(res => res.json())\n    //   .then(json => this.props.postsFetched(json.results));\n      \n    \n   //await this.sendState();\n  this.onSync();\n  \n  \n \n    \n  }\n  \n  async sendState(){\n    this.postsRef =base.syncState('posts',{\n      context: this,\n      state: 'temporary'\n  });\n \n  //this.props.postsFetched(this.state.temporary);\n\n  console.log(this.state.temporary);\n  \n  }\n  \n async componentDidUpdate(){\n   if(this.props.posts.length==0){\n   this.onSync();\n   }\n   // console.log(this.props.posts);\n  }\n  onPush(){\n    let ref = fire.database().ref().child(\"posts\");\n    var a = [\"test\"];\n    this.props.postsFetched(a);\n    let snap;\n  ref.on('value', function(snapshot) {\n      snap = snapshot.val();\n      console.log(snap);\n  });\n\n\n  for (var i in snap){\n   \n    a.push({id: i, title: snap[i][\"title\"], text: snap[i][\"text\"]});\n  console.log(\"\\n\" + i);\n    //for (var n in snap[i]){\n    //     console.log(n, snap[i][n])     \n // }\n \n}\nif(ref==null){\n  console.log(\"pusta zmienna\");\nthis.onPush();\n}else{\n  this.props.postsFetched(a);\n \n}\n  return a;\n  }\n  async onSync(){\n    var b = [];\n    b.push({id: 1, title: \"test\", text: \"text\"});\n    \n    //console.log(ref);\n    var a = [];\n    a=this.onPush();\n    console.log(a);\n    \n    if (this.props.posts){\n      console.log(this.props.posts);\n    }    \n  // if(a.length=0){\n  //   console.log(\"nie jest 0\");\n  // this.props.postsFetched(a);\n  // a=null;\n  // }else{\n  //     this.props.postsFetched(this.onPush());\n  \n  // }\n    //console.log(this.state.temporary);\n    //console.log(this.state.temporary);\n    // var results = this.state.temporary;\n    // console.log(results.length);\n   \n\n    //         var temporary = [], item;\n    //         for (var i = 1, len = results.length; i < len; i++) {\n    //             item = results[i];\n    //             //console.log(item[\"title\"]);\n    //             //temporary.push({id: item.title, title: item.text});\n    //         }\n    //         //console.log(temporary);\n            \n            \n    \n    \n            //console.log(a);\n            //this.setState(a);\n         \n   \n            \n  }\n  render() {\n    if(this.props.posts.length==0){\n     // this.onSync();//this.props.postsFetched(this.state.a);\n   }\n   \n  return (\n    <div className=\"App\">\n      <Router>\n      \n      <header className=\"App-header\">\n      <ul>\n            <li>\n              <Link to=\"/projects\">Projects</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/chat\">Chat</Link>\n            </li>\n            <li>\n            <button onClick={this.onSync}>sync</button>\n            </li>\n          </ul>\n         \n        \n      </header>\n      <Route exact path=\"/projects\" component={ProjectsContainer}/>\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/chat\" component={Chat} />\n      <Route path=\"/admin\" component={Admin} />\n      </Router>\n     \n    </div>\n    \n  );\n  }\n}\nconst mapStateToProps = (state) => {\n  \n  return {\n    \n    posts: state.posts\n  }\n};\nconst mapDispatchToProps = { postsFetched };\n\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\npm\\\\repo2\\\\db.github.io\\\\src\\\\App.js\";\nimport * as React from \"react\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport './style.css';\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ProjectsContainer } from './projects';\nimport { ButtonsComponent } from './buttonsNav';\nimport About from './about';\nimport Chat from './Chat';\nimport Admin from './Admin';\nimport { connect } from \"react-redux\";\nimport { postsFetched, getAllStatPostsAction, getAllStatPostsImages } from \"./config/actions/index\";\nimport { fire, base, storage } from './config/Fire';\nimport { Link2, animateScroll as scroll } from \"react-scroll\";\nimport { ProjectContainer } from \"./Project\";\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sendState = this.sendState.bind(this);\n    this.onSync = this.onSync.bind(this);\n    this.onPush = this.onPush.bind(this);\n    this.onAction = this.onAction.bind(this);\n    this.onImage = this.onImage.bind(this);\n    this.state = {\n      articles: [{\n        title: \"React Redux Tutorial for Beginners\",\n        id: 1\n      }, {\n        title: \"TypeScript tutorial for beginners\",\n        id: 2\n      }],\n      temporary: [],\n      a: [],\n      ref: [],\n      ref2: []\n    };\n  }\n\n  componentDidMount() {\n    // fetch(\"https://randomuser.me/api/?format=json&results=10\")\n    //   .then(res => res.json())\n    //   .then(json => this.props.postsFetched(json.results));\n    //await this.sendState();\n    this.onSync();\n    this.onAction(); //console.log(this.props);\n  }\n\n  ref2(temp) {\n    this.setState({\n      ref2: temp\n    });\n  }\n\n  onAction() {\n    this.props.getAllStatPostsAction();\n    var temp = [];\n    var storageRef = storage.ref(\"images\");\n    storageRef.list().then(function (result) {\n      console.log(result.items);\n      result.prefixes.forEach(function (imageRef) {\n        //nazwa folderu zawierająca zdjecia\n        console.log(imageRef.name);\n        var foldername = imageRef.name;\n        imageRef.list().then(function (result2) {\n          result2.items.forEach(function (imageRef2) {\n            var filename = imageRef2.name;\n            imageRef2.getDownloadURL().then(function (url) {\n              console.log(foldername, \"url\", url); //zapisywanie w tablicy adresu url obrazka razem z id posta do ktorego zostal przypisany\n\n              var array = [foldername, url, filename];\n              temp.push(array);\n            });\n          });\n        }); //console.log(imageRef.getDownloadURL());\n        //this.onImage(imageRef);\n        //console.log(imageRef.getDownloadURL());\n      });\n    }).catch(function (error) {// Handle any errors\n    });\n    this.ref2(temp);\n    console.log(\"obraz\", this.state.ref2); // const storageRef = storage.ref('/images/1576580835000').getDownloadURL();\n    //zapisywanie do stanu adresów obrazków\n\n    this.props.getAllStatPostsImages(temp);\n    console.log(this.props.posts2);\n    console.log(\"Obrazy\", this.props.images);\n  }\n\n  async sendState() {\n    this.postsRef = base.syncState('posts', {\n      context: this,\n      state: 'temporary'\n    }); //this.props.postsFetched(this.state.temporary);\n    //console.log(this.state.temporary);\n  }\n\n  onImage(imageRef) {\n    console.log(imageRef);\n    var fileURLs = [];\n    imageRef.getDownloadURL().then(function (url) {\n      // TODO: Display the image on the UI\n      console.log(url); //   this.setState({\n      //     ref2: [\n      //         ...this.state.ref2,\n      //         url\n      //     ]\n      // });\n    }).catch(function (error) {// Handle any errors\n    });\n    console.log(this.state.ref2);\n  }\n\n  async componentDidUpdate() {// console.log(this.props.posts);\n  }\n\n  onPush() {\n    let ref = fire.database().ref().child(\"posts\");\n    var a = [\"test\"];\n    this.props.postsFetched(a);\n    let snap;\n    ref.on('value', function (snapshot) {\n      snap = snapshot.val();\n      console.log(snap);\n    });\n\n    for (var i in snap) {\n      a.push({\n        id: i,\n        title: snap[i][\"title\"],\n        text: snap[i][\"text\"]\n      });\n      console.log(\"\\n\" + snap[i]); //for (var n in snap[i]){\n      //     console.log(n, snap[i][n])     \n      // }\n    }\n\n    if (ref == null) {\n      console.log(\"pusta zmienna\");\n      this.onPush();\n    } else {\n      this.props.postsFetched(a);\n    }\n\n    return a;\n  }\n\n  async onSync() {\n    var b = [];\n    b.push({\n      id: 1,\n      title: \"test\",\n      text: \"text\"\n    }); //console.log(ref);\n\n    var a = [];\n    a = this.onPush();\n    console.log(a);\n\n    if (this.props.posts) {\n      console.log(this.props.posts);\n    } // if(a.length=0){\n    //   console.log(\"nie jest 0\");\n    // this.props.postsFetched(a);\n    // a=null;\n    // }else{\n    //     this.props.postsFetched(this.onPush());\n    // }\n    //console.log(this.state.temporary);\n    //console.log(this.state.temporary);\n    // var results = this.state.temporary;\n    // console.log(results.length);\n    //         var temporary = [], item;\n    //         for (var i = 1, len = results.length; i < len; i++) {\n    //             item = results[i];\n    //             //console.log(item[\"title\"]);\n    //             //temporary.push({id: item.title, title: item.text});\n    //         }\n    //         //console.log(temporary);\n    //console.log(a);\n    //this.setState(a);\n\n  }\n\n  render() {\n    if (this.props.posts.length == 0) {// this.onSync();//this.props.postsFetched(this.state.a);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Router, {\n      basename: \"/db.github.io\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"ButtonUl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"button\",\n      to: \"/projects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Projekty\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"button\",\n      to: \"/about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"o mnie\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"Router\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/projects\",\n      component: ProjectsContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/admin\",\n      component: Admin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Dominik Bulandra 2022\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts2: state.allposts.statPostState,\n    posts: state.posts,\n    images: state.allposts.statPostImages\n  };\n};\n\nconst mapDispatchToProps = {\n  postsFetched,\n  getAllStatPostsAction,\n  getAllStatPostsImages\n};\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/npm/repo2/db.github.io/src/App.js"],"names":["React","HashRouter","Router","Route","Link","ProjectsContainer","ButtonsComponent","About","Chat","Admin","connect","postsFetched","getAllStatPostsAction","getAllStatPostsImages","fire","base","storage","Link2","animateScroll","scroll","ProjectContainer","App","Component","constructor","props","sendState","bind","onSync","onPush","onAction","onImage","state","articles","title","id","temporary","a","ref","ref2","componentDidMount","temp","setState","storageRef","list","then","result","console","log","items","prefixes","forEach","imageRef","name","foldername","result2","imageRef2","filename","getDownloadURL","url","array","push","catch","error","posts2","images","postsRef","syncState","context","fileURLs","componentDidUpdate","database","child","snap","on","snapshot","val","i","text","b","posts","render","length","mapStateToProps","allposts","statPostState","statPostImages","mapDispatchToProps","AppContainer"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport './style.css';\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {ProjectsContainer} from './projects';\r\nimport {ButtonsComponent} from './buttonsNav';\r\nimport About from './about';\r\nimport Chat from './Chat';\r\nimport Admin from './Admin';\r\nimport { connect } from \"react-redux\";\r\nimport { postsFetched,getAllStatPostsAction,getAllStatPostsImages } from \"./config/actions/index\";\r\nimport {fire  , base, storage}  from './config/Fire';\r\nimport { Link2, animateScroll as scroll } from \"react-scroll\";\r\nimport { ProjectContainer } from \"./Project\";\r\nexport class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n   \r\n    this.sendState = this.sendState.bind(this);\r\n    this.onSync = this.onSync.bind(this);\r\n    this.onPush = this.onPush.bind(this);\r\n    this.onAction= this.onAction.bind(this);\r\n    this.onImage=this.onImage.bind(this);\r\n    this.state = {\r\n      articles: [\r\n        { title: \"React Redux Tutorial for Beginners\", id: 1 },\r\n        { title: \"TypeScript tutorial for beginners\", id: 2 }\r\n      ],\r\n      temporary: [],\r\n      a: [],\r\n      ref: [],\r\n      ref2: []\r\n    };\r\n  }\r\n\r\n\r\n componentDidMount() {\r\n    // fetch(\"https://randomuser.me/api/?format=json&results=10\")\r\n    //   .then(res => res.json())\r\n    //   .then(json => this.props.postsFetched(json.results));\r\n      \r\n    \r\n   //await this.sendState();\r\n\r\n  \r\n  this.onSync();\r\n  this.onAction();\r\n //console.log(this.props);\r\n \r\n    \r\n  }\r\n  ref2(temp){\r\n    this.setState({\r\n      ref2: temp\r\n      \r\n  });\r\n}\r\n  \r\n  \r\n  onAction(){\r\n    this.props.getAllStatPostsAction();\r\n    var temp =[];\r\n    var storageRef = storage.ref(\"images\");\r\n   \r\n    storageRef.list().then(function(result) {\r\n      console.log(result.items);\r\n      result.prefixes.forEach(function(imageRef) {\r\n        //nazwa folderu zawierająca zdjecia\r\n       console.log(imageRef.name);\r\n       \r\n       var foldername=imageRef.name;\r\n   \r\n        imageRef.list().then(function(result2) {\r\n        \r\n        result2.items.forEach(function(imageRef2) {\r\n          var filename=imageRef2.name;\r\n          \r\n          imageRef2.getDownloadURL().then(function(url) {\r\n\r\n            console.log(foldername,\"url\",url);\r\n            //zapisywanie w tablicy adresu url obrazka razem z id posta do ktorego zostal przypisany\r\n            var array=[foldername,url,filename]\r\n            temp.push(array);\r\n        });\r\n      });\r\n      });\r\n      //console.log(imageRef.getDownloadURL());\r\n     \r\n        //this.onImage(imageRef);\r\n        //console.log(imageRef.getDownloadURL());\r\n      });\r\n    }).catch(function(error) {\r\n      // Handle any errors\r\n    });\r\n\r\n    this.ref2(temp);\r\n\r\n        console.log(\"obraz\",this.state.ref2);\r\n   // const storageRef = storage.ref('/images/1576580835000').getDownloadURL();\r\n\r\n\r\n   //zapisywanie do stanu adresów obrazków\r\n    this.props.getAllStatPostsImages(temp);\r\n\r\n    \r\n    console.log(this.props.posts2);\r\n    console.log(\"Obrazy\",this.props.images);\r\n  }\r\n  async sendState(){\r\n    this.postsRef =base.syncState('posts',{\r\n      context: this,\r\n      state: 'temporary'\r\n  });\r\n \r\n  //this.props.postsFetched(this.state.temporary);\r\n\r\n  //console.log(this.state.temporary);\r\n  \r\n  }\r\n  onImage(imageRef) {\r\n    console.log(imageRef);\r\n    var fileURLs = [];\r\n    imageRef.getDownloadURL().then(function(url) {\r\n      // TODO: Display the image on the UI\r\n      console.log(url);\r\n    //   this.setState({\r\n    //     ref2: [\r\n    //         ...this.state.ref2,\r\n    //         url\r\n    //     ]\r\n    // });\r\n    }).catch(function(error) {\r\n      // Handle any errors\r\n    });\r\n    console.log(this.state.ref2);\r\n  };\r\n async componentDidUpdate(){\r\n   \r\n   // console.log(this.props.posts);\r\n  }\r\n  onPush(){\r\n    let ref = fire.database().ref().child(\"posts\");\r\n    var a = [\"test\"];\r\n    this.props.postsFetched(a);\r\n    let snap;\r\n  ref.on('value', function(snapshot) {\r\n      snap = snapshot.val();\r\n      console.log(snap);\r\n  });\r\n\r\n\r\n  for (var i in snap){\r\n   \r\n    a.push({id: i, title: snap[i][\"title\"], text: snap[i][\"text\"]});\r\n  console.log(\"\\n\" + snap[i]);\r\n    //for (var n in snap[i]){\r\n    //     console.log(n, snap[i][n])     \r\n // }\r\n \r\n}\r\nif(ref==null){\r\n  console.log(\"pusta zmienna\");\r\nthis.onPush();\r\n}else{\r\n  this.props.postsFetched(a);\r\n \r\n}\r\n  return a;\r\n  }\r\n  async onSync(){\r\n    var b = [];\r\n    b.push({id: 1, title: \"test\", text: \"text\"});\r\n    \r\n    //console.log(ref);\r\n    var a = [];\r\n    a=this.onPush();\r\n    console.log(a);\r\n    \r\n    if (this.props.posts){\r\n      console.log(this.props.posts);\r\n    }    \r\n  // if(a.length=0){\r\n  //   console.log(\"nie jest 0\");\r\n  // this.props.postsFetched(a);\r\n  // a=null;\r\n  // }else{\r\n  //     this.props.postsFetched(this.onPush());\r\n  \r\n  // }\r\n    //console.log(this.state.temporary);\r\n    //console.log(this.state.temporary);\r\n    // var results = this.state.temporary;\r\n    // console.log(results.length);\r\n   \r\n\r\n    //         var temporary = [], item;\r\n    //         for (var i = 1, len = results.length; i < len; i++) {\r\n    //             item = results[i];\r\n    //             //console.log(item[\"title\"]);\r\n    //             //temporary.push({id: item.title, title: item.text});\r\n    //         }\r\n    //         //console.log(temporary);\r\n            \r\n            \r\n    \r\n    \r\n            //console.log(a);\r\n            //this.setState(a);\r\n         \r\n   \r\n            \r\n  }\r\n  render() {\r\n    if(this.props.posts.length==0){\r\n     // this.onSync();//this.props.postsFetched(this.state.a);\r\n   }\r\n   \r\n  return (\r\n    <div className=\"App\" >\r\n      <Router basename=\"/db.github.io\">\r\n      \r\n      <header className=\"App-header\">\r\n     \r\n      <ul className=\"ButtonUl\">\r\n            <li>\r\n              <Link className=\"button\" to=\"/projects\">Projekty</Link>\r\n            </li>\r\n            <li>\r\n              <Link  className=\"button\" to=\"/about\">o mnie</Link>\r\n            </li>\r\n            <li>\r\n            {/* <button onClick={()=>{ window.scrollTo(0, 300);;}}>scrool</button>\r\n            <button onClick={this.elScroll.executeScroll}>Click to scroll </button> */}\r\n            </li>\r\n            \r\n           \r\n            {/* <li>\r\n            <button onClick={this.onSync}>sync</button>\r\n            </li>\r\n            <li>\r\n            <button onClick={this.onAction}>test action</button>\r\n            </li> */}\r\n          </ul>\r\n         \r\n        \r\n      </header>\r\n      <div className=\"Router\">\r\n      <Route exact path=\"/projects\" component={ProjectsContainer}/>\r\n      <Route path=\"/about\" component={About} />\r\n      <Route path=\"/admin\" component={Admin} /> \r\n      </div>\r\n      </Router>\r\n      <div>Dominik Bulandra 2022</div>\r\n    </div>\r\n    \r\n    \r\n  );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    posts2: state.allposts.statPostState,\r\n    posts: state.posts,\r\n    images: state.allposts.statPostImages\r\n  }\r\n};\r\nconst mapDispatchToProps = { postsFetched,getAllStatPostsAction,getAllStatPostsImages };\r\n\r\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}
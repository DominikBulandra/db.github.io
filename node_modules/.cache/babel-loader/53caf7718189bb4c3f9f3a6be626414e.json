{"ast":null,"code":"var _jsxFileName = \"C:\\\\npm\\\\moja\\\\src\\\\Edit.js\";\nimport React, { Component } from 'react';\nimport { postsFetched, getAllStatPostsImages } from \"./config/actions/index\";\nimport { connect } from \"react-redux\";\nimport { storage, fire, base, firestore } from './config/Fire';\nimport { useQuill } from 'react-quilljs';\nimport 'quill/dist/quill.snow.css';\nimport ReactQuill, { Quill } from 'react-quill';\nexport class Edit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleImageAsFile = e => {\n      console.log(e.target.files[0]);\n      const image = e.target.files[0];\n      this.setState({\n        file: image\n      });\n      console.log(this.state.file);\n    };\n\n    this.delete = (id, name) => {\n      // var desertRef = storage.child('images/1576580858304/images.png');\n      // Delete the file\n      const deleteTask = storage.ref(\"/images/\".concat(id, \"/\").concat(name)).delete().then(() => {\n        console.log(\"plik usuniety\");\n      }).catch(error => {\n        console.log(\"bład:\" + error);\n      });\n    };\n\n    this.update = this.update.bind(this); // this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      file: '',\n      url: '',\n      imagePreviewUrl: '',\n      posts: {},\n      currentUser: null,\n      title: this.props.location.title,\n      text: this.props.location.text,\n      color: this.props.location.color,\n      id: this.props.location.id\n    };\n  }\n\n  componentWillMount() {\n    this.postsRef = base.syncState('posts', {\n      context: this,\n      state: 'posts'\n    });\n  }\n\n  componentDidMount() {}\n\n  onprops() {\n    if (this.props.location.id != this.state.id) {\n      const title = this.props.location.title;\n      const text = this.props.location.text;\n      const id = this.props.location.id;\n      const color = this.props.location.color;\n      this.setState({\n        title: title\n      });\n      this.setState({\n        id: id\n      });\n      this.setState({\n        text: text\n      });\n      this.setState({\n        color: color\n      });\n      console.log(this.state.title);\n      console.log(this.props.location.title);\n    }\n  }\n\n  handleChangeTitle(e) {\n    e.preventDefault();\n    const title = e.target.value;\n    this.setState({\n      title\n    });\n    console.log(this.state.title);\n  }\n\n  handleChangeText(e) {\n    e.preventDefault();\n    const text = e.target.value;\n    this.setState({\n      text\n    });\n    console.log(e.target.value);\n  }\n\n  handleChangeColor(e) {\n    e.preventDefault();\n    const color = e.target.value;\n    this.setState({\n      color\n    });\n    console.log(e.target.value);\n  }\n\n  update(e) {\n    e.preventDefault();\n    const id = this.state.id;\n    const title = this.state.title;\n    const text = this.state.text;\n    const color = this.state.color;\n    console.log(this.state.id); //let userRef = this.firestore.ref('posts/' + this.props.location.id);\n\n    const databaseRef = fire.database().ref('posts/' + this.props.location.id);\n    const uploadTask = storage.ref(\"/images/\".concat(this.state.id, \"/\").concat(this.state.file.name)).put(this.state.file); // this is to get the stat-cards table from firebase\n\n    const statCardsRef = databaseRef.update({\n      title: title,\n      text: text,\n      color: color\n    }).then[() => {\n      console.log('updated!');\n    }];\n\n    console.log(statCardsRef);\n    console.log(\"obrazek: \" + uploadTask); // firestore.Collection('posts').oc(this.props.location.id).update({\n    //   title: title,\n    //   text: text,\n    //   color: color\n    // })\n    //fire.database().ref().child('posts').child('1').set(data);\n\n    console.log(this.props.posts);\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.posts);\n    this.onprops();\n  }\n\n  _handleImageChange(e) {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  render() {\n    //const { quill, quillRef } = useQuill();\n    //this.onprops();\n    //wyśietlanie listy projektów\n    let imagePreviewUrl = this.state.imagePreviewUrl;\n    let $imagePreview = null;\n\n    if (imagePreviewUrl) {\n      $imagePreview = React.createElement(\"img\", {\n        src: imagePreviewUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      });\n    } else {\n      $imagePreview = React.createElement(\"div\", {\n        className: \"previewText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Please select an Image for Preview\");\n    }\n\n    console.log(this.props.location.title);\n    console.log(this.props.images);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Edytuj\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, this.state.id, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Tytu\\u0142\"), React.createElement(\"input\", {\n      type: \"textarea\",\n      value: this.state.title,\n      onChange: this.handleChangeTitle.bind(this),\n      name: \"title\",\n      className: \"form-control\",\n      placeholder: \"Enter title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"We'll never share your email with anyone else.\")), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"exampleInputPassword1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"tre\\u015B\\u0107\"), React.createElement(\"textarea\", {\n      value: this.state.text,\n      style: {\n        height: '500px'\n      },\n      name: \"name\",\n      rows: \"7\",\n      onChange: this.handleChangeText.bind(this),\n      type: \"textarea\",\n      className: \"form-control\",\n      id: \"exampleInputPassword1\",\n      placeholder: \"Text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"color\",\n      value: this.state.color,\n      type: \"color\",\n      id: \"myColor\",\n      onChange: this.handleChangeColor.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"fileInput\",\n      type: \"file\",\n      onChange: this.handleImageAsFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.login,\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Usu\\u0144\"), React.createElement(\"div\", {\n      className: \"imgPreview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, $imagePreview), React.createElement(\"button\", {\n      onClick: this.update,\n      style: {\n        marginLeft: '25px'\n      },\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Zmie\\u0144\")), React.createElement(\"div\", {\n      style: {\n        width: 500,\n        height: 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(ReactQuill, {\n      theme: \"snow\",\n      value: value,\n      onChange: setValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), this.props.images.map(function (object, i) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, object[0] == this.state.id && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: object[1],\n        style: {\n          width: '150px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), \"  \", React.createElement(\"button\", {\n        onClick: () => this.delete(object[0], object[2]),\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Usu\\u0144\")));\n    }, this));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    images: state.allposts.statPostImages\n  };\n};\n\nconst mapDispatchToProps = {\n  postsFetched,\n  getAllStatPostsImages\n};\nexport const EditContainer = connect(mapStateToProps, mapDispatchToProps)(Edit);","map":{"version":3,"sources":["C:/npm/moja/src/Edit.js"],"names":["React","Component","postsFetched","getAllStatPostsImages","connect","storage","fire","base","firestore","useQuill","ReactQuill","Quill","Edit","constructor","props","handleImageAsFile","e","console","log","target","files","image","setState","file","state","delete","id","name","deleteTask","ref","then","catch","error","update","bind","url","imagePreviewUrl","posts","currentUser","title","location","text","color","componentWillMount","postsRef","syncState","context","componentDidMount","onprops","handleChangeTitle","preventDefault","value","handleChangeText","handleChangeColor","databaseRef","database","uploadTask","put","statCardsRef","componentDidUpdate","_handleImageChange","reader","FileReader","onloadend","result","readAsDataURL","render","$imagePreview","images","height","login","marginLeft","width","setValue","map","object","i","mapStateToProps","allposts","statPostImages","mapDispatchToProps","EditContainer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { postsFetched,getAllStatPostsImages } from \"./config/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport {storage, fire  , base, firestore}  from './config/Fire';\r\nimport { useQuill } from 'react-quilljs';\r\nimport 'quill/dist/quill.snow.css'; \r\nimport ReactQuill, { Quill } from 'react-quill';\r\nexport class Edit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.update = this.update.bind(this);\r\n    \r\n   \r\n   // this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      file:'',\r\n      url:'',\r\n      imagePreviewUrl: '',\r\n        posts: {},\r\n        currentUser: null,\r\n        title: this.props.location.title,\r\n        text: this.props.location.text,\r\n        color:  this.props.location.color,\r\n        id: this.props.location.id\r\n      };\r\n}\r\n\r\ncomponentWillMount(){\r\n  this.postsRef = base.syncState('posts',{\r\n      context: this,\r\n      state: 'posts'\r\n  });\r\n  \r\n  \r\n}\r\nhandleImageAsFile = (e) => {\r\n  console.log(e.target.files[0]);\r\n  const image = e.target.files[0]\r\n this.setState({file: image})\r\n console.log(this.state.file);\r\n}\r\ncomponentDidMount(){\r\n \r\n\r\n}\r\nonprops(){\r\n  if (this.props.location.id!=this.state.id){\r\n  const title=this.props.location.title;\r\n  const text=this.props.location.text;\r\n  const id=this.props.location.id;\r\n  const color=this.props.location.color;\r\n  this.setState({ title: title});\r\n  this.setState({ id: id});\r\n  this.setState({ text: text});\r\n  this.setState({ color: color});\r\n  console.log(this.state.title);\r\n  console.log(this.props.location.title);\r\n  }\r\n}\r\nhandleChangeTitle(e){\r\n  e.preventDefault();\r\n\r\n  const title = e.target.value;\r\n  this.setState({title});\r\n\r\n\r\n  console.log(this.state.title);\r\n\r\n}\r\nhandleChangeText(e){\r\n  e.preventDefault();\r\n  const text = e.target.value;\r\n \r\n  \r\n\r\n  this.setState({text});\r\n  console.log(e.target.value);\r\n \r\n\r\n}\r\nhandleChangeColor(e){\r\n  e.preventDefault();\r\n  const color = e.target.value;\r\n \r\n  \r\n\r\n  this.setState({color});\r\n  console.log(e.target.value);\r\n \r\n\r\n}\r\ndelete = (id,name)=>{\r\n\r\n // var desertRef = storage.child('images/1576580858304/images.png');\r\n  // Delete the file\r\n  const deleteTask = storage.ref(`/images/${id}/${name}`).delete().then(() => {\r\n    console.log(\"plik usuniety\");\r\n  }).catch((error) => {\r\n   console.log(\"bład:\"+error);\r\n  });\r\n  \r\n}\r\nupdate(e){\r\n  e.preventDefault();\r\n  const id = this.state.id;\r\n  const title = this.state.title;\r\n  const text = this.state.text;\r\n  const color = this.state.color;\r\n  console.log(this.state.id);\r\n  //let userRef = this.firestore.ref('posts/' + this.props.location.id);\r\n  const databaseRef = fire.database().ref('posts/'+this.props.location.id);\r\n  const uploadTask = storage.ref(`/images/${this.state.id}/${this.state.file.name}`).put(this.state.file);\r\n// this is to get the stat-cards table from firebase\r\nconst statCardsRef = databaseRef.update({\r\n  \r\n  title: title,\r\n  text: text,\r\n  color: color\r\n}).then[()=> {\r\n  console.log('updated!');\r\n}];\r\n console.log(statCardsRef);\r\n console.log(\"obrazek: \"+uploadTask);\r\n  // firestore.Collection('posts').oc(this.props.location.id).update({\r\n  //   title: title,\r\n  //   text: text,\r\n  //   color: color\r\n  // })\r\n  \r\n \r\n  //fire.database().ref().child('posts').child('1').set(data);\r\n  console.log(this.props.posts);\r\n}\r\ncomponentDidUpdate(){\r\n  console.log(this.props.posts);\r\n  \r\n this.onprops();\r\n }\r\n _handleImageChange(e){\r\n  e.preventDefault();\r\n\r\n  let reader = new FileReader();\r\n  let file = e.target.files[0];\r\n\r\n  reader.onloadend = () => {\r\n    this.setState({\r\n      file: file,\r\n      imagePreviewUrl: reader.result\r\n    });\r\n  }\r\n\r\n  reader.readAsDataURL(file)\r\n\r\n };\r\n\r\n  render() {\r\n    //const { quill, quillRef } = useQuill();\r\n    //this.onprops();\r\n      //wyśietlanie listy projektów\r\n      let {imagePreviewUrl} = this.state;\r\n      let $imagePreview = null;\r\n      if (imagePreviewUrl) {\r\n        $imagePreview = (<img src={imagePreviewUrl} />);\r\n      } else {\r\n        $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\r\n      }\r\n      console.log(this.props.location.title);\r\n     console.log(this.props.images);\r\n      return (<div>\r\n        <h1>Edytuj</h1>\r\n        <form>\r\n         \r\n        <div className=\"form-group\">\r\n        {this.state.id}\r\n         <label htmlFor=\"title\">Tytuł</label>\r\n         <input type=\"textarea\"  value={this.state.title} onChange={this.handleChangeTitle.bind(this)} name=\"title\" className=\"form-control\" placeholder=\"Enter title\" />\r\n         <small id=\"emailHelp\" className=\"form-text \">We'll never share your email with anyone else.</small>\r\n        </div>\r\n         <div className=\"form-group\">\r\n        <label htmlFor=\"exampleInputPassword1\">treść</label>\r\n        <textarea value={this.state.text} style={{height: '500px'}} name=\"name\" rows=\"7\" onChange={this.handleChangeText.bind(this)} type=\"textarea\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Text\" ></textarea>\r\n      <input name=\"color\" value={this.state.color} type=\"color\" id=\"myColor\" onChange={this.handleChangeColor.bind(this)} ></input>\r\n        </div>\r\n        <div className=\"form-group\">\r\n        <input className=\"fileInput\" \r\n            type=\"file\" \r\n            onChange={this.handleImageAsFile} />\r\n            </div>\r\n        <button type=\"submit\" onClick={this.login} className=\"btn btn-primary\">Usuń</button>\r\n        <div className=\"imgPreview\">\r\n          {$imagePreview}\r\n        </div>\r\n        \r\n\r\n      \r\n        <button onClick={this.update} style={{marginLeft: '25px'}} className=\"btn btn-success\">Zmień</button>\r\n   </form>\r\n   <div style={{ width: 500, height: 300 }}>\r\n   <ReactQuill theme=\"snow\" value={value} onChange={setValue} />\r\n    </div>\r\n   {this.props.images.map(function(object,i){\r\n\r\nreturn (\r\n\r\n<div>\r\n       {\r\n            object[0] ==this.state.id && <p><img src={object[1]} style={{width: '150px'}}></img>  <button onClick={() => this.delete(object[0],object[2])} className=\"btn btn-primary\">Usuń</button></p>\r\n       }\r\n    </div>)\r\n},this)}\r\n   </div>\r\n      )\r\n   \r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    \r\n    posts: state.posts,\r\n    images: state.allposts.statPostImages\r\n  }\r\n};\r\nconst mapDispatchToProps = { postsFetched, getAllStatPostsImages };\r\n\r\nexport const EditContainer = connect(mapStateToProps, mapDispatchToProps)(Edit);"]},"metadata":{},"sourceType":"module"}